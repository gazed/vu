// Code generated by "stringer -output=enum_string_7.go -type=TimeDomainKHR,ToolPurposeFlagBits,ValidationCacheHeaderVersionEXT,ValidationCheckEXT,ValidationFeatureDisableEXT,ValidationFeatureEnableEXT,VendorId,VertexInputRate,VideoCapabilityFlagBitsKHR,VideoChromaSubsamplingFlagBitsKHR,VideoCodecOperationFlagBitsKHR,VideoCodingControlFlagBitsKHR,VideoComponentBitDepthFlagBitsKHR,VideoDecodeCapabilityFlagBitsKHR,VideoDecodeH264PictureLayoutFlagBitsKHR,VideoDecodeUsageFlagBitsKHR,VideoEncodeCapabilityFlagBitsKHR,VideoEncodeContentFlagBitsKHR,VideoEncodeFeedbackFlagBitsKHR,VideoEncodeH264CapabilityFlagBitsKHR,VideoEncodeH264RateControlFlagBitsKHR,VideoEncodeH264StdFlagBitsKHR,VideoEncodeH265CapabilityFlagBitsKHR,VideoEncodeH265CtbSizeFlagBitsKHR,VideoEncodeH265RateControlFlagBitsKHR,VideoEncodeH265StdFlagBitsKHR,VideoEncodeH265TransformBlockSizeFlagBitsKHR,VideoEncodeRateControlModeFlagBitsKHR,VideoEncodeTuningModeKHR,VideoEncodeUsageFlagBitsKHR,VideoSessionCreateFlagBitsKHR"; DO NOT EDIT.

package vk

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TIME_DOMAIN_DEVICE_KHR-0]
	_ = x[TIME_DOMAIN_CLOCK_MONOTONIC_KHR-1]
	_ = x[TIME_DOMAIN_CLOCK_MONOTONIC_RAW_KHR-2]
	_ = x[TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_KHR-3]
	_ = x[TIME_DOMAIN_CLOCK_MONOTONIC_EXT-1]
	_ = x[TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT-2]
	_ = x[TIME_DOMAIN_DEVICE_EXT-0]
	_ = x[TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT-3]
}

const _TimeDomainKHR_name = "TIME_DOMAIN_DEVICE_KHRTIME_DOMAIN_CLOCK_MONOTONIC_KHRTIME_DOMAIN_CLOCK_MONOTONIC_RAW_KHRTIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_KHR"

var _TimeDomainKHR_index = [...]uint8{0, 22, 53, 88, 129}

func (i TimeDomainKHR) String() string {
	if i < 0 || i >= TimeDomainKHR(len(_TimeDomainKHR_index)-1) {
		return "TimeDomainKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TimeDomainKHR_name[_TimeDomainKHR_index[i]:_TimeDomainKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TOOL_PURPOSE_VALIDATION_BIT-1]
	_ = x[TOOL_PURPOSE_PROFILING_BIT-2]
	_ = x[TOOL_PURPOSE_TRACING_BIT-4]
	_ = x[TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT-8]
	_ = x[TOOL_PURPOSE_MODIFYING_FEATURES_BIT-16]
	_ = x[TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT-1000245000]
	_ = x[TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT-1000245000]
	_ = x[TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT-8]
	_ = x[TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT-16]
	_ = x[TOOL_PURPOSE_PROFILING_BIT_EXT-2]
	_ = x[TOOL_PURPOSE_TRACING_BIT_EXT-4]
	_ = x[TOOL_PURPOSE_VALIDATION_BIT_EXT-1]
}

const (
	_ToolPurposeFlagBits_name_0 = "TOOL_PURPOSE_VALIDATION_BITTOOL_PURPOSE_PROFILING_BIT"
	_ToolPurposeFlagBits_name_1 = "TOOL_PURPOSE_TRACING_BIT"
	_ToolPurposeFlagBits_name_2 = "TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT"
	_ToolPurposeFlagBits_name_3 = "TOOL_PURPOSE_MODIFYING_FEATURES_BIT"
	_ToolPurposeFlagBits_name_4 = "TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT"
)

var (
	_ToolPurposeFlagBits_index_0 = [...]uint8{0, 27, 53}
)

func (i ToolPurposeFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ToolPurposeFlagBits_name_0[_ToolPurposeFlagBits_index_0[i]:_ToolPurposeFlagBits_index_0[i+1]]
	case i == 4:
		return _ToolPurposeFlagBits_name_1
	case i == 8:
		return _ToolPurposeFlagBits_name_2
	case i == 16:
		return _ToolPurposeFlagBits_name_3
	case i == 1000245000:
		return _ToolPurposeFlagBits_name_4
	default:
		return "ToolPurposeFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VALIDATION_CACHE_HEADER_VERSION_ONE_EXT-1]
}

const _ValidationCacheHeaderVersionEXT_name = "VALIDATION_CACHE_HEADER_VERSION_ONE_EXT"

var _ValidationCacheHeaderVersionEXT_index = [...]uint8{0, 39}

func (i ValidationCacheHeaderVersionEXT) String() string {
	i -= 1
	if i < 0 || i >= ValidationCacheHeaderVersionEXT(len(_ValidationCacheHeaderVersionEXT_index)-1) {
		return "ValidationCacheHeaderVersionEXT(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ValidationCacheHeaderVersionEXT_name[_ValidationCacheHeaderVersionEXT_index[i]:_ValidationCacheHeaderVersionEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VALIDATION_CHECK_ALL_EXT-0]
	_ = x[VALIDATION_CHECK_SHADERS_EXT-1]
}

const _ValidationCheckEXT_name = "VALIDATION_CHECK_ALL_EXTVALIDATION_CHECK_SHADERS_EXT"

var _ValidationCheckEXT_index = [...]uint8{0, 24, 52}

func (i ValidationCheckEXT) String() string {
	if i < 0 || i >= ValidationCheckEXT(len(_ValidationCheckEXT_index)-1) {
		return "ValidationCheckEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ValidationCheckEXT_name[_ValidationCheckEXT_index[i]:_ValidationCheckEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VALIDATION_FEATURE_DISABLE_ALL_EXT-0]
	_ = x[VALIDATION_FEATURE_DISABLE_SHADERS_EXT-1]
	_ = x[VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT-2]
	_ = x[VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT-3]
	_ = x[VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT-4]
	_ = x[VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT-5]
	_ = x[VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT-6]
	_ = x[VALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT-7]
}

const _ValidationFeatureDisableEXT_name = "VALIDATION_FEATURE_DISABLE_ALL_EXTVALIDATION_FEATURE_DISABLE_SHADERS_EXTVALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXTVALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXTVALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXTVALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXTVALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXTVALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT"

var _ValidationFeatureDisableEXT_index = [...]uint16{0, 34, 72, 116, 161, 208, 250, 295, 349}

func (i ValidationFeatureDisableEXT) String() string {
	if i < 0 || i >= ValidationFeatureDisableEXT(len(_ValidationFeatureDisableEXT_index)-1) {
		return "ValidationFeatureDisableEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ValidationFeatureDisableEXT_name[_ValidationFeatureDisableEXT_index[i]:_ValidationFeatureDisableEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT-0]
	_ = x[VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT-1]
	_ = x[VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT-2]
	_ = x[VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT-3]
	_ = x[VALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION_EXT-4]
}

const _ValidationFeatureEnableEXT_name = "VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXTVALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXTVALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXTVALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXTVALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION_EXT"

var _ValidationFeatureEnableEXT_index = [...]uint8{0, 42, 105, 149, 191, 247}

func (i ValidationFeatureEnableEXT) String() string {
	if i < 0 || i >= ValidationFeatureEnableEXT(len(_ValidationFeatureEnableEXT_index)-1) {
		return "ValidationFeatureEnableEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ValidationFeatureEnableEXT_name[_ValidationFeatureEnableEXT_index[i]:_ValidationFeatureEnableEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VENDOR_ID_VIV-65537]
	_ = x[VENDOR_ID_VSI-65538]
	_ = x[VENDOR_ID_KAZAN-65539]
	_ = x[VENDOR_ID_CODEPLAY-65540]
	_ = x[VENDOR_ID_MESA-65541]
	_ = x[VENDOR_ID_POCL-65542]
	_ = x[VENDOR_ID_MOBILEYE-65543]
}

const _VendorId_name = "VENDOR_ID_VIVVENDOR_ID_VSIVENDOR_ID_KAZANVENDOR_ID_CODEPLAYVENDOR_ID_MESAVENDOR_ID_POCLVENDOR_ID_MOBILEYE"

var _VendorId_index = [...]uint8{0, 13, 26, 41, 59, 73, 87, 105}

func (i VendorId) String() string {
	i -= 65537
	if i < 0 || i >= VendorId(len(_VendorId_index)-1) {
		return "VendorId(" + strconv.FormatInt(int64(i+65537), 10) + ")"
	}
	return _VendorId_name[_VendorId_index[i]:_VendorId_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VERTEX_INPUT_RATE_VERTEX-0]
	_ = x[VERTEX_INPUT_RATE_INSTANCE-1]
}

const _VertexInputRate_name = "VERTEX_INPUT_RATE_VERTEXVERTEX_INPUT_RATE_INSTANCE"

var _VertexInputRate_index = [...]uint8{0, 24, 50}

func (i VertexInputRate) String() string {
	if i < 0 || i >= VertexInputRate(len(_VertexInputRate_index)-1) {
		return "VertexInputRate(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _VertexInputRate_name[_VertexInputRate_index[i]:_VertexInputRate_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_CAPABILITY_PROTECTED_CONTENT_BIT_KHR-1]
	_ = x[VIDEO_CAPABILITY_SEPARATE_REFERENCE_IMAGES_BIT_KHR-2]
}

const _VideoCapabilityFlagBitsKHR_name = "VIDEO_CAPABILITY_PROTECTED_CONTENT_BIT_KHRVIDEO_CAPABILITY_SEPARATE_REFERENCE_IMAGES_BIT_KHR"

var _VideoCapabilityFlagBitsKHR_index = [...]uint8{0, 42, 92}

func (i VideoCapabilityFlagBitsKHR) String() string {
	i -= 1
	if i >= VideoCapabilityFlagBitsKHR(len(_VideoCapabilityFlagBitsKHR_index)-1) {
		return "VideoCapabilityFlagBitsKHR(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _VideoCapabilityFlagBitsKHR_name[_VideoCapabilityFlagBitsKHR_index[i]:_VideoCapabilityFlagBitsKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_CHROMA_SUBSAMPLING_INVALID_KHR-0]
	_ = x[VIDEO_CHROMA_SUBSAMPLING_MONOCHROME_BIT_KHR-1]
	_ = x[VIDEO_CHROMA_SUBSAMPLING_420_BIT_KHR-2]
	_ = x[VIDEO_CHROMA_SUBSAMPLING_422_BIT_KHR-4]
	_ = x[VIDEO_CHROMA_SUBSAMPLING_444_BIT_KHR-8]
}

const (
	_VideoChromaSubsamplingFlagBitsKHR_name_0 = "VIDEO_CHROMA_SUBSAMPLING_INVALID_KHRVIDEO_CHROMA_SUBSAMPLING_MONOCHROME_BIT_KHRVIDEO_CHROMA_SUBSAMPLING_420_BIT_KHR"
	_VideoChromaSubsamplingFlagBitsKHR_name_1 = "VIDEO_CHROMA_SUBSAMPLING_422_BIT_KHR"
	_VideoChromaSubsamplingFlagBitsKHR_name_2 = "VIDEO_CHROMA_SUBSAMPLING_444_BIT_KHR"
)

var (
	_VideoChromaSubsamplingFlagBitsKHR_index_0 = [...]uint8{0, 36, 79, 115}
)

func (i VideoChromaSubsamplingFlagBitsKHR) String() string {
	switch {
	case i <= 2:
		return _VideoChromaSubsamplingFlagBitsKHR_name_0[_VideoChromaSubsamplingFlagBitsKHR_index_0[i]:_VideoChromaSubsamplingFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _VideoChromaSubsamplingFlagBitsKHR_name_1
	case i == 8:
		return _VideoChromaSubsamplingFlagBitsKHR_name_2
	default:
		return "VideoChromaSubsamplingFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_CODEC_OPERATION_NONE_KHR-0]
	_ = x[VIDEO_CODEC_OPERATION_ENCODE_H264_BIT_KHR-1000038000]
	_ = x[VIDEO_CODEC_OPERATION_ENCODE_H265_BIT_KHR-1000039000]
	_ = x[VIDEO_CODEC_OPERATION_DECODE_H264_BIT_KHR-1000040000]
	_ = x[VIDEO_CODEC_OPERATION_DECODE_H265_BIT_KHR-1000187000]
}

const (
	_VideoCodecOperationFlagBitsKHR_name_0 = "VIDEO_CODEC_OPERATION_NONE_KHR"
	_VideoCodecOperationFlagBitsKHR_name_1 = "VIDEO_CODEC_OPERATION_ENCODE_H264_BIT_KHR"
	_VideoCodecOperationFlagBitsKHR_name_2 = "VIDEO_CODEC_OPERATION_ENCODE_H265_BIT_KHR"
	_VideoCodecOperationFlagBitsKHR_name_3 = "VIDEO_CODEC_OPERATION_DECODE_H264_BIT_KHR"
	_VideoCodecOperationFlagBitsKHR_name_4 = "VIDEO_CODEC_OPERATION_DECODE_H265_BIT_KHR"
)

func (i VideoCodecOperationFlagBitsKHR) String() string {
	switch {
	case i == 0:
		return _VideoCodecOperationFlagBitsKHR_name_0
	case i == 1000038000:
		return _VideoCodecOperationFlagBitsKHR_name_1
	case i == 1000039000:
		return _VideoCodecOperationFlagBitsKHR_name_2
	case i == 1000040000:
		return _VideoCodecOperationFlagBitsKHR_name_3
	case i == 1000187000:
		return _VideoCodecOperationFlagBitsKHR_name_4
	default:
		return "VideoCodecOperationFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_CODING_CONTROL_RESET_BIT_KHR-1]
	_ = x[VIDEO_CODING_CONTROL_ENCODE_RATE_CONTROL_BIT_KHR-1000299000]
	_ = x[VIDEO_CODING_CONTROL_ENCODE_QUALITY_LEVEL_BIT_KHR-1000299000]
}

const (
	_VideoCodingControlFlagBitsKHR_name_0 = "VIDEO_CODING_CONTROL_RESET_BIT_KHR"
	_VideoCodingControlFlagBitsKHR_name_1 = "VIDEO_CODING_CONTROL_ENCODE_RATE_CONTROL_BIT_KHR"
)

func (i VideoCodingControlFlagBitsKHR) String() string {
	switch {
	case i == 1:
		return _VideoCodingControlFlagBitsKHR_name_0
	case i == 1000299000:
		return _VideoCodingControlFlagBitsKHR_name_1
	default:
		return "VideoCodingControlFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_COMPONENT_BIT_DEPTH_INVALID_KHR-0]
	_ = x[VIDEO_COMPONENT_BIT_DEPTH_8_BIT_KHR-1]
	_ = x[VIDEO_COMPONENT_BIT_DEPTH_10_BIT_KHR-4]
	_ = x[VIDEO_COMPONENT_BIT_DEPTH_12_BIT_KHR-16]
}

const (
	_VideoComponentBitDepthFlagBitsKHR_name_0 = "VIDEO_COMPONENT_BIT_DEPTH_INVALID_KHRVIDEO_COMPONENT_BIT_DEPTH_8_BIT_KHR"
	_VideoComponentBitDepthFlagBitsKHR_name_1 = "VIDEO_COMPONENT_BIT_DEPTH_10_BIT_KHR"
	_VideoComponentBitDepthFlagBitsKHR_name_2 = "VIDEO_COMPONENT_BIT_DEPTH_12_BIT_KHR"
)

var (
	_VideoComponentBitDepthFlagBitsKHR_index_0 = [...]uint8{0, 37, 72}
)

func (i VideoComponentBitDepthFlagBitsKHR) String() string {
	switch {
	case i <= 1:
		return _VideoComponentBitDepthFlagBitsKHR_name_0[_VideoComponentBitDepthFlagBitsKHR_index_0[i]:_VideoComponentBitDepthFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _VideoComponentBitDepthFlagBitsKHR_name_1
	case i == 16:
		return _VideoComponentBitDepthFlagBitsKHR_name_2
	default:
		return "VideoComponentBitDepthFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_COINCIDE_BIT_KHR-1]
	_ = x[VIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_DISTINCT_BIT_KHR-2]
}

const _VideoDecodeCapabilityFlagBitsKHR_name = "VIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_COINCIDE_BIT_KHRVIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_DISTINCT_BIT_KHR"

var _VideoDecodeCapabilityFlagBitsKHR_index = [...]uint8{0, 55, 110}

func (i VideoDecodeCapabilityFlagBitsKHR) String() string {
	i -= 1
	if i >= VideoDecodeCapabilityFlagBitsKHR(len(_VideoDecodeCapabilityFlagBitsKHR_index)-1) {
		return "VideoDecodeCapabilityFlagBitsKHR(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _VideoDecodeCapabilityFlagBitsKHR_name[_VideoDecodeCapabilityFlagBitsKHR_index[i]:_VideoDecodeCapabilityFlagBitsKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_DECODE_H264_PICTURE_LAYOUT_PROGRESSIVE_KHR-0]
	_ = x[VIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_INTERLEAVED_LINES_BIT_KHR-1]
	_ = x[VIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_SEPARATE_PLANES_BIT_KHR-2]
}

const _VideoDecodeH264PictureLayoutFlagBitsKHR_name = "VIDEO_DECODE_H264_PICTURE_LAYOUT_PROGRESSIVE_KHRVIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_INTERLEAVED_LINES_BIT_KHRVIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_SEPARATE_PLANES_BIT_KHR"

var _VideoDecodeH264PictureLayoutFlagBitsKHR_index = [...]uint8{0, 48, 117, 184}

func (i VideoDecodeH264PictureLayoutFlagBitsKHR) String() string {
	if i >= VideoDecodeH264PictureLayoutFlagBitsKHR(len(_VideoDecodeH264PictureLayoutFlagBitsKHR_index)-1) {
		return "VideoDecodeH264PictureLayoutFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _VideoDecodeH264PictureLayoutFlagBitsKHR_name[_VideoDecodeH264PictureLayoutFlagBitsKHR_index[i]:_VideoDecodeH264PictureLayoutFlagBitsKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_DECODE_USAGE_DEFAULT_KHR-0]
	_ = x[VIDEO_DECODE_USAGE_TRANSCODING_BIT_KHR-1]
	_ = x[VIDEO_DECODE_USAGE_OFFLINE_BIT_KHR-2]
	_ = x[VIDEO_DECODE_USAGE_STREAMING_BIT_KHR-4]
}

const (
	_VideoDecodeUsageFlagBitsKHR_name_0 = "VIDEO_DECODE_USAGE_DEFAULT_KHRVIDEO_DECODE_USAGE_TRANSCODING_BIT_KHRVIDEO_DECODE_USAGE_OFFLINE_BIT_KHR"
	_VideoDecodeUsageFlagBitsKHR_name_1 = "VIDEO_DECODE_USAGE_STREAMING_BIT_KHR"
)

var (
	_VideoDecodeUsageFlagBitsKHR_index_0 = [...]uint8{0, 30, 68, 102}
)

func (i VideoDecodeUsageFlagBitsKHR) String() string {
	switch {
	case i <= 2:
		return _VideoDecodeUsageFlagBitsKHR_name_0[_VideoDecodeUsageFlagBitsKHR_index_0[i]:_VideoDecodeUsageFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _VideoDecodeUsageFlagBitsKHR_name_1
	default:
		return "VideoDecodeUsageFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_ENCODE_CAPABILITY_PRECEDING_EXTERNALLY_ENCODED_BYTES_BIT_KHR-1]
	_ = x[VIDEO_ENCODE_CAPABILITY_INSUFFICIENT_BITSTREAM_BUFFER_RANGE_DETECTION_BIT_KHR-2]
}

const _VideoEncodeCapabilityFlagBitsKHR_name = "VIDEO_ENCODE_CAPABILITY_PRECEDING_EXTERNALLY_ENCODED_BYTES_BIT_KHRVIDEO_ENCODE_CAPABILITY_INSUFFICIENT_BITSTREAM_BUFFER_RANGE_DETECTION_BIT_KHR"

var _VideoEncodeCapabilityFlagBitsKHR_index = [...]uint8{0, 66, 143}

func (i VideoEncodeCapabilityFlagBitsKHR) String() string {
	i -= 1
	if i >= VideoEncodeCapabilityFlagBitsKHR(len(_VideoEncodeCapabilityFlagBitsKHR_index)-1) {
		return "VideoEncodeCapabilityFlagBitsKHR(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _VideoEncodeCapabilityFlagBitsKHR_name[_VideoEncodeCapabilityFlagBitsKHR_index[i]:_VideoEncodeCapabilityFlagBitsKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_ENCODE_CONTENT_DEFAULT_KHR-0]
	_ = x[VIDEO_ENCODE_CONTENT_CAMERA_BIT_KHR-1]
	_ = x[VIDEO_ENCODE_CONTENT_DESKTOP_BIT_KHR-2]
	_ = x[VIDEO_ENCODE_CONTENT_RENDERED_BIT_KHR-4]
}

const (
	_VideoEncodeContentFlagBitsKHR_name_0 = "VIDEO_ENCODE_CONTENT_DEFAULT_KHRVIDEO_ENCODE_CONTENT_CAMERA_BIT_KHRVIDEO_ENCODE_CONTENT_DESKTOP_BIT_KHR"
	_VideoEncodeContentFlagBitsKHR_name_1 = "VIDEO_ENCODE_CONTENT_RENDERED_BIT_KHR"
)

var (
	_VideoEncodeContentFlagBitsKHR_index_0 = [...]uint8{0, 32, 67, 103}
)

func (i VideoEncodeContentFlagBitsKHR) String() string {
	switch {
	case i <= 2:
		return _VideoEncodeContentFlagBitsKHR_name_0[_VideoEncodeContentFlagBitsKHR_index_0[i]:_VideoEncodeContentFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _VideoEncodeContentFlagBitsKHR_name_1
	default:
		return "VideoEncodeContentFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_ENCODE_FEEDBACK_BITSTREAM_BUFFER_OFFSET_BIT_KHR-1]
	_ = x[VIDEO_ENCODE_FEEDBACK_BITSTREAM_BYTES_WRITTEN_BIT_KHR-2]
	_ = x[VIDEO_ENCODE_FEEDBACK_BITSTREAM_HAS_OVERRIDES_BIT_KHR-4]
}

const (
	_VideoEncodeFeedbackFlagBitsKHR_name_0 = "VIDEO_ENCODE_FEEDBACK_BITSTREAM_BUFFER_OFFSET_BIT_KHRVIDEO_ENCODE_FEEDBACK_BITSTREAM_BYTES_WRITTEN_BIT_KHR"
	_VideoEncodeFeedbackFlagBitsKHR_name_1 = "VIDEO_ENCODE_FEEDBACK_BITSTREAM_HAS_OVERRIDES_BIT_KHR"
)

var (
	_VideoEncodeFeedbackFlagBitsKHR_index_0 = [...]uint8{0, 53, 106}
)

func (i VideoEncodeFeedbackFlagBitsKHR) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _VideoEncodeFeedbackFlagBitsKHR_name_0[_VideoEncodeFeedbackFlagBitsKHR_index_0[i]:_VideoEncodeFeedbackFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _VideoEncodeFeedbackFlagBitsKHR_name_1
	default:
		return "VideoEncodeFeedbackFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_ENCODE_H264_CAPABILITY_HRD_COMPLIANCE_BIT_KHR-1]
	_ = x[VIDEO_ENCODE_H264_CAPABILITY_PREDICTION_WEIGHT_TABLE_GENERATED_BIT_KHR-2]
	_ = x[VIDEO_ENCODE_H264_CAPABILITY_ROW_UNALIGNED_SLICE_BIT_KHR-4]
	_ = x[VIDEO_ENCODE_H264_CAPABILITY_DIFFERENT_SLICE_TYPE_BIT_KHR-8]
	_ = x[VIDEO_ENCODE_H264_CAPABILITY_B_FRAME_IN_L0_LIST_BIT_KHR-16]
	_ = x[VIDEO_ENCODE_H264_CAPABILITY_B_FRAME_IN_L1_LIST_BIT_KHR-32]
	_ = x[VIDEO_ENCODE_H264_CAPABILITY_PER_PICTURE_TYPE_MIN_MAX_QP_BIT_KHR-64]
	_ = x[VIDEO_ENCODE_H264_CAPABILITY_PER_SLICE_CONSTANT_QP_BIT_KHR-128]
	_ = x[VIDEO_ENCODE_H264_CAPABILITY_GENERATE_PREFIX_NALU_BIT_KHR-256]
}

const (
	_VideoEncodeH264CapabilityFlagBitsKHR_name_0 = "VIDEO_ENCODE_H264_CAPABILITY_HRD_COMPLIANCE_BIT_KHRVIDEO_ENCODE_H264_CAPABILITY_PREDICTION_WEIGHT_TABLE_GENERATED_BIT_KHR"
	_VideoEncodeH264CapabilityFlagBitsKHR_name_1 = "VIDEO_ENCODE_H264_CAPABILITY_ROW_UNALIGNED_SLICE_BIT_KHR"
	_VideoEncodeH264CapabilityFlagBitsKHR_name_2 = "VIDEO_ENCODE_H264_CAPABILITY_DIFFERENT_SLICE_TYPE_BIT_KHR"
	_VideoEncodeH264CapabilityFlagBitsKHR_name_3 = "VIDEO_ENCODE_H264_CAPABILITY_B_FRAME_IN_L0_LIST_BIT_KHR"
	_VideoEncodeH264CapabilityFlagBitsKHR_name_4 = "VIDEO_ENCODE_H264_CAPABILITY_B_FRAME_IN_L1_LIST_BIT_KHR"
	_VideoEncodeH264CapabilityFlagBitsKHR_name_5 = "VIDEO_ENCODE_H264_CAPABILITY_PER_PICTURE_TYPE_MIN_MAX_QP_BIT_KHR"
	_VideoEncodeH264CapabilityFlagBitsKHR_name_6 = "VIDEO_ENCODE_H264_CAPABILITY_PER_SLICE_CONSTANT_QP_BIT_KHR"
	_VideoEncodeH264CapabilityFlagBitsKHR_name_7 = "VIDEO_ENCODE_H264_CAPABILITY_GENERATE_PREFIX_NALU_BIT_KHR"
)

var (
	_VideoEncodeH264CapabilityFlagBitsKHR_index_0 = [...]uint8{0, 51, 121}
)

func (i VideoEncodeH264CapabilityFlagBitsKHR) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _VideoEncodeH264CapabilityFlagBitsKHR_name_0[_VideoEncodeH264CapabilityFlagBitsKHR_index_0[i]:_VideoEncodeH264CapabilityFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _VideoEncodeH264CapabilityFlagBitsKHR_name_1
	case i == 8:
		return _VideoEncodeH264CapabilityFlagBitsKHR_name_2
	case i == 16:
		return _VideoEncodeH264CapabilityFlagBitsKHR_name_3
	case i == 32:
		return _VideoEncodeH264CapabilityFlagBitsKHR_name_4
	case i == 64:
		return _VideoEncodeH264CapabilityFlagBitsKHR_name_5
	case i == 128:
		return _VideoEncodeH264CapabilityFlagBitsKHR_name_6
	case i == 256:
		return _VideoEncodeH264CapabilityFlagBitsKHR_name_7
	default:
		return "VideoEncodeH264CapabilityFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_ENCODE_H264_RATE_CONTROL_ATTEMPT_HRD_COMPLIANCE_BIT_KHR-1]
	_ = x[VIDEO_ENCODE_H264_RATE_CONTROL_REGULAR_GOP_BIT_KHR-2]
	_ = x[VIDEO_ENCODE_H264_RATE_CONTROL_REFERENCE_PATTERN_FLAT_BIT_KHR-4]
	_ = x[VIDEO_ENCODE_H264_RATE_CONTROL_REFERENCE_PATTERN_DYADIC_BIT_KHR-8]
	_ = x[VIDEO_ENCODE_H264_RATE_CONTROL_TEMPORAL_LAYER_PATTERN_DYADIC_BIT_KHR-16]
}

const (
	_VideoEncodeH264RateControlFlagBitsKHR_name_0 = "VIDEO_ENCODE_H264_RATE_CONTROL_ATTEMPT_HRD_COMPLIANCE_BIT_KHRVIDEO_ENCODE_H264_RATE_CONTROL_REGULAR_GOP_BIT_KHR"
	_VideoEncodeH264RateControlFlagBitsKHR_name_1 = "VIDEO_ENCODE_H264_RATE_CONTROL_REFERENCE_PATTERN_FLAT_BIT_KHR"
	_VideoEncodeH264RateControlFlagBitsKHR_name_2 = "VIDEO_ENCODE_H264_RATE_CONTROL_REFERENCE_PATTERN_DYADIC_BIT_KHR"
	_VideoEncodeH264RateControlFlagBitsKHR_name_3 = "VIDEO_ENCODE_H264_RATE_CONTROL_TEMPORAL_LAYER_PATTERN_DYADIC_BIT_KHR"
)

var (
	_VideoEncodeH264RateControlFlagBitsKHR_index_0 = [...]uint8{0, 61, 111}
)

func (i VideoEncodeH264RateControlFlagBitsKHR) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _VideoEncodeH264RateControlFlagBitsKHR_name_0[_VideoEncodeH264RateControlFlagBitsKHR_index_0[i]:_VideoEncodeH264RateControlFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _VideoEncodeH264RateControlFlagBitsKHR_name_1
	case i == 8:
		return _VideoEncodeH264RateControlFlagBitsKHR_name_2
	case i == 16:
		return _VideoEncodeH264RateControlFlagBitsKHR_name_3
	default:
		return "VideoEncodeH264RateControlFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_ENCODE_H264_STD_SEPARATE_COLOR_PLANE_FLAG_SET_BIT_KHR-1]
	_ = x[VIDEO_ENCODE_H264_STD_QPPRIME_Y_ZERO_TRANSFORM_BYPASS_FLAG_SET_BIT_KHR-2]
	_ = x[VIDEO_ENCODE_H264_STD_DIRECT_SPATIAL_MV_PRED_FLAG_UNSET_BIT_KHR-1024]
	_ = x[VIDEO_ENCODE_H264_STD_ENTROPY_CODING_MODE_FLAG_UNSET_BIT_KHR-2048]
	_ = x[VIDEO_ENCODE_H264_STD_ENTROPY_CODING_MODE_FLAG_SET_BIT_KHR-4096]
	_ = x[VIDEO_ENCODE_H264_STD_DIRECT_8X8_INFERENCE_FLAG_UNSET_BIT_KHR-8192]
	_ = x[VIDEO_ENCODE_H264_STD_CONSTRAINED_INTRA_PRED_FLAG_SET_BIT_KHR-16384]
	_ = x[VIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_DISABLED_BIT_KHR-32768]
	_ = x[VIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_ENABLED_BIT_KHR-65536]
	_ = x[VIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_PARTIAL_BIT_KHR-131072]
	_ = x[VIDEO_ENCODE_H264_STD_SLICE_QP_DELTA_BIT_KHR-524288]
	_ = x[VIDEO_ENCODE_H264_STD_SCALING_MATRIX_PRESENT_FLAG_SET_BIT_KHR-4]
	_ = x[VIDEO_ENCODE_H264_STD_DIFFERENT_SLICE_QP_DELTA_BIT_KHR-1048576]
	_ = x[VIDEO_ENCODE_H264_STD_CHROMA_QP_INDEX_OFFSET_BIT_KHR-8]
	_ = x[VIDEO_ENCODE_H264_STD_SECOND_CHROMA_QP_INDEX_OFFSET_BIT_KHR-16]
	_ = x[VIDEO_ENCODE_H264_STD_PIC_INIT_QP_MINUS26_BIT_KHR-32]
	_ = x[VIDEO_ENCODE_H264_STD_WEIGHTED_PRED_FLAG_SET_BIT_KHR-64]
	_ = x[VIDEO_ENCODE_H264_STD_WEIGHTED_BIPRED_IDC_EXPLICIT_BIT_KHR-128]
	_ = x[VIDEO_ENCODE_H264_STD_WEIGHTED_BIPRED_IDC_IMPLICIT_BIT_KHR-256]
	_ = x[VIDEO_ENCODE_H264_STD_TRANSFORM_8X8_MODE_FLAG_SET_BIT_KHR-512]
}

const _VideoEncodeH264StdFlagBitsKHR_name = "VIDEO_ENCODE_H264_STD_SEPARATE_COLOR_PLANE_FLAG_SET_BIT_KHRVIDEO_ENCODE_H264_STD_QPPRIME_Y_ZERO_TRANSFORM_BYPASS_FLAG_SET_BIT_KHRVIDEO_ENCODE_H264_STD_SCALING_MATRIX_PRESENT_FLAG_SET_BIT_KHRVIDEO_ENCODE_H264_STD_CHROMA_QP_INDEX_OFFSET_BIT_KHRVIDEO_ENCODE_H264_STD_SECOND_CHROMA_QP_INDEX_OFFSET_BIT_KHRVIDEO_ENCODE_H264_STD_PIC_INIT_QP_MINUS26_BIT_KHRVIDEO_ENCODE_H264_STD_WEIGHTED_PRED_FLAG_SET_BIT_KHRVIDEO_ENCODE_H264_STD_WEIGHTED_BIPRED_IDC_EXPLICIT_BIT_KHRVIDEO_ENCODE_H264_STD_WEIGHTED_BIPRED_IDC_IMPLICIT_BIT_KHRVIDEO_ENCODE_H264_STD_TRANSFORM_8X8_MODE_FLAG_SET_BIT_KHRVIDEO_ENCODE_H264_STD_DIRECT_SPATIAL_MV_PRED_FLAG_UNSET_BIT_KHRVIDEO_ENCODE_H264_STD_ENTROPY_CODING_MODE_FLAG_UNSET_BIT_KHRVIDEO_ENCODE_H264_STD_ENTROPY_CODING_MODE_FLAG_SET_BIT_KHRVIDEO_ENCODE_H264_STD_DIRECT_8X8_INFERENCE_FLAG_UNSET_BIT_KHRVIDEO_ENCODE_H264_STD_CONSTRAINED_INTRA_PRED_FLAG_SET_BIT_KHRVIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_DISABLED_BIT_KHRVIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_ENABLED_BIT_KHRVIDEO_ENCODE_H264_STD_DEBLOCKING_FILTER_PARTIAL_BIT_KHRVIDEO_ENCODE_H264_STD_SLICE_QP_DELTA_BIT_KHRVIDEO_ENCODE_H264_STD_DIFFERENT_SLICE_QP_DELTA_BIT_KHR"

var _VideoEncodeH264StdFlagBitsKHR_map = map[VideoEncodeH264StdFlagBitsKHR]string{
	1:       _VideoEncodeH264StdFlagBitsKHR_name[0:59],
	2:       _VideoEncodeH264StdFlagBitsKHR_name[59:129],
	4:       _VideoEncodeH264StdFlagBitsKHR_name[129:190],
	8:       _VideoEncodeH264StdFlagBitsKHR_name[190:242],
	16:      _VideoEncodeH264StdFlagBitsKHR_name[242:301],
	32:      _VideoEncodeH264StdFlagBitsKHR_name[301:350],
	64:      _VideoEncodeH264StdFlagBitsKHR_name[350:402],
	128:     _VideoEncodeH264StdFlagBitsKHR_name[402:460],
	256:     _VideoEncodeH264StdFlagBitsKHR_name[460:518],
	512:     _VideoEncodeH264StdFlagBitsKHR_name[518:575],
	1024:    _VideoEncodeH264StdFlagBitsKHR_name[575:638],
	2048:    _VideoEncodeH264StdFlagBitsKHR_name[638:698],
	4096:    _VideoEncodeH264StdFlagBitsKHR_name[698:756],
	8192:    _VideoEncodeH264StdFlagBitsKHR_name[756:817],
	16384:   _VideoEncodeH264StdFlagBitsKHR_name[817:878],
	32768:   _VideoEncodeH264StdFlagBitsKHR_name[878:934],
	65536:   _VideoEncodeH264StdFlagBitsKHR_name[934:989],
	131072:  _VideoEncodeH264StdFlagBitsKHR_name[989:1044],
	524288:  _VideoEncodeH264StdFlagBitsKHR_name[1044:1088],
	1048576: _VideoEncodeH264StdFlagBitsKHR_name[1088:1142],
}

func (i VideoEncodeH264StdFlagBitsKHR) String() string {
	if str, ok := _VideoEncodeH264StdFlagBitsKHR_map[i]; ok {
		return str
	}
	return "VideoEncodeH264StdFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_ENCODE_H265_CAPABILITY_HRD_COMPLIANCE_BIT_KHR-1]
	_ = x[VIDEO_ENCODE_H265_CAPABILITY_PREDICTION_WEIGHT_TABLE_GENERATED_BIT_KHR-2]
	_ = x[VIDEO_ENCODE_H265_CAPABILITY_ROW_UNALIGNED_SLICE_SEGMENT_BIT_KHR-4]
	_ = x[VIDEO_ENCODE_H265_CAPABILITY_DIFFERENT_SLICE_SEGMENT_TYPE_BIT_KHR-8]
	_ = x[VIDEO_ENCODE_H265_CAPABILITY_B_FRAME_IN_L0_LIST_BIT_KHR-16]
	_ = x[VIDEO_ENCODE_H265_CAPABILITY_B_FRAME_IN_L1_LIST_BIT_KHR-32]
	_ = x[VIDEO_ENCODE_H265_CAPABILITY_PER_PICTURE_TYPE_MIN_MAX_QP_BIT_KHR-64]
	_ = x[VIDEO_ENCODE_H265_CAPABILITY_PER_SLICE_SEGMENT_CONSTANT_QP_BIT_KHR-128]
	_ = x[VIDEO_ENCODE_H265_CAPABILITY_MULTIPLE_TILES_PER_SLICE_SEGMENT_BIT_KHR-256]
	_ = x[VIDEO_ENCODE_H265_CAPABILITY_MULTIPLE_SLICE_SEGMENTS_PER_TILE_BIT_KHR-512]
}

const (
	_VideoEncodeH265CapabilityFlagBitsKHR_name_0 = "VIDEO_ENCODE_H265_CAPABILITY_HRD_COMPLIANCE_BIT_KHRVIDEO_ENCODE_H265_CAPABILITY_PREDICTION_WEIGHT_TABLE_GENERATED_BIT_KHR"
	_VideoEncodeH265CapabilityFlagBitsKHR_name_1 = "VIDEO_ENCODE_H265_CAPABILITY_ROW_UNALIGNED_SLICE_SEGMENT_BIT_KHR"
	_VideoEncodeH265CapabilityFlagBitsKHR_name_2 = "VIDEO_ENCODE_H265_CAPABILITY_DIFFERENT_SLICE_SEGMENT_TYPE_BIT_KHR"
	_VideoEncodeH265CapabilityFlagBitsKHR_name_3 = "VIDEO_ENCODE_H265_CAPABILITY_B_FRAME_IN_L0_LIST_BIT_KHR"
	_VideoEncodeH265CapabilityFlagBitsKHR_name_4 = "VIDEO_ENCODE_H265_CAPABILITY_B_FRAME_IN_L1_LIST_BIT_KHR"
	_VideoEncodeH265CapabilityFlagBitsKHR_name_5 = "VIDEO_ENCODE_H265_CAPABILITY_PER_PICTURE_TYPE_MIN_MAX_QP_BIT_KHR"
	_VideoEncodeH265CapabilityFlagBitsKHR_name_6 = "VIDEO_ENCODE_H265_CAPABILITY_PER_SLICE_SEGMENT_CONSTANT_QP_BIT_KHR"
	_VideoEncodeH265CapabilityFlagBitsKHR_name_7 = "VIDEO_ENCODE_H265_CAPABILITY_MULTIPLE_TILES_PER_SLICE_SEGMENT_BIT_KHR"
	_VideoEncodeH265CapabilityFlagBitsKHR_name_8 = "VIDEO_ENCODE_H265_CAPABILITY_MULTIPLE_SLICE_SEGMENTS_PER_TILE_BIT_KHR"
)

var (
	_VideoEncodeH265CapabilityFlagBitsKHR_index_0 = [...]uint8{0, 51, 121}
)

func (i VideoEncodeH265CapabilityFlagBitsKHR) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _VideoEncodeH265CapabilityFlagBitsKHR_name_0[_VideoEncodeH265CapabilityFlagBitsKHR_index_0[i]:_VideoEncodeH265CapabilityFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _VideoEncodeH265CapabilityFlagBitsKHR_name_1
	case i == 8:
		return _VideoEncodeH265CapabilityFlagBitsKHR_name_2
	case i == 16:
		return _VideoEncodeH265CapabilityFlagBitsKHR_name_3
	case i == 32:
		return _VideoEncodeH265CapabilityFlagBitsKHR_name_4
	case i == 64:
		return _VideoEncodeH265CapabilityFlagBitsKHR_name_5
	case i == 128:
		return _VideoEncodeH265CapabilityFlagBitsKHR_name_6
	case i == 256:
		return _VideoEncodeH265CapabilityFlagBitsKHR_name_7
	case i == 512:
		return _VideoEncodeH265CapabilityFlagBitsKHR_name_8
	default:
		return "VideoEncodeH265CapabilityFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_ENCODE_H265_CTB_SIZE_16_BIT_KHR-1]
	_ = x[VIDEO_ENCODE_H265_CTB_SIZE_32_BIT_KHR-2]
	_ = x[VIDEO_ENCODE_H265_CTB_SIZE_64_BIT_KHR-4]
}

const (
	_VideoEncodeH265CtbSizeFlagBitsKHR_name_0 = "VIDEO_ENCODE_H265_CTB_SIZE_16_BIT_KHRVIDEO_ENCODE_H265_CTB_SIZE_32_BIT_KHR"
	_VideoEncodeH265CtbSizeFlagBitsKHR_name_1 = "VIDEO_ENCODE_H265_CTB_SIZE_64_BIT_KHR"
)

var (
	_VideoEncodeH265CtbSizeFlagBitsKHR_index_0 = [...]uint8{0, 37, 74}
)

func (i VideoEncodeH265CtbSizeFlagBitsKHR) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _VideoEncodeH265CtbSizeFlagBitsKHR_name_0[_VideoEncodeH265CtbSizeFlagBitsKHR_index_0[i]:_VideoEncodeH265CtbSizeFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _VideoEncodeH265CtbSizeFlagBitsKHR_name_1
	default:
		return "VideoEncodeH265CtbSizeFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_ENCODE_H265_RATE_CONTROL_ATTEMPT_HRD_COMPLIANCE_BIT_KHR-1]
	_ = x[VIDEO_ENCODE_H265_RATE_CONTROL_REGULAR_GOP_BIT_KHR-2]
	_ = x[VIDEO_ENCODE_H265_RATE_CONTROL_REFERENCE_PATTERN_FLAT_BIT_KHR-4]
	_ = x[VIDEO_ENCODE_H265_RATE_CONTROL_REFERENCE_PATTERN_DYADIC_BIT_KHR-8]
	_ = x[VIDEO_ENCODE_H265_RATE_CONTROL_TEMPORAL_SUB_LAYER_PATTERN_DYADIC_BIT_KHR-16]
}

const (
	_VideoEncodeH265RateControlFlagBitsKHR_name_0 = "VIDEO_ENCODE_H265_RATE_CONTROL_ATTEMPT_HRD_COMPLIANCE_BIT_KHRVIDEO_ENCODE_H265_RATE_CONTROL_REGULAR_GOP_BIT_KHR"
	_VideoEncodeH265RateControlFlagBitsKHR_name_1 = "VIDEO_ENCODE_H265_RATE_CONTROL_REFERENCE_PATTERN_FLAT_BIT_KHR"
	_VideoEncodeH265RateControlFlagBitsKHR_name_2 = "VIDEO_ENCODE_H265_RATE_CONTROL_REFERENCE_PATTERN_DYADIC_BIT_KHR"
	_VideoEncodeH265RateControlFlagBitsKHR_name_3 = "VIDEO_ENCODE_H265_RATE_CONTROL_TEMPORAL_SUB_LAYER_PATTERN_DYADIC_BIT_KHR"
)

var (
	_VideoEncodeH265RateControlFlagBitsKHR_index_0 = [...]uint8{0, 61, 111}
)

func (i VideoEncodeH265RateControlFlagBitsKHR) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _VideoEncodeH265RateControlFlagBitsKHR_name_0[_VideoEncodeH265RateControlFlagBitsKHR_index_0[i]:_VideoEncodeH265RateControlFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _VideoEncodeH265RateControlFlagBitsKHR_name_1
	case i == 8:
		return _VideoEncodeH265RateControlFlagBitsKHR_name_2
	case i == 16:
		return _VideoEncodeH265RateControlFlagBitsKHR_name_3
	default:
		return "VideoEncodeH265RateControlFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_ENCODE_H265_STD_SEPARATE_COLOR_PLANE_FLAG_SET_BIT_KHR-1]
	_ = x[VIDEO_ENCODE_H265_STD_SAMPLE_ADAPTIVE_OFFSET_ENABLED_FLAG_SET_BIT_KHR-2]
	_ = x[VIDEO_ENCODE_H265_STD_TRANSFORM_SKIP_ENABLED_FLAG_SET_BIT_KHR-1024]
	_ = x[VIDEO_ENCODE_H265_STD_TRANSFORM_SKIP_ENABLED_FLAG_UNSET_BIT_KHR-2048]
	_ = x[VIDEO_ENCODE_H265_STD_PPS_SLICE_CHROMA_QP_OFFSETS_PRESENT_FLAG_SET_BIT_KHR-4096]
	_ = x[VIDEO_ENCODE_H265_STD_TRANSQUANT_BYPASS_ENABLED_FLAG_SET_BIT_KHR-8192]
	_ = x[VIDEO_ENCODE_H265_STD_CONSTRAINED_INTRA_PRED_FLAG_SET_BIT_KHR-16384]
	_ = x[VIDEO_ENCODE_H265_STD_ENTROPY_CODING_SYNC_ENABLED_FLAG_SET_BIT_KHR-32768]
	_ = x[VIDEO_ENCODE_H265_STD_DEBLOCKING_FILTER_OVERRIDE_ENABLED_FLAG_SET_BIT_KHR-65536]
	_ = x[VIDEO_ENCODE_H265_STD_DEPENDENT_SLICE_SEGMENTS_ENABLED_FLAG_SET_BIT_KHR-131072]
	_ = x[VIDEO_ENCODE_H265_STD_DEPENDENT_SLICE_SEGMENT_FLAG_SET_BIT_KHR-262144]
	_ = x[VIDEO_ENCODE_H265_STD_SLICE_QP_DELTA_BIT_KHR-524288]
	_ = x[VIDEO_ENCODE_H265_STD_SCALING_LIST_DATA_PRESENT_FLAG_SET_BIT_KHR-4]
	_ = x[VIDEO_ENCODE_H265_STD_DIFFERENT_SLICE_QP_DELTA_BIT_KHR-1048576]
	_ = x[VIDEO_ENCODE_H265_STD_PCM_ENABLED_FLAG_SET_BIT_KHR-8]
	_ = x[VIDEO_ENCODE_H265_STD_SPS_TEMPORAL_MVP_ENABLED_FLAG_SET_BIT_KHR-16]
	_ = x[VIDEO_ENCODE_H265_STD_INIT_QP_MINUS26_BIT_KHR-32]
	_ = x[VIDEO_ENCODE_H265_STD_WEIGHTED_PRED_FLAG_SET_BIT_KHR-64]
	_ = x[VIDEO_ENCODE_H265_STD_WEIGHTED_BIPRED_FLAG_SET_BIT_KHR-128]
	_ = x[VIDEO_ENCODE_H265_STD_LOG2_PARALLEL_MERGE_LEVEL_MINUS2_BIT_KHR-256]
	_ = x[VIDEO_ENCODE_H265_STD_SIGN_DATA_HIDING_ENABLED_FLAG_SET_BIT_KHR-512]
}

const _VideoEncodeH265StdFlagBitsKHR_name = "VIDEO_ENCODE_H265_STD_SEPARATE_COLOR_PLANE_FLAG_SET_BIT_KHRVIDEO_ENCODE_H265_STD_SAMPLE_ADAPTIVE_OFFSET_ENABLED_FLAG_SET_BIT_KHRVIDEO_ENCODE_H265_STD_SCALING_LIST_DATA_PRESENT_FLAG_SET_BIT_KHRVIDEO_ENCODE_H265_STD_PCM_ENABLED_FLAG_SET_BIT_KHRVIDEO_ENCODE_H265_STD_SPS_TEMPORAL_MVP_ENABLED_FLAG_SET_BIT_KHRVIDEO_ENCODE_H265_STD_INIT_QP_MINUS26_BIT_KHRVIDEO_ENCODE_H265_STD_WEIGHTED_PRED_FLAG_SET_BIT_KHRVIDEO_ENCODE_H265_STD_WEIGHTED_BIPRED_FLAG_SET_BIT_KHRVIDEO_ENCODE_H265_STD_LOG2_PARALLEL_MERGE_LEVEL_MINUS2_BIT_KHRVIDEO_ENCODE_H265_STD_SIGN_DATA_HIDING_ENABLED_FLAG_SET_BIT_KHRVIDEO_ENCODE_H265_STD_TRANSFORM_SKIP_ENABLED_FLAG_SET_BIT_KHRVIDEO_ENCODE_H265_STD_TRANSFORM_SKIP_ENABLED_FLAG_UNSET_BIT_KHRVIDEO_ENCODE_H265_STD_PPS_SLICE_CHROMA_QP_OFFSETS_PRESENT_FLAG_SET_BIT_KHRVIDEO_ENCODE_H265_STD_TRANSQUANT_BYPASS_ENABLED_FLAG_SET_BIT_KHRVIDEO_ENCODE_H265_STD_CONSTRAINED_INTRA_PRED_FLAG_SET_BIT_KHRVIDEO_ENCODE_H265_STD_ENTROPY_CODING_SYNC_ENABLED_FLAG_SET_BIT_KHRVIDEO_ENCODE_H265_STD_DEBLOCKING_FILTER_OVERRIDE_ENABLED_FLAG_SET_BIT_KHRVIDEO_ENCODE_H265_STD_DEPENDENT_SLICE_SEGMENTS_ENABLED_FLAG_SET_BIT_KHRVIDEO_ENCODE_H265_STD_DEPENDENT_SLICE_SEGMENT_FLAG_SET_BIT_KHRVIDEO_ENCODE_H265_STD_SLICE_QP_DELTA_BIT_KHRVIDEO_ENCODE_H265_STD_DIFFERENT_SLICE_QP_DELTA_BIT_KHR"

var _VideoEncodeH265StdFlagBitsKHR_map = map[VideoEncodeH265StdFlagBitsKHR]string{
	1:       _VideoEncodeH265StdFlagBitsKHR_name[0:59],
	2:       _VideoEncodeH265StdFlagBitsKHR_name[59:128],
	4:       _VideoEncodeH265StdFlagBitsKHR_name[128:192],
	8:       _VideoEncodeH265StdFlagBitsKHR_name[192:242],
	16:      _VideoEncodeH265StdFlagBitsKHR_name[242:305],
	32:      _VideoEncodeH265StdFlagBitsKHR_name[305:350],
	64:      _VideoEncodeH265StdFlagBitsKHR_name[350:402],
	128:     _VideoEncodeH265StdFlagBitsKHR_name[402:456],
	256:     _VideoEncodeH265StdFlagBitsKHR_name[456:518],
	512:     _VideoEncodeH265StdFlagBitsKHR_name[518:581],
	1024:    _VideoEncodeH265StdFlagBitsKHR_name[581:642],
	2048:    _VideoEncodeH265StdFlagBitsKHR_name[642:705],
	4096:    _VideoEncodeH265StdFlagBitsKHR_name[705:779],
	8192:    _VideoEncodeH265StdFlagBitsKHR_name[779:843],
	16384:   _VideoEncodeH265StdFlagBitsKHR_name[843:904],
	32768:   _VideoEncodeH265StdFlagBitsKHR_name[904:970],
	65536:   _VideoEncodeH265StdFlagBitsKHR_name[970:1043],
	131072:  _VideoEncodeH265StdFlagBitsKHR_name[1043:1114],
	262144:  _VideoEncodeH265StdFlagBitsKHR_name[1114:1176],
	524288:  _VideoEncodeH265StdFlagBitsKHR_name[1176:1220],
	1048576: _VideoEncodeH265StdFlagBitsKHR_name[1220:1274],
}

func (i VideoEncodeH265StdFlagBitsKHR) String() string {
	if str, ok := _VideoEncodeH265StdFlagBitsKHR_map[i]; ok {
		return str
	}
	return "VideoEncodeH265StdFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_4_BIT_KHR-1]
	_ = x[VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_8_BIT_KHR-2]
	_ = x[VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_16_BIT_KHR-4]
	_ = x[VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_32_BIT_KHR-8]
}

const (
	_VideoEncodeH265TransformBlockSizeFlagBitsKHR_name_0 = "VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_4_BIT_KHRVIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_8_BIT_KHR"
	_VideoEncodeH265TransformBlockSizeFlagBitsKHR_name_1 = "VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_16_BIT_KHR"
	_VideoEncodeH265TransformBlockSizeFlagBitsKHR_name_2 = "VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_32_BIT_KHR"
)

var (
	_VideoEncodeH265TransformBlockSizeFlagBitsKHR_index_0 = [...]uint8{0, 48, 96}
)

func (i VideoEncodeH265TransformBlockSizeFlagBitsKHR) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _VideoEncodeH265TransformBlockSizeFlagBitsKHR_name_0[_VideoEncodeH265TransformBlockSizeFlagBitsKHR_index_0[i]:_VideoEncodeH265TransformBlockSizeFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _VideoEncodeH265TransformBlockSizeFlagBitsKHR_name_1
	case i == 8:
		return _VideoEncodeH265TransformBlockSizeFlagBitsKHR_name_2
	default:
		return "VideoEncodeH265TransformBlockSizeFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_ENCODE_RATE_CONTROL_MODE_DEFAULT_KHR-0]
	_ = x[VIDEO_ENCODE_RATE_CONTROL_MODE_DISABLED_BIT_KHR-1]
	_ = x[VIDEO_ENCODE_RATE_CONTROL_MODE_CBR_BIT_KHR-2]
	_ = x[VIDEO_ENCODE_RATE_CONTROL_MODE_VBR_BIT_KHR-4]
}

const (
	_VideoEncodeRateControlModeFlagBitsKHR_name_0 = "VIDEO_ENCODE_RATE_CONTROL_MODE_DEFAULT_KHRVIDEO_ENCODE_RATE_CONTROL_MODE_DISABLED_BIT_KHRVIDEO_ENCODE_RATE_CONTROL_MODE_CBR_BIT_KHR"
	_VideoEncodeRateControlModeFlagBitsKHR_name_1 = "VIDEO_ENCODE_RATE_CONTROL_MODE_VBR_BIT_KHR"
)

var (
	_VideoEncodeRateControlModeFlagBitsKHR_index_0 = [...]uint8{0, 42, 89, 131}
)

func (i VideoEncodeRateControlModeFlagBitsKHR) String() string {
	switch {
	case i <= 2:
		return _VideoEncodeRateControlModeFlagBitsKHR_name_0[_VideoEncodeRateControlModeFlagBitsKHR_index_0[i]:_VideoEncodeRateControlModeFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _VideoEncodeRateControlModeFlagBitsKHR_name_1
	default:
		return "VideoEncodeRateControlModeFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_ENCODE_TUNING_MODE_DEFAULT_KHR-0]
	_ = x[VIDEO_ENCODE_TUNING_MODE_HIGH_QUALITY_KHR-1]
	_ = x[VIDEO_ENCODE_TUNING_MODE_LOW_LATENCY_KHR-2]
	_ = x[VIDEO_ENCODE_TUNING_MODE_ULTRA_LOW_LATENCY_KHR-3]
	_ = x[VIDEO_ENCODE_TUNING_MODE_LOSSLESS_KHR-4]
}

const _VideoEncodeTuningModeKHR_name = "VIDEO_ENCODE_TUNING_MODE_DEFAULT_KHRVIDEO_ENCODE_TUNING_MODE_HIGH_QUALITY_KHRVIDEO_ENCODE_TUNING_MODE_LOW_LATENCY_KHRVIDEO_ENCODE_TUNING_MODE_ULTRA_LOW_LATENCY_KHRVIDEO_ENCODE_TUNING_MODE_LOSSLESS_KHR"

var _VideoEncodeTuningModeKHR_index = [...]uint8{0, 36, 77, 117, 163, 200}

func (i VideoEncodeTuningModeKHR) String() string {
	if i < 0 || i >= VideoEncodeTuningModeKHR(len(_VideoEncodeTuningModeKHR_index)-1) {
		return "VideoEncodeTuningModeKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _VideoEncodeTuningModeKHR_name[_VideoEncodeTuningModeKHR_index[i]:_VideoEncodeTuningModeKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_ENCODE_USAGE_DEFAULT_KHR-0]
	_ = x[VIDEO_ENCODE_USAGE_TRANSCODING_BIT_KHR-1]
	_ = x[VIDEO_ENCODE_USAGE_STREAMING_BIT_KHR-2]
	_ = x[VIDEO_ENCODE_USAGE_RECORDING_BIT_KHR-4]
	_ = x[VIDEO_ENCODE_USAGE_CONFERENCING_BIT_KHR-8]
}

const (
	_VideoEncodeUsageFlagBitsKHR_name_0 = "VIDEO_ENCODE_USAGE_DEFAULT_KHRVIDEO_ENCODE_USAGE_TRANSCODING_BIT_KHRVIDEO_ENCODE_USAGE_STREAMING_BIT_KHR"
	_VideoEncodeUsageFlagBitsKHR_name_1 = "VIDEO_ENCODE_USAGE_RECORDING_BIT_KHR"
	_VideoEncodeUsageFlagBitsKHR_name_2 = "VIDEO_ENCODE_USAGE_CONFERENCING_BIT_KHR"
)

var (
	_VideoEncodeUsageFlagBitsKHR_index_0 = [...]uint8{0, 30, 68, 104}
)

func (i VideoEncodeUsageFlagBitsKHR) String() string {
	switch {
	case i <= 2:
		return _VideoEncodeUsageFlagBitsKHR_name_0[_VideoEncodeUsageFlagBitsKHR_index_0[i]:_VideoEncodeUsageFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _VideoEncodeUsageFlagBitsKHR_name_1
	case i == 8:
		return _VideoEncodeUsageFlagBitsKHR_name_2
	default:
		return "VideoEncodeUsageFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[VIDEO_SESSION_CREATE_PROTECTED_CONTENT_BIT_KHR-1]
	_ = x[VIDEO_SESSION_CREATE_ALLOW_ENCODE_PARAMETER_OPTIMIZATIONS_BIT_KHR-1000299000]
	_ = x[VIDEO_SESSION_CREATE_INLINE_QUERIES_BIT_KHR-1000515000]
}

const (
	_VideoSessionCreateFlagBitsKHR_name_0 = "VIDEO_SESSION_CREATE_PROTECTED_CONTENT_BIT_KHR"
	_VideoSessionCreateFlagBitsKHR_name_1 = "VIDEO_SESSION_CREATE_ALLOW_ENCODE_PARAMETER_OPTIMIZATIONS_BIT_KHR"
	_VideoSessionCreateFlagBitsKHR_name_2 = "VIDEO_SESSION_CREATE_INLINE_QUERIES_BIT_KHR"
)

func (i VideoSessionCreateFlagBitsKHR) String() string {
	switch {
	case i == 1:
		return _VideoSessionCreateFlagBitsKHR_name_0
	case i == 1000299000:
		return _VideoSessionCreateFlagBitsKHR_name_1
	case i == 1000515000:
		return _VideoSessionCreateFlagBitsKHR_name_2
	default:
		return "VideoSessionCreateFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
