//go:build darwin

// Code generated by go-vk from vk.xml at 2025-10-08 11:06:16.283605 -0400 EDT m=+1.104246501. DO NOT EDIT.

package vk

// #include <stdlib.h>
// #include "dlload.h"
import "C"
import "unsafe"

// CreateMetalSurfaceEXT: See https://www.khronos.org/registry/vulkan/specs/1.3-extensions/man/html/vkCreateMetalSurfaceEXT.html
func CreateMetalSurfaceEXT(instance Instance, createInfo *MetalSurfaceCreateInfoEXT, allocator *AllocationCallbacks) (surface SurfaceKHR, r error) {
	// Parameter is a singular input, requires translation - createInfo
	var pCreateInfo *_vkMetalSurfaceCreateInfoEXT
	if createInfo != nil {
		pCreateInfo = createInfo.Vulkanize()
	}

	// Parameter is a singular input, pass direct - allocator
	var pAllocator unsafe.Pointer
	if allocator != nil {
		pAllocator = unsafe.Pointer(allocator)
	}

	// surface is a binding-allocated single return value and will be populated by Vulkan
	ptr_pSurface := &surface

	var rsys C.uintptr_t

	if vkCreateMetalSurfaceEXT.fnHandle == nil {
		vkCreateMetalSurfaceEXT.fnHandle = C.SymbolFromName(dlHandle, unsafe.Pointer(sys_stringToBytePointer("vkCreateMetalSurfaceEXT")))
	}
	rsys = C.Trampoline6(vkCreateMetalSurfaceEXT.fnHandle, C.uintptr_t(uintptr(instance)), C.uintptr_t(uintptr(unsafe.Pointer(pCreateInfo))), C.uintptr_t(uintptr(unsafe.Pointer(pAllocator))), C.uintptr_t(uintptr(unsafe.Pointer(ptr_pSurface))), 0, 0)
	r = Result(uintptr(rsys))

	if r == Result(0) {
		r = SUCCESS
	}
	return
}

var vkCreateMetalSurfaceEXT = &vkCommand{"vkCreateMetalSurfaceEXT", 4, true, nil}
