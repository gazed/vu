// Code generated by "stringer -output=enum_string_2.go -type=ExternalMemoryFeatureFlagBits,ExternalMemoryFeatureFlagBitsNV,ExternalMemoryHandleTypeFlagBits,ExternalMemoryHandleTypeFlagBitsNV,ExternalSemaphoreFeatureFlagBits,ExternalSemaphoreHandleTypeFlagBits,FenceCreateFlagBits,FenceImportFlagBits,Filter,Format,FormatFeatureFlagBits,FormatFeatureFlagBits2KHR,FragmentShadingRateCombinerOpKHR,FragmentShadingRateNV,FragmentShadingRateTypeNV,FramebufferCreateFlagBits,FrontFace,GeometryFlagBitsKHR,GeometryInstanceFlagBitsKHR,GeometryTypeKHR,ImageAspectFlagBits,ImageCreateFlagBits,ImageLayout,ImageTiling,ImageType,ImageUsageFlagBits,ImageViewCreateFlagBits,ImageViewType,IndexType,IndirectCommandsLayoutUsageFlagBitsNV,IndirectCommandsTokenTypeNV"; DO NOT EDIT.

package vk

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT-1]
	_ = x[EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT-2]
	_ = x[EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT-4]
	_ = x[EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHR-1]
	_ = x[EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHR-2]
	_ = x[EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHR-4]
}

const (
	_ExternalMemoryFeatureFlagBits_name_0 = "EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BITEXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT"
	_ExternalMemoryFeatureFlagBits_name_1 = "EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT"
)

var (
	_ExternalMemoryFeatureFlagBits_index_0 = [...]uint8{0, 42, 80}
)

func (i ExternalMemoryFeatureFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ExternalMemoryFeatureFlagBits_name_0[_ExternalMemoryFeatureFlagBits_index_0[i]:_ExternalMemoryFeatureFlagBits_index_0[i+1]]
	case i == 4:
		return _ExternalMemoryFeatureFlagBits_name_1
	default:
		return "ExternalMemoryFeatureFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV-1]
	_ = x[EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV-2]
	_ = x[EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV-4]
}

const (
	_ExternalMemoryFeatureFlagBitsNV_name_0 = "EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NVEXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV"
	_ExternalMemoryFeatureFlagBitsNV_name_1 = "EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV"
)

var (
	_ExternalMemoryFeatureFlagBitsNV_index_0 = [...]uint8{0, 45, 86}
)

func (i ExternalMemoryFeatureFlagBitsNV) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ExternalMemoryFeatureFlagBitsNV_name_0[_ExternalMemoryFeatureFlagBitsNV_index_0[i]:_ExternalMemoryFeatureFlagBitsNV_index_0[i+1]]
	case i == 4:
		return _ExternalMemoryFeatureFlagBitsNV_name_1
	default:
		return "ExternalMemoryFeatureFlagBitsNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT-1]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT-2]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT-4]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT-8]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT-16]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT-32]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT-64]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT-1000125000]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT-1000178000]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT-1000178000]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_RDMA_ADDRESS_BIT_NV-1000371000]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR-8]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR-16]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR-32]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR-64]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR-1]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR-2]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR-4]
}

const (
	_ExternalMemoryHandleTypeFlagBits_name_0 = "EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BITEXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT"
	_ExternalMemoryHandleTypeFlagBits_name_1 = "EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT"
	_ExternalMemoryHandleTypeFlagBits_name_2 = "EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT"
	_ExternalMemoryHandleTypeFlagBits_name_3 = "EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT"
	_ExternalMemoryHandleTypeFlagBits_name_4 = "EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT"
	_ExternalMemoryHandleTypeFlagBits_name_5 = "EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT"
	_ExternalMemoryHandleTypeFlagBits_name_6 = "EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT"
	_ExternalMemoryHandleTypeFlagBits_name_7 = "EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT"
	_ExternalMemoryHandleTypeFlagBits_name_8 = "EXTERNAL_MEMORY_HANDLE_TYPE_RDMA_ADDRESS_BIT_NV"
)

var (
	_ExternalMemoryHandleTypeFlagBits_index_0 = [...]uint8{0, 41, 85}
)

func (i ExternalMemoryHandleTypeFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ExternalMemoryHandleTypeFlagBits_name_0[_ExternalMemoryHandleTypeFlagBits_index_0[i]:_ExternalMemoryHandleTypeFlagBits_index_0[i+1]]
	case i == 4:
		return _ExternalMemoryHandleTypeFlagBits_name_1
	case i == 8:
		return _ExternalMemoryHandleTypeFlagBits_name_2
	case i == 16:
		return _ExternalMemoryHandleTypeFlagBits_name_3
	case i == 32:
		return _ExternalMemoryHandleTypeFlagBits_name_4
	case i == 64:
		return _ExternalMemoryHandleTypeFlagBits_name_5
	case i == 1000125000:
		return _ExternalMemoryHandleTypeFlagBits_name_6
	case i == 1000178000:
		return _ExternalMemoryHandleTypeFlagBits_name_7
	case i == 1000371000:
		return _ExternalMemoryHandleTypeFlagBits_name_8
	default:
		return "ExternalMemoryHandleTypeFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV-1]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV-2]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV-4]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV-8]
}

const (
	_ExternalMemoryHandleTypeFlagBitsNV_name_0 = "EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NVEXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV"
	_ExternalMemoryHandleTypeFlagBitsNV_name_1 = "EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV"
	_ExternalMemoryHandleTypeFlagBitsNV_name_2 = "EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV"
)

var (
	_ExternalMemoryHandleTypeFlagBitsNV_index_0 = [...]uint8{0, 47, 98}
)

func (i ExternalMemoryHandleTypeFlagBitsNV) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ExternalMemoryHandleTypeFlagBitsNV_name_0[_ExternalMemoryHandleTypeFlagBitsNV_index_0[i]:_ExternalMemoryHandleTypeFlagBitsNV_index_0[i+1]]
	case i == 4:
		return _ExternalMemoryHandleTypeFlagBitsNV_name_1
	case i == 8:
		return _ExternalMemoryHandleTypeFlagBitsNV_name_2
	default:
		return "ExternalMemoryHandleTypeFlagBitsNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT-1]
	_ = x[EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT-2]
	_ = x[EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHR-1]
	_ = x[EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHR-2]
}

const _ExternalSemaphoreFeatureFlagBits_name = "EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BITEXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT"

var _ExternalSemaphoreFeatureFlagBits_index = [...]uint8{0, 41, 82}

func (i ExternalSemaphoreFeatureFlagBits) String() string {
	i -= 1
	if i >= ExternalSemaphoreFeatureFlagBits(len(_ExternalSemaphoreFeatureFlagBits_index)-1) {
		return "ExternalSemaphoreFeatureFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ExternalSemaphoreFeatureFlagBits_name[_ExternalSemaphoreFeatureFlagBits_index[i]:_ExternalSemaphoreFeatureFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT-1]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT-2]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT-4]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT-8]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT-16]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHR-8]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE_BIT-8]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR-1]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR-2]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR-4]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT_KHR-16]
}

const (
	_ExternalSemaphoreHandleTypeFlagBits_name_0 = "EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BITEXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT"
	_ExternalSemaphoreHandleTypeFlagBits_name_1 = "EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT"
	_ExternalSemaphoreHandleTypeFlagBits_name_2 = "EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT"
	_ExternalSemaphoreHandleTypeFlagBits_name_3 = "EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT"
)

var (
	_ExternalSemaphoreHandleTypeFlagBits_index_0 = [...]uint8{0, 44, 91}
)

func (i ExternalSemaphoreHandleTypeFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ExternalSemaphoreHandleTypeFlagBits_name_0[_ExternalSemaphoreHandleTypeFlagBits_index_0[i]:_ExternalSemaphoreHandleTypeFlagBits_index_0[i+1]]
	case i == 4:
		return _ExternalSemaphoreHandleTypeFlagBits_name_1
	case i == 8:
		return _ExternalSemaphoreHandleTypeFlagBits_name_2
	case i == 16:
		return _ExternalSemaphoreHandleTypeFlagBits_name_3
	default:
		return "ExternalSemaphoreHandleTypeFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FENCE_CREATE_SIGNALED_BIT-1]
}

const _FenceCreateFlagBits_name = "FENCE_CREATE_SIGNALED_BIT"

var _FenceCreateFlagBits_index = [...]uint8{0, 25}

func (i FenceCreateFlagBits) String() string {
	i -= 1
	if i >= FenceCreateFlagBits(len(_FenceCreateFlagBits_index)-1) {
		return "FenceCreateFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _FenceCreateFlagBits_name[_FenceCreateFlagBits_index[i]:_FenceCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FENCE_IMPORT_TEMPORARY_BIT-1]
	_ = x[FENCE_IMPORT_TEMPORARY_BIT_KHR-1]
}

const _FenceImportFlagBits_name = "FENCE_IMPORT_TEMPORARY_BIT"

var _FenceImportFlagBits_index = [...]uint8{0, 26}

func (i FenceImportFlagBits) String() string {
	i -= 1
	if i >= FenceImportFlagBits(len(_FenceImportFlagBits_index)-1) {
		return "FenceImportFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _FenceImportFlagBits_name[_FenceImportFlagBits_index[i]:_FenceImportFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FILTER_NEAREST-0]
	_ = x[FILTER_LINEAR-1]
	_ = x[FILTER_CUBIC_IMG-1000015000]
	_ = x[FILTER_CUBIC_EXT-1000015000]
}

const (
	_Filter_name_0 = "FILTER_NEARESTFILTER_LINEAR"
	_Filter_name_1 = "FILTER_CUBIC_IMG"
)

var (
	_Filter_index_0 = [...]uint8{0, 14, 27}
)

func (i Filter) String() string {
	switch {
	case 0 <= i && i <= 1:
		return _Filter_name_0[_Filter_index_0[i]:_Filter_index_0[i+1]]
	case i == 1000015000:
		return _Filter_name_1
	default:
		return "Filter(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FORMAT_UNDEFINED-0]
	_ = x[FORMAT_R4G4_UNORM_PACK8-1]
	_ = x[FORMAT_R4G4B4A4_UNORM_PACK16-2]
	_ = x[FORMAT_B4G4R4A4_UNORM_PACK16-3]
	_ = x[FORMAT_R5G6B5_UNORM_PACK16-4]
	_ = x[FORMAT_B5G6R5_UNORM_PACK16-5]
	_ = x[FORMAT_R5G5B5A1_UNORM_PACK16-6]
	_ = x[FORMAT_B5G5R5A1_UNORM_PACK16-7]
	_ = x[FORMAT_A1R5G5B5_UNORM_PACK16-8]
	_ = x[FORMAT_R8_UNORM-9]
	_ = x[FORMAT_R8_SNORM-10]
	_ = x[FORMAT_R8_USCALED-11]
	_ = x[FORMAT_R8_SSCALED-12]
	_ = x[FORMAT_R8_UINT-13]
	_ = x[FORMAT_R8_SINT-14]
	_ = x[FORMAT_R8_SRGB-15]
	_ = x[FORMAT_R8G8_UNORM-16]
	_ = x[FORMAT_R8G8_SNORM-17]
	_ = x[FORMAT_R8G8_USCALED-18]
	_ = x[FORMAT_R8G8_SSCALED-19]
	_ = x[FORMAT_R8G8_UINT-20]
	_ = x[FORMAT_R8G8_SINT-21]
	_ = x[FORMAT_R8G8_SRGB-22]
	_ = x[FORMAT_R8G8B8_UNORM-23]
	_ = x[FORMAT_R8G8B8_SNORM-24]
	_ = x[FORMAT_R8G8B8_USCALED-25]
	_ = x[FORMAT_R8G8B8_SSCALED-26]
	_ = x[FORMAT_R8G8B8_UINT-27]
	_ = x[FORMAT_R8G8B8_SINT-28]
	_ = x[FORMAT_R8G8B8_SRGB-29]
	_ = x[FORMAT_B8G8R8_UNORM-30]
	_ = x[FORMAT_B8G8R8_SNORM-31]
	_ = x[FORMAT_B8G8R8_USCALED-32]
	_ = x[FORMAT_B8G8R8_SSCALED-33]
	_ = x[FORMAT_B8G8R8_UINT-34]
	_ = x[FORMAT_B8G8R8_SINT-35]
	_ = x[FORMAT_B8G8R8_SRGB-36]
	_ = x[FORMAT_R8G8B8A8_UNORM-37]
	_ = x[FORMAT_R8G8B8A8_SNORM-38]
	_ = x[FORMAT_R8G8B8A8_USCALED-39]
	_ = x[FORMAT_R8G8B8A8_SSCALED-40]
	_ = x[FORMAT_R8G8B8A8_UINT-41]
	_ = x[FORMAT_R8G8B8A8_SINT-42]
	_ = x[FORMAT_R8G8B8A8_SRGB-43]
	_ = x[FORMAT_B8G8R8A8_UNORM-44]
	_ = x[FORMAT_B8G8R8A8_SNORM-45]
	_ = x[FORMAT_B8G8R8A8_USCALED-46]
	_ = x[FORMAT_B8G8R8A8_SSCALED-47]
	_ = x[FORMAT_B8G8R8A8_UINT-48]
	_ = x[FORMAT_B8G8R8A8_SINT-49]
	_ = x[FORMAT_B8G8R8A8_SRGB-50]
	_ = x[FORMAT_A8B8G8R8_UNORM_PACK32-51]
	_ = x[FORMAT_A8B8G8R8_SNORM_PACK32-52]
	_ = x[FORMAT_A8B8G8R8_USCALED_PACK32-53]
	_ = x[FORMAT_A8B8G8R8_SSCALED_PACK32-54]
	_ = x[FORMAT_A8B8G8R8_UINT_PACK32-55]
	_ = x[FORMAT_A8B8G8R8_SINT_PACK32-56]
	_ = x[FORMAT_A8B8G8R8_SRGB_PACK32-57]
	_ = x[FORMAT_A2R10G10B10_UNORM_PACK32-58]
	_ = x[FORMAT_A2R10G10B10_SNORM_PACK32-59]
	_ = x[FORMAT_A2R10G10B10_USCALED_PACK32-60]
	_ = x[FORMAT_A2R10G10B10_SSCALED_PACK32-61]
	_ = x[FORMAT_A2R10G10B10_UINT_PACK32-62]
	_ = x[FORMAT_A2R10G10B10_SINT_PACK32-63]
	_ = x[FORMAT_A2B10G10R10_UNORM_PACK32-64]
	_ = x[FORMAT_A2B10G10R10_SNORM_PACK32-65]
	_ = x[FORMAT_A2B10G10R10_USCALED_PACK32-66]
	_ = x[FORMAT_A2B10G10R10_SSCALED_PACK32-67]
	_ = x[FORMAT_A2B10G10R10_UINT_PACK32-68]
	_ = x[FORMAT_A2B10G10R10_SINT_PACK32-69]
	_ = x[FORMAT_R16_UNORM-70]
	_ = x[FORMAT_R16_SNORM-71]
	_ = x[FORMAT_R16_USCALED-72]
	_ = x[FORMAT_R16_SSCALED-73]
	_ = x[FORMAT_R16_UINT-74]
	_ = x[FORMAT_R16_SINT-75]
	_ = x[FORMAT_R16_SFLOAT-76]
	_ = x[FORMAT_R16G16_UNORM-77]
	_ = x[FORMAT_R16G16_SNORM-78]
	_ = x[FORMAT_R16G16_USCALED-79]
	_ = x[FORMAT_R16G16_SSCALED-80]
	_ = x[FORMAT_R16G16_UINT-81]
	_ = x[FORMAT_R16G16_SINT-82]
	_ = x[FORMAT_R16G16_SFLOAT-83]
	_ = x[FORMAT_R16G16B16_UNORM-84]
	_ = x[FORMAT_R16G16B16_SNORM-85]
	_ = x[FORMAT_R16G16B16_USCALED-86]
	_ = x[FORMAT_R16G16B16_SSCALED-87]
	_ = x[FORMAT_R16G16B16_UINT-88]
	_ = x[FORMAT_R16G16B16_SINT-89]
	_ = x[FORMAT_R16G16B16_SFLOAT-90]
	_ = x[FORMAT_R16G16B16A16_UNORM-91]
	_ = x[FORMAT_R16G16B16A16_SNORM-92]
	_ = x[FORMAT_R16G16B16A16_USCALED-93]
	_ = x[FORMAT_R16G16B16A16_SSCALED-94]
	_ = x[FORMAT_R16G16B16A16_UINT-95]
	_ = x[FORMAT_R16G16B16A16_SINT-96]
	_ = x[FORMAT_R16G16B16A16_SFLOAT-97]
	_ = x[FORMAT_R32_UINT-98]
	_ = x[FORMAT_R32_SINT-99]
	_ = x[FORMAT_R32_SFLOAT-100]
	_ = x[FORMAT_R32G32_UINT-101]
	_ = x[FORMAT_R32G32_SINT-102]
	_ = x[FORMAT_R32G32_SFLOAT-103]
	_ = x[FORMAT_R32G32B32_UINT-104]
	_ = x[FORMAT_R32G32B32_SINT-105]
	_ = x[FORMAT_R32G32B32_SFLOAT-106]
	_ = x[FORMAT_R32G32B32A32_UINT-107]
	_ = x[FORMAT_R32G32B32A32_SINT-108]
	_ = x[FORMAT_R32G32B32A32_SFLOAT-109]
	_ = x[FORMAT_R64_UINT-110]
	_ = x[FORMAT_R64_SINT-111]
	_ = x[FORMAT_R64_SFLOAT-112]
	_ = x[FORMAT_R64G64_UINT-113]
	_ = x[FORMAT_R64G64_SINT-114]
	_ = x[FORMAT_R64G64_SFLOAT-115]
	_ = x[FORMAT_R64G64B64_UINT-116]
	_ = x[FORMAT_R64G64B64_SINT-117]
	_ = x[FORMAT_R64G64B64_SFLOAT-118]
	_ = x[FORMAT_R64G64B64A64_UINT-119]
	_ = x[FORMAT_R64G64B64A64_SINT-120]
	_ = x[FORMAT_R64G64B64A64_SFLOAT-121]
	_ = x[FORMAT_B10G11R11_UFLOAT_PACK32-122]
	_ = x[FORMAT_E5B9G9R9_UFLOAT_PACK32-123]
	_ = x[FORMAT_D16_UNORM-124]
	_ = x[FORMAT_X8_D24_UNORM_PACK32-125]
	_ = x[FORMAT_D32_SFLOAT-126]
	_ = x[FORMAT_S8_UINT-127]
	_ = x[FORMAT_D16_UNORM_S8_UINT-128]
	_ = x[FORMAT_D24_UNORM_S8_UINT-129]
	_ = x[FORMAT_D32_SFLOAT_S8_UINT-130]
	_ = x[FORMAT_BC1_RGB_UNORM_BLOCK-131]
	_ = x[FORMAT_BC1_RGB_SRGB_BLOCK-132]
	_ = x[FORMAT_BC1_RGBA_UNORM_BLOCK-133]
	_ = x[FORMAT_BC1_RGBA_SRGB_BLOCK-134]
	_ = x[FORMAT_BC2_UNORM_BLOCK-135]
	_ = x[FORMAT_BC2_SRGB_BLOCK-136]
	_ = x[FORMAT_BC3_UNORM_BLOCK-137]
	_ = x[FORMAT_BC3_SRGB_BLOCK-138]
	_ = x[FORMAT_BC4_UNORM_BLOCK-139]
	_ = x[FORMAT_BC4_SNORM_BLOCK-140]
	_ = x[FORMAT_BC5_UNORM_BLOCK-141]
	_ = x[FORMAT_BC5_SNORM_BLOCK-142]
	_ = x[FORMAT_BC6H_UFLOAT_BLOCK-143]
	_ = x[FORMAT_BC6H_SFLOAT_BLOCK-144]
	_ = x[FORMAT_BC7_UNORM_BLOCK-145]
	_ = x[FORMAT_BC7_SRGB_BLOCK-146]
	_ = x[FORMAT_ETC2_R8G8B8_UNORM_BLOCK-147]
	_ = x[FORMAT_ETC2_R8G8B8_SRGB_BLOCK-148]
	_ = x[FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK-149]
	_ = x[FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK-150]
	_ = x[FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK-151]
	_ = x[FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK-152]
	_ = x[FORMAT_EAC_R11_UNORM_BLOCK-153]
	_ = x[FORMAT_EAC_R11_SNORM_BLOCK-154]
	_ = x[FORMAT_EAC_R11G11_UNORM_BLOCK-155]
	_ = x[FORMAT_EAC_R11G11_SNORM_BLOCK-156]
	_ = x[FORMAT_ASTC_4x4_UNORM_BLOCK-157]
	_ = x[FORMAT_ASTC_4x4_SRGB_BLOCK-158]
	_ = x[FORMAT_ASTC_5x4_UNORM_BLOCK-159]
	_ = x[FORMAT_ASTC_5x4_SRGB_BLOCK-160]
	_ = x[FORMAT_ASTC_5x5_UNORM_BLOCK-161]
	_ = x[FORMAT_ASTC_5x5_SRGB_BLOCK-162]
	_ = x[FORMAT_ASTC_6x5_UNORM_BLOCK-163]
	_ = x[FORMAT_ASTC_6x5_SRGB_BLOCK-164]
	_ = x[FORMAT_ASTC_6x6_UNORM_BLOCK-165]
	_ = x[FORMAT_ASTC_6x6_SRGB_BLOCK-166]
	_ = x[FORMAT_ASTC_8x5_UNORM_BLOCK-167]
	_ = x[FORMAT_ASTC_8x5_SRGB_BLOCK-168]
	_ = x[FORMAT_ASTC_8x6_UNORM_BLOCK-169]
	_ = x[FORMAT_ASTC_8x6_SRGB_BLOCK-170]
	_ = x[FORMAT_ASTC_8x8_UNORM_BLOCK-171]
	_ = x[FORMAT_ASTC_8x8_SRGB_BLOCK-172]
	_ = x[FORMAT_ASTC_10x5_UNORM_BLOCK-173]
	_ = x[FORMAT_ASTC_10x5_SRGB_BLOCK-174]
	_ = x[FORMAT_ASTC_10x6_UNORM_BLOCK-175]
	_ = x[FORMAT_ASTC_10x6_SRGB_BLOCK-176]
	_ = x[FORMAT_ASTC_10x8_UNORM_BLOCK-177]
	_ = x[FORMAT_ASTC_10x8_SRGB_BLOCK-178]
	_ = x[FORMAT_ASTC_10x10_UNORM_BLOCK-179]
	_ = x[FORMAT_ASTC_10x10_SRGB_BLOCK-180]
	_ = x[FORMAT_ASTC_12x10_UNORM_BLOCK-181]
	_ = x[FORMAT_ASTC_12x10_SRGB_BLOCK-182]
	_ = x[FORMAT_ASTC_12x12_UNORM_BLOCK-183]
	_ = x[FORMAT_ASTC_12x12_SRGB_BLOCK-184]
	_ = x[FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG-1000054000]
	_ = x[FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG-1000054001]
	_ = x[FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG-1000054002]
	_ = x[FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG-1000054003]
	_ = x[FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG-1000054004]
	_ = x[FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG-1000054005]
	_ = x[FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG-1000054006]
	_ = x[FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG-1000054007]
	_ = x[FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT-1000066000]
	_ = x[FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT-1000066001]
	_ = x[FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT-1000066002]
	_ = x[FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT-1000066003]
	_ = x[FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT-1000066004]
	_ = x[FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT-1000066005]
	_ = x[FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT-1000066006]
	_ = x[FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT-1000066007]
	_ = x[FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT-1000066008]
	_ = x[FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT-1000066009]
	_ = x[FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT-1000066010]
	_ = x[FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT-1000066011]
	_ = x[FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT-1000066012]
	_ = x[FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT-1000066013]
	_ = x[FORMAT_G8B8G8R8_422_UNORM-1000156000]
	_ = x[FORMAT_B8G8R8G8_422_UNORM-1000156001]
	_ = x[FORMAT_G8_B8_R8_3PLANE_420_UNORM-1000156002]
	_ = x[FORMAT_G8_B8R8_2PLANE_420_UNORM-1000156003]
	_ = x[FORMAT_G8_B8_R8_3PLANE_422_UNORM-1000156004]
	_ = x[FORMAT_G8_B8R8_2PLANE_422_UNORM-1000156005]
	_ = x[FORMAT_G8_B8_R8_3PLANE_444_UNORM-1000156006]
	_ = x[FORMAT_R10X6_UNORM_PACK16-1000156007]
	_ = x[FORMAT_R10X6G10X6_UNORM_2PACK16-1000156008]
	_ = x[FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16-1000156009]
	_ = x[FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16-1000156010]
	_ = x[FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16-1000156011]
	_ = x[FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16-1000156012]
	_ = x[FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16-1000156013]
	_ = x[FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16-1000156014]
	_ = x[FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16-1000156015]
	_ = x[FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16-1000156016]
	_ = x[FORMAT_R12X4_UNORM_PACK16-1000156017]
	_ = x[FORMAT_R12X4G12X4_UNORM_2PACK16-1000156018]
	_ = x[FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16-1000156019]
	_ = x[FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16-1000156020]
	_ = x[FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16-1000156021]
	_ = x[FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16-1000156022]
	_ = x[FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16-1000156023]
	_ = x[FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16-1000156024]
	_ = x[FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16-1000156025]
	_ = x[FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16-1000156026]
	_ = x[FORMAT_G16B16G16R16_422_UNORM-1000156027]
	_ = x[FORMAT_B16G16R16G16_422_UNORM-1000156028]
	_ = x[FORMAT_G16_B16_R16_3PLANE_420_UNORM-1000156029]
	_ = x[FORMAT_G16_B16R16_2PLANE_420_UNORM-1000156030]
	_ = x[FORMAT_G16_B16_R16_3PLANE_422_UNORM-1000156031]
	_ = x[FORMAT_G16_B16R16_2PLANE_422_UNORM-1000156032]
	_ = x[FORMAT_G16_B16_R16_3PLANE_444_UNORM-1000156033]
	_ = x[FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT-1000330000]
	_ = x[FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT-1000330001]
	_ = x[FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT-1000330002]
	_ = x[FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT-1000330003]
	_ = x[FORMAT_A4R4G4B4_UNORM_PACK16_EXT-1000340000]
	_ = x[FORMAT_A4B4G4R4_UNORM_PACK16_EXT-1000340001]
	_ = x[FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR-1000156011]
	_ = x[FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR-1000156021]
	_ = x[FORMAT_B16G16R16G16_422_UNORM_KHR-1000156028]
	_ = x[FORMAT_B8G8R8G8_422_UNORM_KHR-1000156001]
	_ = x[FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR-1000156010]
	_ = x[FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR-1000156013]
	_ = x[FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR-1000156015]
	_ = x[FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR-1000156012]
	_ = x[FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR-1000156014]
	_ = x[FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR-1000156016]
	_ = x[FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR-1000156020]
	_ = x[FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR-1000156023]
	_ = x[FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR-1000156025]
	_ = x[FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR-1000156022]
	_ = x[FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR-1000156024]
	_ = x[FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR-1000156026]
	_ = x[FORMAT_G16B16G16R16_422_UNORM_KHR-1000156027]
	_ = x[FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR-1000156030]
	_ = x[FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR-1000156032]
	_ = x[FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR-1000156029]
	_ = x[FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR-1000156031]
	_ = x[FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR-1000156033]
	_ = x[FORMAT_G8B8G8R8_422_UNORM_KHR-1000156000]
	_ = x[FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR-1000156003]
	_ = x[FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR-1000156005]
	_ = x[FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR-1000156002]
	_ = x[FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR-1000156004]
	_ = x[FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR-1000156006]
	_ = x[FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR-1000156009]
	_ = x[FORMAT_R10X6G10X6_UNORM_2PACK16_KHR-1000156008]
	_ = x[FORMAT_R10X6_UNORM_PACK16_KHR-1000156007]
	_ = x[FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR-1000156019]
	_ = x[FORMAT_R12X4G12X4_UNORM_2PACK16_KHR-1000156018]
	_ = x[FORMAT_R12X4_UNORM_PACK16_KHR-1000156017]
}

const (
	_Format_name_0 = "FORMAT_UNDEFINEDFORMAT_R4G4_UNORM_PACK8FORMAT_R4G4B4A4_UNORM_PACK16FORMAT_B4G4R4A4_UNORM_PACK16FORMAT_R5G6B5_UNORM_PACK16FORMAT_B5G6R5_UNORM_PACK16FORMAT_R5G5B5A1_UNORM_PACK16FORMAT_B5G5R5A1_UNORM_PACK16FORMAT_A1R5G5B5_UNORM_PACK16FORMAT_R8_UNORMFORMAT_R8_SNORMFORMAT_R8_USCALEDFORMAT_R8_SSCALEDFORMAT_R8_UINTFORMAT_R8_SINTFORMAT_R8_SRGBFORMAT_R8G8_UNORMFORMAT_R8G8_SNORMFORMAT_R8G8_USCALEDFORMAT_R8G8_SSCALEDFORMAT_R8G8_UINTFORMAT_R8G8_SINTFORMAT_R8G8_SRGBFORMAT_R8G8B8_UNORMFORMAT_R8G8B8_SNORMFORMAT_R8G8B8_USCALEDFORMAT_R8G8B8_SSCALEDFORMAT_R8G8B8_UINTFORMAT_R8G8B8_SINTFORMAT_R8G8B8_SRGBFORMAT_B8G8R8_UNORMFORMAT_B8G8R8_SNORMFORMAT_B8G8R8_USCALEDFORMAT_B8G8R8_SSCALEDFORMAT_B8G8R8_UINTFORMAT_B8G8R8_SINTFORMAT_B8G8R8_SRGBFORMAT_R8G8B8A8_UNORMFORMAT_R8G8B8A8_SNORMFORMAT_R8G8B8A8_USCALEDFORMAT_R8G8B8A8_SSCALEDFORMAT_R8G8B8A8_UINTFORMAT_R8G8B8A8_SINTFORMAT_R8G8B8A8_SRGBFORMAT_B8G8R8A8_UNORMFORMAT_B8G8R8A8_SNORMFORMAT_B8G8R8A8_USCALEDFORMAT_B8G8R8A8_SSCALEDFORMAT_B8G8R8A8_UINTFORMAT_B8G8R8A8_SINTFORMAT_B8G8R8A8_SRGBFORMAT_A8B8G8R8_UNORM_PACK32FORMAT_A8B8G8R8_SNORM_PACK32FORMAT_A8B8G8R8_USCALED_PACK32FORMAT_A8B8G8R8_SSCALED_PACK32FORMAT_A8B8G8R8_UINT_PACK32FORMAT_A8B8G8R8_SINT_PACK32FORMAT_A8B8G8R8_SRGB_PACK32FORMAT_A2R10G10B10_UNORM_PACK32FORMAT_A2R10G10B10_SNORM_PACK32FORMAT_A2R10G10B10_USCALED_PACK32FORMAT_A2R10G10B10_SSCALED_PACK32FORMAT_A2R10G10B10_UINT_PACK32FORMAT_A2R10G10B10_SINT_PACK32FORMAT_A2B10G10R10_UNORM_PACK32FORMAT_A2B10G10R10_SNORM_PACK32FORMAT_A2B10G10R10_USCALED_PACK32FORMAT_A2B10G10R10_SSCALED_PACK32FORMAT_A2B10G10R10_UINT_PACK32FORMAT_A2B10G10R10_SINT_PACK32FORMAT_R16_UNORMFORMAT_R16_SNORMFORMAT_R16_USCALEDFORMAT_R16_SSCALEDFORMAT_R16_UINTFORMAT_R16_SINTFORMAT_R16_SFLOATFORMAT_R16G16_UNORMFORMAT_R16G16_SNORMFORMAT_R16G16_USCALEDFORMAT_R16G16_SSCALEDFORMAT_R16G16_UINTFORMAT_R16G16_SINTFORMAT_R16G16_SFLOATFORMAT_R16G16B16_UNORMFORMAT_R16G16B16_SNORMFORMAT_R16G16B16_USCALEDFORMAT_R16G16B16_SSCALEDFORMAT_R16G16B16_UINTFORMAT_R16G16B16_SINTFORMAT_R16G16B16_SFLOATFORMAT_R16G16B16A16_UNORMFORMAT_R16G16B16A16_SNORMFORMAT_R16G16B16A16_USCALEDFORMAT_R16G16B16A16_SSCALEDFORMAT_R16G16B16A16_UINTFORMAT_R16G16B16A16_SINTFORMAT_R16G16B16A16_SFLOATFORMAT_R32_UINTFORMAT_R32_SINTFORMAT_R32_SFLOATFORMAT_R32G32_UINTFORMAT_R32G32_SINTFORMAT_R32G32_SFLOATFORMAT_R32G32B32_UINTFORMAT_R32G32B32_SINTFORMAT_R32G32B32_SFLOATFORMAT_R32G32B32A32_UINTFORMAT_R32G32B32A32_SINTFORMAT_R32G32B32A32_SFLOATFORMAT_R64_UINTFORMAT_R64_SINTFORMAT_R64_SFLOATFORMAT_R64G64_UINTFORMAT_R64G64_SINTFORMAT_R64G64_SFLOATFORMAT_R64G64B64_UINTFORMAT_R64G64B64_SINTFORMAT_R64G64B64_SFLOATFORMAT_R64G64B64A64_UINTFORMAT_R64G64B64A64_SINTFORMAT_R64G64B64A64_SFLOATFORMAT_B10G11R11_UFLOAT_PACK32FORMAT_E5B9G9R9_UFLOAT_PACK32FORMAT_D16_UNORMFORMAT_X8_D24_UNORM_PACK32FORMAT_D32_SFLOATFORMAT_S8_UINTFORMAT_D16_UNORM_S8_UINTFORMAT_D24_UNORM_S8_UINTFORMAT_D32_SFLOAT_S8_UINTFORMAT_BC1_RGB_UNORM_BLOCKFORMAT_BC1_RGB_SRGB_BLOCKFORMAT_BC1_RGBA_UNORM_BLOCKFORMAT_BC1_RGBA_SRGB_BLOCKFORMAT_BC2_UNORM_BLOCKFORMAT_BC2_SRGB_BLOCKFORMAT_BC3_UNORM_BLOCKFORMAT_BC3_SRGB_BLOCKFORMAT_BC4_UNORM_BLOCKFORMAT_BC4_SNORM_BLOCKFORMAT_BC5_UNORM_BLOCKFORMAT_BC5_SNORM_BLOCKFORMAT_BC6H_UFLOAT_BLOCKFORMAT_BC6H_SFLOAT_BLOCKFORMAT_BC7_UNORM_BLOCKFORMAT_BC7_SRGB_BLOCKFORMAT_ETC2_R8G8B8_UNORM_BLOCKFORMAT_ETC2_R8G8B8_SRGB_BLOCKFORMAT_ETC2_R8G8B8A1_UNORM_BLOCKFORMAT_ETC2_R8G8B8A1_SRGB_BLOCKFORMAT_ETC2_R8G8B8A8_UNORM_BLOCKFORMAT_ETC2_R8G8B8A8_SRGB_BLOCKFORMAT_EAC_R11_UNORM_BLOCKFORMAT_EAC_R11_SNORM_BLOCKFORMAT_EAC_R11G11_UNORM_BLOCKFORMAT_EAC_R11G11_SNORM_BLOCKFORMAT_ASTC_4x4_UNORM_BLOCKFORMAT_ASTC_4x4_SRGB_BLOCKFORMAT_ASTC_5x4_UNORM_BLOCKFORMAT_ASTC_5x4_SRGB_BLOCKFORMAT_ASTC_5x5_UNORM_BLOCKFORMAT_ASTC_5x5_SRGB_BLOCKFORMAT_ASTC_6x5_UNORM_BLOCKFORMAT_ASTC_6x5_SRGB_BLOCKFORMAT_ASTC_6x6_UNORM_BLOCKFORMAT_ASTC_6x6_SRGB_BLOCKFORMAT_ASTC_8x5_UNORM_BLOCKFORMAT_ASTC_8x5_SRGB_BLOCKFORMAT_ASTC_8x6_UNORM_BLOCKFORMAT_ASTC_8x6_SRGB_BLOCKFORMAT_ASTC_8x8_UNORM_BLOCKFORMAT_ASTC_8x8_SRGB_BLOCKFORMAT_ASTC_10x5_UNORM_BLOCKFORMAT_ASTC_10x5_SRGB_BLOCKFORMAT_ASTC_10x6_UNORM_BLOCKFORMAT_ASTC_10x6_SRGB_BLOCKFORMAT_ASTC_10x8_UNORM_BLOCKFORMAT_ASTC_10x8_SRGB_BLOCKFORMAT_ASTC_10x10_UNORM_BLOCKFORMAT_ASTC_10x10_SRGB_BLOCKFORMAT_ASTC_12x10_UNORM_BLOCKFORMAT_ASTC_12x10_SRGB_BLOCKFORMAT_ASTC_12x12_UNORM_BLOCKFORMAT_ASTC_12x12_SRGB_BLOCK"
	_Format_name_1 = "FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMGFORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMGFORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMGFORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMGFORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMGFORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMGFORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMGFORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG"
	_Format_name_2 = "FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXTFORMAT_ASTC_5x4_SFLOAT_BLOCK_EXTFORMAT_ASTC_5x5_SFLOAT_BLOCK_EXTFORMAT_ASTC_6x5_SFLOAT_BLOCK_EXTFORMAT_ASTC_6x6_SFLOAT_BLOCK_EXTFORMAT_ASTC_8x5_SFLOAT_BLOCK_EXTFORMAT_ASTC_8x6_SFLOAT_BLOCK_EXTFORMAT_ASTC_8x8_SFLOAT_BLOCK_EXTFORMAT_ASTC_10x5_SFLOAT_BLOCK_EXTFORMAT_ASTC_10x6_SFLOAT_BLOCK_EXTFORMAT_ASTC_10x8_SFLOAT_BLOCK_EXTFORMAT_ASTC_10x10_SFLOAT_BLOCK_EXTFORMAT_ASTC_12x10_SFLOAT_BLOCK_EXTFORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT"
	_Format_name_3 = "FORMAT_G8B8G8R8_422_UNORMFORMAT_B8G8R8G8_422_UNORMFORMAT_G8_B8_R8_3PLANE_420_UNORMFORMAT_G8_B8R8_2PLANE_420_UNORMFORMAT_G8_B8_R8_3PLANE_422_UNORMFORMAT_G8_B8R8_2PLANE_422_UNORMFORMAT_G8_B8_R8_3PLANE_444_UNORMFORMAT_R10X6_UNORM_PACK16FORMAT_R10X6G10X6_UNORM_2PACK16FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16FORMAT_R12X4_UNORM_PACK16FORMAT_R12X4G12X4_UNORM_2PACK16FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16FORMAT_G16B16G16R16_422_UNORMFORMAT_B16G16R16G16_422_UNORMFORMAT_G16_B16_R16_3PLANE_420_UNORMFORMAT_G16_B16R16_2PLANE_420_UNORMFORMAT_G16_B16_R16_3PLANE_422_UNORMFORMAT_G16_B16R16_2PLANE_422_UNORMFORMAT_G16_B16_R16_3PLANE_444_UNORM"
	_Format_name_4 = "FORMAT_G8_B8R8_2PLANE_444_UNORM_EXTFORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXTFORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXTFORMAT_G16_B16R16_2PLANE_444_UNORM_EXT"
	_Format_name_5 = "FORMAT_A4R4G4B4_UNORM_PACK16_EXTFORMAT_A4B4G4R4_UNORM_PACK16_EXT"
)

var (
	_Format_index_0 = [...]uint16{0, 16, 39, 67, 95, 121, 147, 175, 203, 231, 246, 261, 278, 295, 309, 323, 337, 354, 371, 390, 409, 425, 441, 457, 476, 495, 516, 537, 555, 573, 591, 610, 629, 650, 671, 689, 707, 725, 746, 767, 790, 813, 833, 853, 873, 894, 915, 938, 961, 981, 1001, 1021, 1049, 1077, 1107, 1137, 1164, 1191, 1218, 1249, 1280, 1313, 1346, 1376, 1406, 1437, 1468, 1501, 1534, 1564, 1594, 1610, 1626, 1644, 1662, 1677, 1692, 1709, 1728, 1747, 1768, 1789, 1807, 1825, 1845, 1867, 1889, 1913, 1937, 1958, 1979, 2002, 2027, 2052, 2079, 2106, 2130, 2154, 2180, 2195, 2210, 2227, 2245, 2263, 2283, 2304, 2325, 2348, 2372, 2396, 2422, 2437, 2452, 2469, 2487, 2505, 2525, 2546, 2567, 2590, 2614, 2638, 2664, 2694, 2723, 2739, 2765, 2782, 2796, 2820, 2844, 2869, 2895, 2920, 2947, 2973, 2995, 3016, 3038, 3059, 3081, 3103, 3125, 3147, 3171, 3195, 3217, 3238, 3268, 3297, 3329, 3360, 3392, 3423, 3449, 3475, 3504, 3533, 3560, 3586, 3613, 3639, 3666, 3692, 3719, 3745, 3772, 3798, 3825, 3851, 3878, 3904, 3931, 3957, 3985, 4012, 4040, 4067, 4095, 4122, 4151, 4179, 4208, 4236, 4265, 4293}
	_Format_index_1 = [...]uint16{0, 34, 68, 102, 136, 169, 202, 235, 268}
	_Format_index_2 = [...]uint16{0, 32, 64, 96, 128, 160, 192, 224, 256, 289, 322, 355, 389, 423, 457}
	_Format_index_3 = [...]uint16{0, 25, 50, 82, 113, 145, 176, 208, 233, 264, 305, 350, 395, 444, 492, 541, 589, 638, 663, 694, 735, 780, 825, 874, 922, 971, 1019, 1068, 1097, 1126, 1161, 1195, 1230, 1264, 1299}
	_Format_index_4 = [...]uint8{0, 35, 87, 139, 177}
	_Format_index_5 = [...]uint8{0, 32, 64}
)

func (i Format) String() string {
	switch {
	case 0 <= i && i <= 184:
		return _Format_name_0[_Format_index_0[i]:_Format_index_0[i+1]]
	case 1000054000 <= i && i <= 1000054007:
		i -= 1000054000
		return _Format_name_1[_Format_index_1[i]:_Format_index_1[i+1]]
	case 1000066000 <= i && i <= 1000066013:
		i -= 1000066000
		return _Format_name_2[_Format_index_2[i]:_Format_index_2[i+1]]
	case 1000156000 <= i && i <= 1000156033:
		i -= 1000156000
		return _Format_name_3[_Format_index_3[i]:_Format_index_3[i+1]]
	case 1000330000 <= i && i <= 1000330003:
		i -= 1000330000
		return _Format_name_4[_Format_index_4[i]:_Format_index_4[i+1]]
	case 1000340000 <= i && i <= 1000340001:
		i -= 1000340000
		return _Format_name_5[_Format_index_5[i]:_Format_index_5[i+1]]
	default:
		return "Format(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_BIT-1]
	_ = x[FORMAT_FEATURE_STORAGE_IMAGE_BIT-2]
	_ = x[FORMAT_FEATURE_BLIT_SRC_BIT-1024]
	_ = x[FORMAT_FEATURE_BLIT_DST_BIT-2048]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT-4096]
	_ = x[FORMAT_FEATURE_TRANSFER_SRC_BIT-16384]
	_ = x[FORMAT_FEATURE_TRANSFER_DST_BIT-32768]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT-65536]
	_ = x[FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT-131072]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT-262144]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT-524288]
	_ = x[FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT-4]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT-1048576]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT-2097152]
	_ = x[FORMAT_FEATURE_DISJOINT_BIT-4194304]
	_ = x[FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT-8388608]
	_ = x[FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT-8]
	_ = x[FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT-16]
	_ = x[FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT-32]
	_ = x[FORMAT_FEATURE_VERTEX_BUFFER_BIT-64]
	_ = x[FORMAT_FEATURE_COLOR_ATTACHMENT_BIT-128]
	_ = x[FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT-256]
	_ = x[FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT-512]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG-1000015000]
	_ = x[FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR-1000150000]
	_ = x[FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT-1000218000]
	_ = x[FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR-1000226000]
	_ = x[FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR-8388608]
	_ = x[FORMAT_FEATURE_DISJOINT_BIT_KHR-4194304]
	_ = x[FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR-131072]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT-1000015000]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT-65536]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR-1048576]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR-2097152]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR-262144]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR-524288]
	_ = x[FORMAT_FEATURE_TRANSFER_DST_BIT_KHR-32768]
	_ = x[FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR-16384]
}

const _FormatFeatureFlagBits_name = "FORMAT_FEATURE_SAMPLED_IMAGE_BITFORMAT_FEATURE_STORAGE_IMAGE_BITFORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BITFORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BITFORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BITFORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BITFORMAT_FEATURE_VERTEX_BUFFER_BITFORMAT_FEATURE_COLOR_ATTACHMENT_BITFORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BITFORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BITFORMAT_FEATURE_BLIT_SRC_BITFORMAT_FEATURE_BLIT_DST_BITFORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BITFORMAT_FEATURE_TRANSFER_SRC_BITFORMAT_FEATURE_TRANSFER_DST_BITFORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BITFORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BITFORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BITFORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BITFORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BITFORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BITFORMAT_FEATURE_DISJOINT_BITFORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BITFORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMGFORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHRFORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXTFORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"

var _FormatFeatureFlagBits_map = map[FormatFeatureFlagBits]string{
	1:          _FormatFeatureFlagBits_name[0:32],
	2:          _FormatFeatureFlagBits_name[32:64],
	4:          _FormatFeatureFlagBits_name[64:103],
	8:          _FormatFeatureFlagBits_name[103:142],
	16:         _FormatFeatureFlagBits_name[142:181],
	32:         _FormatFeatureFlagBits_name[181:227],
	64:         _FormatFeatureFlagBits_name[227:259],
	128:        _FormatFeatureFlagBits_name[259:294],
	256:        _FormatFeatureFlagBits_name[294:335],
	512:        _FormatFeatureFlagBits_name[335:378],
	1024:       _FormatFeatureFlagBits_name[378:405],
	2048:       _FormatFeatureFlagBits_name[405:432],
	4096:       _FormatFeatureFlagBits_name[432:478],
	16384:      _FormatFeatureFlagBits_name[478:509],
	32768:      _FormatFeatureFlagBits_name[509:540],
	65536:      _FormatFeatureFlagBits_name[540:586],
	131072:     _FormatFeatureFlagBits_name[586:628],
	262144:     _FormatFeatureFlagBits_name[628:691],
	524288:     _FormatFeatureFlagBits_name[691:771],
	1048576:    _FormatFeatureFlagBits_name[771:851],
	2097152:    _FormatFeatureFlagBits_name[851:941],
	4194304:    _FormatFeatureFlagBits_name[941:968],
	8388608:    _FormatFeatureFlagBits_name[968:1009],
	1000015000: _FormatFeatureFlagBits_name[1009:1058],
	1000150000: _FormatFeatureFlagBits_name[1058:1117],
	1000218000: _FormatFeatureFlagBits_name[1117:1160],
	1000226000: _FormatFeatureFlagBits_name[1160:1215],
}

func (i FormatFeatureFlagBits) String() string {
	if str, ok := _FormatFeatureFlagBits_map[i]; ok {
		return str
	}
	return "FormatFeatureFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT_KHR-1]
	_ = x[FORMAT_FEATURE_2_STORAGE_IMAGE_BIT_KHR-2]
	_ = x[FORMAT_FEATURE_2_BLIT_SRC_BIT_KHR-1024]
	_ = x[FORMAT_FEATURE_2_BLIT_DST_BIT_KHR-2048]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHR-4096]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT-8192]
	_ = x[FORMAT_FEATURE_2_TRANSFER_SRC_BIT_KHR-16384]
	_ = x[FORMAT_FEATURE_2_TRANSFER_DST_BIT_KHR-32768]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR-65536]
	_ = x[FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT_KHR-131072]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR-262144]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR-524288]
	_ = x[FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT_KHR-4]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR-1048576]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR-2097152]
	_ = x[FORMAT_FEATURE_2_DISJOINT_BIT_KHR-4194304]
	_ = x[FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT_KHR-8388608]
	_ = x[FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR-8]
	_ = x[FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT_KHR-2147483648]
	_ = x[FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR-4294967296]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR-8589934592]
	_ = x[FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT_KHR-16]
	_ = x[FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHR-32]
	_ = x[FORMAT_FEATURE_2_VERTEX_BUFFER_BIT_KHR-64]
	_ = x[FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT_KHR-128]
	_ = x[FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT_KHR-256]
	_ = x[FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT_KHR-512]
	_ = x[FORMAT_FEATURE_2_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR-1000150000]
	_ = x[FORMAT_FEATURE_2_FRAGMENT_DENSITY_MAP_BIT_EXT-1000218000]
	_ = x[FORMAT_FEATURE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR-1000226000]
	_ = x[FORMAT_FEATURE_2_LINEAR_COLOR_ATTACHMENT_BIT_NV-1000430000]
}

const _FormatFeatureFlagBits2KHR_name = "FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT_KHRFORMAT_FEATURE_2_STORAGE_IMAGE_BIT_KHRFORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT_KHRFORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT_KHRFORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT_KHRFORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHRFORMAT_FEATURE_2_VERTEX_BUFFER_BIT_KHRFORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT_KHRFORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT_KHRFORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT_KHRFORMAT_FEATURE_2_BLIT_SRC_BIT_KHRFORMAT_FEATURE_2_BLIT_DST_BIT_KHRFORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHRFORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXTFORMAT_FEATURE_2_TRANSFER_SRC_BIT_KHRFORMAT_FEATURE_2_TRANSFER_DST_BIT_KHRFORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHRFORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT_KHRFORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHRFORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHRFORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHRFORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHRFORMAT_FEATURE_2_DISJOINT_BIT_KHRFORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT_KHRFORMAT_FEATURE_2_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHRFORMAT_FEATURE_2_FRAGMENT_DENSITY_MAP_BIT_EXTFORMAT_FEATURE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHRFORMAT_FEATURE_2_LINEAR_COLOR_ATTACHMENT_BIT_NVFORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT_KHRFORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHRFORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR"

var _FormatFeatureFlagBits2KHR_map = map[FormatFeatureFlagBits2KHR]string{
	1:          _FormatFeatureFlagBits2KHR_name[0:38],
	2:          _FormatFeatureFlagBits2KHR_name[38:76],
	4:          _FormatFeatureFlagBits2KHR_name[76:121],
	8:          _FormatFeatureFlagBits2KHR_name[121:166],
	16:         _FormatFeatureFlagBits2KHR_name[166:211],
	32:         _FormatFeatureFlagBits2KHR_name[211:263],
	64:         _FormatFeatureFlagBits2KHR_name[263:301],
	128:        _FormatFeatureFlagBits2KHR_name[301:342],
	256:        _FormatFeatureFlagBits2KHR_name[342:389],
	512:        _FormatFeatureFlagBits2KHR_name[389:438],
	1024:       _FormatFeatureFlagBits2KHR_name[438:471],
	2048:       _FormatFeatureFlagBits2KHR_name[471:504],
	4096:       _FormatFeatureFlagBits2KHR_name[504:556],
	8192:       _FormatFeatureFlagBits2KHR_name[556:607],
	16384:      _FormatFeatureFlagBits2KHR_name[607:644],
	32768:      _FormatFeatureFlagBits2KHR_name[644:681],
	65536:      _FormatFeatureFlagBits2KHR_name[681:733],
	131072:     _FormatFeatureFlagBits2KHR_name[733:781],
	262144:     _FormatFeatureFlagBits2KHR_name[781:850],
	524288:     _FormatFeatureFlagBits2KHR_name[850:936],
	1048576:    _FormatFeatureFlagBits2KHR_name[936:1022],
	2097152:    _FormatFeatureFlagBits2KHR_name[1022:1118],
	4194304:    _FormatFeatureFlagBits2KHR_name[1118:1151],
	8388608:    _FormatFeatureFlagBits2KHR_name[1151:1198],
	1000150000: _FormatFeatureFlagBits2KHR_name[1198:1259],
	1000218000: _FormatFeatureFlagBits2KHR_name[1259:1304],
	1000226000: _FormatFeatureFlagBits2KHR_name[1304:1361],
	1000430000: _FormatFeatureFlagBits2KHR_name[1361:1408],
	2147483648: _FormatFeatureFlagBits2KHR_name[1408:1460],
	4294967296: _FormatFeatureFlagBits2KHR_name[1460:1513],
	8589934592: _FormatFeatureFlagBits2KHR_name[1513:1568],
}

func (i FormatFeatureFlagBits2KHR) String() string {
	if str, ok := _FormatFeatureFlagBits2KHR_map[i]; ok {
		return str
	}
	return "FormatFeatureFlagBits2KHR(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR-0]
	_ = x[FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR-1]
	_ = x[FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHR-2]
	_ = x[FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHR-3]
	_ = x[FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR-4]
}

const _FragmentShadingRateCombinerOpKHR_name = "FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHRFRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHRFRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHRFRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHRFRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR"

var _FragmentShadingRateCombinerOpKHR_index = [...]uint8{0, 42, 87, 128, 169, 210}

func (i FragmentShadingRateCombinerOpKHR) String() string {
	if i < 0 || i >= FragmentShadingRateCombinerOpKHR(len(_FragmentShadingRateCombinerOpKHR_index)-1) {
		return "FragmentShadingRateCombinerOpKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FragmentShadingRateCombinerOpKHR_name[_FragmentShadingRateCombinerOpKHR_index[i]:_FragmentShadingRateCombinerOpKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FRAGMENT_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV-0]
	_ = x[FRAGMENT_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV-1]
	_ = x[FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV-4]
	_ = x[FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV-5]
	_ = x[FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV-6]
	_ = x[FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV-9]
	_ = x[FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV-10]
	_ = x[FRAGMENT_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV-11]
	_ = x[FRAGMENT_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV-12]
	_ = x[FRAGMENT_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV-13]
	_ = x[FRAGMENT_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV-14]
	_ = x[FRAGMENT_SHADING_RATE_NO_INVOCATIONS_NV-15]
}

const (
	_FragmentShadingRateNV_name_0 = "FRAGMENT_SHADING_RATE_1_INVOCATION_PER_PIXEL_NVFRAGMENT_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV"
	_FragmentShadingRateNV_name_1 = "FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NVFRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NVFRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV"
	_FragmentShadingRateNV_name_2 = "FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NVFRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NVFRAGMENT_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NVFRAGMENT_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NVFRAGMENT_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NVFRAGMENT_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NVFRAGMENT_SHADING_RATE_NO_INVOCATIONS_NV"
)

var (
	_FragmentShadingRateNV_index_0 = [...]uint8{0, 47, 99}
	_FragmentShadingRateNV_index_1 = [...]uint8{0, 52, 104, 156}
	_FragmentShadingRateNV_index_2 = [...]uint16{0, 52, 104, 152, 200, 248, 297, 336}
)

func (i FragmentShadingRateNV) String() string {
	switch {
	case 0 <= i && i <= 1:
		return _FragmentShadingRateNV_name_0[_FragmentShadingRateNV_index_0[i]:_FragmentShadingRateNV_index_0[i+1]]
	case 4 <= i && i <= 6:
		i -= 4
		return _FragmentShadingRateNV_name_1[_FragmentShadingRateNV_index_1[i]:_FragmentShadingRateNV_index_1[i+1]]
	case 9 <= i && i <= 15:
		i -= 9
		return _FragmentShadingRateNV_name_2[_FragmentShadingRateNV_index_2[i]:_FragmentShadingRateNV_index_2[i+1]]
	default:
		return "FragmentShadingRateNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FRAGMENT_SHADING_RATE_TYPE_FRAGMENT_SIZE_NV-0]
	_ = x[FRAGMENT_SHADING_RATE_TYPE_ENUMS_NV-1]
}

const _FragmentShadingRateTypeNV_name = "FRAGMENT_SHADING_RATE_TYPE_FRAGMENT_SIZE_NVFRAGMENT_SHADING_RATE_TYPE_ENUMS_NV"

var _FragmentShadingRateTypeNV_index = [...]uint8{0, 43, 78}

func (i FragmentShadingRateTypeNV) String() string {
	if i < 0 || i >= FragmentShadingRateTypeNV(len(_FragmentShadingRateTypeNV_index)-1) {
		return "FragmentShadingRateTypeNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FragmentShadingRateTypeNV_name[_FragmentShadingRateTypeNV_index[i]:_FragmentShadingRateTypeNV_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FRAMEBUFFER_CREATE_IMAGELESS_BIT-1]
	_ = x[FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR-1]
}

const _FramebufferCreateFlagBits_name = "FRAMEBUFFER_CREATE_IMAGELESS_BIT"

var _FramebufferCreateFlagBits_index = [...]uint8{0, 32}

func (i FramebufferCreateFlagBits) String() string {
	i -= 1
	if i >= FramebufferCreateFlagBits(len(_FramebufferCreateFlagBits_index)-1) {
		return "FramebufferCreateFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _FramebufferCreateFlagBits_name[_FramebufferCreateFlagBits_index[i]:_FramebufferCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FRONT_FACE_COUNTER_CLOCKWISE-0]
	_ = x[FRONT_FACE_CLOCKWISE-1]
}

const _FrontFace_name = "FRONT_FACE_COUNTER_CLOCKWISEFRONT_FACE_CLOCKWISE"

var _FrontFace_index = [...]uint8{0, 28, 48}

func (i FrontFace) String() string {
	if i < 0 || i >= FrontFace(len(_FrontFace_index)-1) {
		return "FrontFace(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FrontFace_name[_FrontFace_index[i]:_FrontFace_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[GEOMETRY_OPAQUE_BIT_KHR-1]
	_ = x[GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR-2]
	_ = x[GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV-2]
	_ = x[GEOMETRY_OPAQUE_BIT_NV-1]
}

const _GeometryFlagBitsKHR_name = "GEOMETRY_OPAQUE_BIT_KHRGEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR"

var _GeometryFlagBitsKHR_index = [...]uint8{0, 23, 71}

func (i GeometryFlagBitsKHR) String() string {
	i -= 1
	if i >= GeometryFlagBitsKHR(len(_GeometryFlagBitsKHR_index)-1) {
		return "GeometryFlagBitsKHR(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _GeometryFlagBitsKHR_name[_GeometryFlagBitsKHR_index[i]:_GeometryFlagBitsKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR-1]
	_ = x[GEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR-2]
	_ = x[GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR-4]
	_ = x[GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR-8]
	_ = x[GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV-8]
	_ = x[GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV-4]
	_ = x[GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV-1]
	_ = x[GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR-2]
	_ = x[GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV-2]
}

const (
	_GeometryInstanceFlagBitsKHR_name_0 = "GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHRGEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR"
	_GeometryInstanceFlagBitsKHR_name_1 = "GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR"
	_GeometryInstanceFlagBitsKHR_name_2 = "GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR"
)

var (
	_GeometryInstanceFlagBitsKHR_index_0 = [...]uint8{0, 54, 100}
)

func (i GeometryInstanceFlagBitsKHR) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _GeometryInstanceFlagBitsKHR_name_0[_GeometryInstanceFlagBitsKHR_index_0[i]:_GeometryInstanceFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _GeometryInstanceFlagBitsKHR_name_1
	case i == 8:
		return _GeometryInstanceFlagBitsKHR_name_2
	default:
		return "GeometryInstanceFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[GEOMETRY_TYPE_TRIANGLES_KHR-0]
	_ = x[GEOMETRY_TYPE_AABBS_KHR-1]
	_ = x[GEOMETRY_TYPE_INSTANCES_KHR-2]
	_ = x[GEOMETRY_TYPE_AABBS_NV-1]
	_ = x[GEOMETRY_TYPE_TRIANGLES_NV-0]
}

const _GeometryTypeKHR_name = "GEOMETRY_TYPE_TRIANGLES_KHRGEOMETRY_TYPE_AABBS_KHRGEOMETRY_TYPE_INSTANCES_KHR"

var _GeometryTypeKHR_index = [...]uint8{0, 27, 50, 77}

func (i GeometryTypeKHR) String() string {
	if i < 0 || i >= GeometryTypeKHR(len(_GeometryTypeKHR_index)-1) {
		return "GeometryTypeKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _GeometryTypeKHR_name[_GeometryTypeKHR_index[i]:_GeometryTypeKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_ASPECT_COLOR_BIT-1]
	_ = x[IMAGE_ASPECT_DEPTH_BIT-2]
	_ = x[IMAGE_ASPECT_STENCIL_BIT-4]
	_ = x[IMAGE_ASPECT_METADATA_BIT-8]
	_ = x[IMAGE_ASPECT_PLANE_0_BIT-16]
	_ = x[IMAGE_ASPECT_PLANE_1_BIT-32]
	_ = x[IMAGE_ASPECT_PLANE_2_BIT-64]
	_ = x[IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT-1000158000]
	_ = x[IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT-1000158000]
	_ = x[IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT-1000158000]
	_ = x[IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT-1000158000]
	_ = x[IMAGE_ASPECT_NONE_KHR-1000413000]
	_ = x[IMAGE_ASPECT_PLANE_0_BIT_KHR-16]
	_ = x[IMAGE_ASPECT_PLANE_1_BIT_KHR-32]
	_ = x[IMAGE_ASPECT_PLANE_2_BIT_KHR-64]
}

const (
	_ImageAspectFlagBits_name_0 = "IMAGE_ASPECT_COLOR_BITIMAGE_ASPECT_DEPTH_BIT"
	_ImageAspectFlagBits_name_1 = "IMAGE_ASPECT_STENCIL_BIT"
	_ImageAspectFlagBits_name_2 = "IMAGE_ASPECT_METADATA_BIT"
	_ImageAspectFlagBits_name_3 = "IMAGE_ASPECT_PLANE_0_BIT"
	_ImageAspectFlagBits_name_4 = "IMAGE_ASPECT_PLANE_1_BIT"
	_ImageAspectFlagBits_name_5 = "IMAGE_ASPECT_PLANE_2_BIT"
	_ImageAspectFlagBits_name_6 = "IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT"
	_ImageAspectFlagBits_name_7 = "IMAGE_ASPECT_NONE_KHR"
)

var (
	_ImageAspectFlagBits_index_0 = [...]uint8{0, 22, 44}
)

func (i ImageAspectFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ImageAspectFlagBits_name_0[_ImageAspectFlagBits_index_0[i]:_ImageAspectFlagBits_index_0[i+1]]
	case i == 4:
		return _ImageAspectFlagBits_name_1
	case i == 8:
		return _ImageAspectFlagBits_name_2
	case i == 16:
		return _ImageAspectFlagBits_name_3
	case i == 32:
		return _ImageAspectFlagBits_name_4
	case i == 64:
		return _ImageAspectFlagBits_name_5
	case i == 1000158000:
		return _ImageAspectFlagBits_name_6
	case i == 1000413000:
		return _ImageAspectFlagBits_name_7
	default:
		return "ImageAspectFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_CREATE_SPARSE_BINDING_BIT-1]
	_ = x[IMAGE_CREATE_SPARSE_RESIDENCY_BIT-2]
	_ = x[IMAGE_CREATE_ALIAS_BIT-1024]
	_ = x[IMAGE_CREATE_PROTECTED_BIT-2048]
	_ = x[IMAGE_CREATE_SPARSE_ALIASED_BIT-4]
	_ = x[IMAGE_CREATE_MUTABLE_FORMAT_BIT-8]
	_ = x[IMAGE_CREATE_CUBE_COMPATIBLE_BIT-16]
	_ = x[IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT-32]
	_ = x[IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT-64]
	_ = x[IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT-128]
	_ = x[IMAGE_CREATE_EXTENDED_USAGE_BIT-256]
	_ = x[IMAGE_CREATE_DISJOINT_BIT-512]
	_ = x[IMAGE_CREATE_CORNER_SAMPLED_BIT_NV-1000050000]
	_ = x[IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT-1000143000]
	_ = x[IMAGE_CREATE_SUBSAMPLED_BIT_EXT-1000218000]
	_ = x[IMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM-1000425000]
	_ = x[IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR-32]
	_ = x[IMAGE_CREATE_ALIAS_BIT_KHR-1024]
	_ = x[IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR-128]
	_ = x[IMAGE_CREATE_DISJOINT_BIT_KHR-512]
	_ = x[IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR-256]
	_ = x[IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR-64]
}

const _ImageCreateFlagBits_name = "IMAGE_CREATE_SPARSE_BINDING_BITIMAGE_CREATE_SPARSE_RESIDENCY_BITIMAGE_CREATE_SPARSE_ALIASED_BITIMAGE_CREATE_MUTABLE_FORMAT_BITIMAGE_CREATE_CUBE_COMPATIBLE_BITIMAGE_CREATE_2D_ARRAY_COMPATIBLE_BITIMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BITIMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BITIMAGE_CREATE_EXTENDED_USAGE_BITIMAGE_CREATE_DISJOINT_BITIMAGE_CREATE_ALIAS_BITIMAGE_CREATE_PROTECTED_BITIMAGE_CREATE_CORNER_SAMPLED_BIT_NVIMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXTIMAGE_CREATE_SUBSAMPLED_BIT_EXTIMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM"

var _ImageCreateFlagBits_map = map[ImageCreateFlagBits]string{
	1:          _ImageCreateFlagBits_name[0:31],
	2:          _ImageCreateFlagBits_name[31:64],
	4:          _ImageCreateFlagBits_name[64:95],
	8:          _ImageCreateFlagBits_name[95:126],
	16:         _ImageCreateFlagBits_name[126:158],
	32:         _ImageCreateFlagBits_name[158:194],
	64:         _ImageCreateFlagBits_name[194:238],
	128:        _ImageCreateFlagBits_name[238:282],
	256:        _ImageCreateFlagBits_name[282:313],
	512:        _ImageCreateFlagBits_name[313:338],
	1024:       _ImageCreateFlagBits_name[338:360],
	2048:       _ImageCreateFlagBits_name[360:386],
	1000050000: _ImageCreateFlagBits_name[386:420],
	1000143000: _ImageCreateFlagBits_name[420:474],
	1000218000: _ImageCreateFlagBits_name[474:505],
	1000425000: _ImageCreateFlagBits_name[505:554],
}

func (i ImageCreateFlagBits) String() string {
	if str, ok := _ImageCreateFlagBits_map[i]; ok {
		return str
	}
	return "ImageCreateFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_LAYOUT_UNDEFINED-0]
	_ = x[IMAGE_LAYOUT_GENERAL-1]
	_ = x[IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL-2]
	_ = x[IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL-3]
	_ = x[IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL-4]
	_ = x[IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL-5]
	_ = x[IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL-6]
	_ = x[IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL-7]
	_ = x[IMAGE_LAYOUT_PREINITIALIZED-8]
	_ = x[IMAGE_LAYOUT_PRESENT_SRC_KHR-1000001002]
	_ = x[IMAGE_LAYOUT_SHARED_PRESENT_KHR-1000111000]
	_ = x[IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL-1000117000]
	_ = x[IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL-1000117001]
	_ = x[IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT-1000218000]
	_ = x[IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR-1000226003]
	_ = x[IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL-1000241000]
	_ = x[IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL-1000241001]
	_ = x[IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL-1000241002]
	_ = x[IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL-1000241003]
	_ = x[IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR-1000314000]
	_ = x[IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR-1000314001]
	_ = x[IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL_KHR-1000241000]
	_ = x[IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR-1000117001]
	_ = x[IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL_KHR-1000241001]
	_ = x[IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR-1000117000]
	_ = x[IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV-1000226003]
	_ = x[IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL_KHR-1000241002]
	_ = x[IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL_KHR-1000241003]
}

const (
	_ImageLayout_name_0 = "IMAGE_LAYOUT_UNDEFINEDIMAGE_LAYOUT_GENERALIMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMALIMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMALIMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMALIMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMALIMAGE_LAYOUT_TRANSFER_SRC_OPTIMALIMAGE_LAYOUT_TRANSFER_DST_OPTIMALIMAGE_LAYOUT_PREINITIALIZED"
	_ImageLayout_name_1 = "IMAGE_LAYOUT_PRESENT_SRC_KHR"
	_ImageLayout_name_2 = "IMAGE_LAYOUT_SHARED_PRESENT_KHR"
	_ImageLayout_name_3 = "IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMALIMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL"
	_ImageLayout_name_4 = "IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT"
	_ImageLayout_name_5 = "IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR"
	_ImageLayout_name_6 = "IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMALIMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMALIMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMALIMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL"
	_ImageLayout_name_7 = "IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHRIMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR"
)

var (
	_ImageLayout_index_0 = [...]uint16{0, 22, 42, 79, 124, 168, 205, 238, 271, 298}
	_ImageLayout_index_3 = [...]uint8{0, 55, 110}
	_ImageLayout_index_6 = [...]uint8{0, 37, 73, 112, 150}
	_ImageLayout_index_7 = [...]uint8{0, 34, 69}
)

func (i ImageLayout) String() string {
	switch {
	case 0 <= i && i <= 8:
		return _ImageLayout_name_0[_ImageLayout_index_0[i]:_ImageLayout_index_0[i+1]]
	case i == 1000001002:
		return _ImageLayout_name_1
	case i == 1000111000:
		return _ImageLayout_name_2
	case 1000117000 <= i && i <= 1000117001:
		i -= 1000117000
		return _ImageLayout_name_3[_ImageLayout_index_3[i]:_ImageLayout_index_3[i+1]]
	case i == 1000218000:
		return _ImageLayout_name_4
	case i == 1000226003:
		return _ImageLayout_name_5
	case 1000241000 <= i && i <= 1000241003:
		i -= 1000241000
		return _ImageLayout_name_6[_ImageLayout_index_6[i]:_ImageLayout_index_6[i+1]]
	case 1000314000 <= i && i <= 1000314001:
		i -= 1000314000
		return _ImageLayout_name_7[_ImageLayout_index_7[i]:_ImageLayout_index_7[i+1]]
	default:
		return "ImageLayout(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_TILING_OPTIMAL-0]
	_ = x[IMAGE_TILING_LINEAR-1]
	_ = x[IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT-1000158000]
}

const (
	_ImageTiling_name_0 = "IMAGE_TILING_OPTIMALIMAGE_TILING_LINEAR"
	_ImageTiling_name_1 = "IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT"
)

var (
	_ImageTiling_index_0 = [...]uint8{0, 20, 39}
)

func (i ImageTiling) String() string {
	switch {
	case 0 <= i && i <= 1:
		return _ImageTiling_name_0[_ImageTiling_index_0[i]:_ImageTiling_index_0[i+1]]
	case i == 1000158000:
		return _ImageTiling_name_1
	default:
		return "ImageTiling(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_TYPE_1D-0]
	_ = x[IMAGE_TYPE_2D-1]
	_ = x[IMAGE_TYPE_3D-2]
}

const _ImageType_name = "IMAGE_TYPE_1DIMAGE_TYPE_2DIMAGE_TYPE_3D"

var _ImageType_index = [...]uint8{0, 13, 26, 39}

func (i ImageType) String() string {
	if i < 0 || i >= ImageType(len(_ImageType_index)-1) {
		return "ImageType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ImageType_name[_ImageType_index[i]:_ImageType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_USAGE_TRANSFER_SRC_BIT-1]
	_ = x[IMAGE_USAGE_TRANSFER_DST_BIT-2]
	_ = x[IMAGE_USAGE_SAMPLED_BIT-4]
	_ = x[IMAGE_USAGE_STORAGE_BIT-8]
	_ = x[IMAGE_USAGE_COLOR_ATTACHMENT_BIT-16]
	_ = x[IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT-32]
	_ = x[IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT-64]
	_ = x[IMAGE_USAGE_INPUT_ATTACHMENT_BIT-128]
	_ = x[IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT-1000218000]
	_ = x[IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR-1000226000]
	_ = x[IMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEI-1000370000]
	_ = x[IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV-1000226000]
}

const (
	_ImageUsageFlagBits_name_0 = "IMAGE_USAGE_TRANSFER_SRC_BITIMAGE_USAGE_TRANSFER_DST_BIT"
	_ImageUsageFlagBits_name_1 = "IMAGE_USAGE_SAMPLED_BIT"
	_ImageUsageFlagBits_name_2 = "IMAGE_USAGE_STORAGE_BIT"
	_ImageUsageFlagBits_name_3 = "IMAGE_USAGE_COLOR_ATTACHMENT_BIT"
	_ImageUsageFlagBits_name_4 = "IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT"
	_ImageUsageFlagBits_name_5 = "IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT"
	_ImageUsageFlagBits_name_6 = "IMAGE_USAGE_INPUT_ATTACHMENT_BIT"
	_ImageUsageFlagBits_name_7 = "IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT"
	_ImageUsageFlagBits_name_8 = "IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR"
	_ImageUsageFlagBits_name_9 = "IMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEI"
)

var (
	_ImageUsageFlagBits_index_0 = [...]uint8{0, 28, 56}
)

func (i ImageUsageFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ImageUsageFlagBits_name_0[_ImageUsageFlagBits_index_0[i]:_ImageUsageFlagBits_index_0[i+1]]
	case i == 4:
		return _ImageUsageFlagBits_name_1
	case i == 8:
		return _ImageUsageFlagBits_name_2
	case i == 16:
		return _ImageUsageFlagBits_name_3
	case i == 32:
		return _ImageUsageFlagBits_name_4
	case i == 64:
		return _ImageUsageFlagBits_name_5
	case i == 128:
		return _ImageUsageFlagBits_name_6
	case i == 1000218000:
		return _ImageUsageFlagBits_name_7
	case i == 1000226000:
		return _ImageUsageFlagBits_name_8
	case i == 1000370000:
		return _ImageUsageFlagBits_name_9
	default:
		return "ImageUsageFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT-1000218000]
	_ = x[IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT-1000332000]
}

const (
	_ImageViewCreateFlagBits_name_0 = "IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT"
	_ImageViewCreateFlagBits_name_1 = "IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT"
)

func (i ImageViewCreateFlagBits) String() string {
	switch {
	case i == 1000218000:
		return _ImageViewCreateFlagBits_name_0
	case i == 1000332000:
		return _ImageViewCreateFlagBits_name_1
	default:
		return "ImageViewCreateFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_VIEW_TYPE_1D-0]
	_ = x[IMAGE_VIEW_TYPE_2D-1]
	_ = x[IMAGE_VIEW_TYPE_3D-2]
	_ = x[IMAGE_VIEW_TYPE_CUBE-3]
	_ = x[IMAGE_VIEW_TYPE_1D_ARRAY-4]
	_ = x[IMAGE_VIEW_TYPE_2D_ARRAY-5]
	_ = x[IMAGE_VIEW_TYPE_CUBE_ARRAY-6]
}

const _ImageViewType_name = "IMAGE_VIEW_TYPE_1DIMAGE_VIEW_TYPE_2DIMAGE_VIEW_TYPE_3DIMAGE_VIEW_TYPE_CUBEIMAGE_VIEW_TYPE_1D_ARRAYIMAGE_VIEW_TYPE_2D_ARRAYIMAGE_VIEW_TYPE_CUBE_ARRAY"

var _ImageViewType_index = [...]uint8{0, 18, 36, 54, 74, 98, 122, 148}

func (i ImageViewType) String() string {
	if i < 0 || i >= ImageViewType(len(_ImageViewType_index)-1) {
		return "ImageViewType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ImageViewType_name[_ImageViewType_index[i]:_ImageViewType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INDEX_TYPE_UINT16-0]
	_ = x[INDEX_TYPE_UINT32-1]
	_ = x[INDEX_TYPE_NONE_KHR-1000150000]
	_ = x[INDEX_TYPE_UINT8_EXT-1000265000]
	_ = x[INDEX_TYPE_NONE_NV-1000150000]
}

const (
	_IndexType_name_0 = "INDEX_TYPE_UINT16INDEX_TYPE_UINT32"
	_IndexType_name_1 = "INDEX_TYPE_NONE_KHR"
	_IndexType_name_2 = "INDEX_TYPE_UINT8_EXT"
)

var (
	_IndexType_index_0 = [...]uint8{0, 17, 34}
)

func (i IndexType) String() string {
	switch {
	case 0 <= i && i <= 1:
		return _IndexType_name_0[_IndexType_index_0[i]:_IndexType_index_0[i+1]]
	case i == 1000150000:
		return _IndexType_name_1
	case i == 1000265000:
		return _IndexType_name_2
	default:
		return "IndexType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INDIRECT_COMMANDS_LAYOUT_USAGE_EXPLICIT_PREPROCESS_BIT_NV-1]
	_ = x[INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NV-2]
	_ = x[INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NV-4]
}

const (
	_IndirectCommandsLayoutUsageFlagBitsNV_name_0 = "INDIRECT_COMMANDS_LAYOUT_USAGE_EXPLICIT_PREPROCESS_BIT_NVINDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NV"
	_IndirectCommandsLayoutUsageFlagBitsNV_name_1 = "INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NV"
)

var (
	_IndirectCommandsLayoutUsageFlagBitsNV_index_0 = [...]uint8{0, 57, 112}
)

func (i IndirectCommandsLayoutUsageFlagBitsNV) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _IndirectCommandsLayoutUsageFlagBitsNV_name_0[_IndirectCommandsLayoutUsageFlagBitsNV_index_0[i]:_IndirectCommandsLayoutUsageFlagBitsNV_index_0[i+1]]
	case i == 4:
		return _IndirectCommandsLayoutUsageFlagBitsNV_name_1
	default:
		return "IndirectCommandsLayoutUsageFlagBitsNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_SHADER_GROUP_NV-0]
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_STATE_FLAGS_NV-1]
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NV-2]
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NV-3]
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NV-4]
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NV-5]
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NV-6]
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_TASKS_NV-7]
}

const _IndirectCommandsTokenTypeNV_name = "INDIRECT_COMMANDS_TOKEN_TYPE_SHADER_GROUP_NVINDIRECT_COMMANDS_TOKEN_TYPE_STATE_FLAGS_NVINDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NVINDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NVINDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NVINDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NVINDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NVINDIRECT_COMMANDS_TOKEN_TYPE_DRAW_TASKS_NV"

var _IndirectCommandsTokenTypeNV_index = [...]uint16{0, 44, 87, 131, 176, 221, 265, 301, 343}

func (i IndirectCommandsTokenTypeNV) String() string {
	if i < 0 || i >= IndirectCommandsTokenTypeNV(len(_IndirectCommandsTokenTypeNV_index)-1) {
		return "IndirectCommandsTokenTypeNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _IndirectCommandsTokenTypeNV_name[_IndirectCommandsTokenTypeNV_index[i]:_IndirectCommandsTokenTypeNV_index[i+1]]
}
