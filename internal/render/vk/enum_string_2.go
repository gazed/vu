// Code generated by "stringer -output=enum_string_2.go -type=DeviceMemoryReportEventTypeEXT,DeviceQueueCreateFlagBits,DirectDriverLoadingModeLUNARG,DiscardRectangleModeEXT,DisplayEventTypeEXT,DisplayPlaneAlphaFlagBitsKHR,DisplayPowerStateEXT,DriverId,DynamicState,EventCreateFlagBits,ExternalFenceFeatureFlagBits,ExternalFenceHandleTypeFlagBits,ExternalMemoryFeatureFlagBits,ExternalMemoryFeatureFlagBitsNV,ExternalMemoryHandleTypeFlagBits,ExternalMemoryHandleTypeFlagBitsNV,ExternalSemaphoreFeatureFlagBits,ExternalSemaphoreHandleTypeFlagBits,FenceCreateFlagBits,FenceImportFlagBits,Filter,Format,FormatFeatureFlagBits,FormatFeatureFlagBits2,FragmentShadingRateCombinerOpKHR,FragmentShadingRateNV,FragmentShadingRateTypeNV,FrameBoundaryFlagBitsEXT,FramebufferCreateFlagBits,FrontFace,GeometryFlagBitsKHR"; DO NOT EDIT.

package vk

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATE_EXT-0]
	_ = x[DEVICE_MEMORY_REPORT_EVENT_TYPE_FREE_EXT-1]
	_ = x[DEVICE_MEMORY_REPORT_EVENT_TYPE_IMPORT_EXT-2]
	_ = x[DEVICE_MEMORY_REPORT_EVENT_TYPE_UNIMPORT_EXT-3]
	_ = x[DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATION_FAILED_EXT-4]
}

const _DeviceMemoryReportEventTypeEXT_name = "DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATE_EXTDEVICE_MEMORY_REPORT_EVENT_TYPE_FREE_EXTDEVICE_MEMORY_REPORT_EVENT_TYPE_IMPORT_EXTDEVICE_MEMORY_REPORT_EVENT_TYPE_UNIMPORT_EXTDEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATION_FAILED_EXT"

var _DeviceMemoryReportEventTypeEXT_index = [...]uint8{0, 44, 84, 126, 170, 223}

func (i DeviceMemoryReportEventTypeEXT) String() string {
	if i < 0 || i >= DeviceMemoryReportEventTypeEXT(len(_DeviceMemoryReportEventTypeEXT_index)-1) {
		return "DeviceMemoryReportEventTypeEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DeviceMemoryReportEventTypeEXT_name[_DeviceMemoryReportEventTypeEXT_index[i]:_DeviceMemoryReportEventTypeEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DEVICE_QUEUE_CREATE_PROTECTED_BIT-1]
}

const _DeviceQueueCreateFlagBits_name = "DEVICE_QUEUE_CREATE_PROTECTED_BIT"

var _DeviceQueueCreateFlagBits_index = [...]uint8{0, 33}

func (i DeviceQueueCreateFlagBits) String() string {
	i -= 1
	if i >= DeviceQueueCreateFlagBits(len(_DeviceQueueCreateFlagBits_index)-1) {
		return "DeviceQueueCreateFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DeviceQueueCreateFlagBits_name[_DeviceQueueCreateFlagBits_index[i]:_DeviceQueueCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DIRECT_DRIVER_LOADING_MODE_EXCLUSIVE_LUNARG-0]
	_ = x[DIRECT_DRIVER_LOADING_MODE_INCLUSIVE_LUNARG-1]
}

const _DirectDriverLoadingModeLUNARG_name = "DIRECT_DRIVER_LOADING_MODE_EXCLUSIVE_LUNARGDIRECT_DRIVER_LOADING_MODE_INCLUSIVE_LUNARG"

var _DirectDriverLoadingModeLUNARG_index = [...]uint8{0, 43, 86}

func (i DirectDriverLoadingModeLUNARG) String() string {
	if i < 0 || i >= DirectDriverLoadingModeLUNARG(len(_DirectDriverLoadingModeLUNARG_index)-1) {
		return "DirectDriverLoadingModeLUNARG(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DirectDriverLoadingModeLUNARG_name[_DirectDriverLoadingModeLUNARG_index[i]:_DirectDriverLoadingModeLUNARG_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT-0]
	_ = x[DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT-1]
}

const _DiscardRectangleModeEXT_name = "DISCARD_RECTANGLE_MODE_INCLUSIVE_EXTDISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT"

var _DiscardRectangleModeEXT_index = [...]uint8{0, 36, 72}

func (i DiscardRectangleModeEXT) String() string {
	if i < 0 || i >= DiscardRectangleModeEXT(len(_DiscardRectangleModeEXT_index)-1) {
		return "DiscardRectangleModeEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DiscardRectangleModeEXT_name[_DiscardRectangleModeEXT_index[i]:_DiscardRectangleModeEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT-0]
}

const _DisplayEventTypeEXT_name = "DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT"

var _DisplayEventTypeEXT_index = [...]uint8{0, 38}

func (i DisplayEventTypeEXT) String() string {
	if i < 0 || i >= DisplayEventTypeEXT(len(_DisplayEventTypeEXT_index)-1) {
		return "DisplayEventTypeEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DisplayEventTypeEXT_name[_DisplayEventTypeEXT_index[i]:_DisplayEventTypeEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR-1]
	_ = x[DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR-2]
	_ = x[DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR-4]
	_ = x[DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR-8]
}

const (
	_DisplayPlaneAlphaFlagBitsKHR_name_0 = "DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHRDISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR"
	_DisplayPlaneAlphaFlagBitsKHR_name_1 = "DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR"
	_DisplayPlaneAlphaFlagBitsKHR_name_2 = "DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR"
)

var (
	_DisplayPlaneAlphaFlagBitsKHR_index_0 = [...]uint8{0, 34, 68}
)

func (i DisplayPlaneAlphaFlagBitsKHR) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DisplayPlaneAlphaFlagBitsKHR_name_0[_DisplayPlaneAlphaFlagBitsKHR_index_0[i]:_DisplayPlaneAlphaFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _DisplayPlaneAlphaFlagBitsKHR_name_1
	case i == 8:
		return _DisplayPlaneAlphaFlagBitsKHR_name_2
	default:
		return "DisplayPlaneAlphaFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DISPLAY_POWER_STATE_OFF_EXT-0]
	_ = x[DISPLAY_POWER_STATE_SUSPEND_EXT-1]
	_ = x[DISPLAY_POWER_STATE_ON_EXT-2]
}

const _DisplayPowerStateEXT_name = "DISPLAY_POWER_STATE_OFF_EXTDISPLAY_POWER_STATE_SUSPEND_EXTDISPLAY_POWER_STATE_ON_EXT"

var _DisplayPowerStateEXT_index = [...]uint8{0, 27, 58, 84}

func (i DisplayPowerStateEXT) String() string {
	if i < 0 || i >= DisplayPowerStateEXT(len(_DisplayPowerStateEXT_index)-1) {
		return "DisplayPowerStateEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DisplayPowerStateEXT_name[_DisplayPowerStateEXT_index[i]:_DisplayPowerStateEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DRIVER_ID_AMD_PROPRIETARY-1]
	_ = x[DRIVER_ID_AMD_OPEN_SOURCE-2]
	_ = x[DRIVER_ID_MESA_RADV-3]
	_ = x[DRIVER_ID_NVIDIA_PROPRIETARY-4]
	_ = x[DRIVER_ID_INTEL_PROPRIETARY_WINDOWS-5]
	_ = x[DRIVER_ID_INTEL_OPEN_SOURCE_MESA-6]
	_ = x[DRIVER_ID_IMAGINATION_PROPRIETARY-7]
	_ = x[DRIVER_ID_QUALCOMM_PROPRIETARY-8]
	_ = x[DRIVER_ID_ARM_PROPRIETARY-9]
	_ = x[DRIVER_ID_GOOGLE_SWIFTSHADER-10]
	_ = x[DRIVER_ID_GGP_PROPRIETARY-11]
	_ = x[DRIVER_ID_BROADCOM_PROPRIETARY-12]
	_ = x[DRIVER_ID_MESA_LLVMPIPE-13]
	_ = x[DRIVER_ID_MOLTENVK-14]
	_ = x[DRIVER_ID_COREAVI_PROPRIETARY-15]
	_ = x[DRIVER_ID_JUICE_PROPRIETARY-16]
	_ = x[DRIVER_ID_VERISILICON_PROPRIETARY-17]
	_ = x[DRIVER_ID_MESA_TURNIP-18]
	_ = x[DRIVER_ID_MESA_V3DV-19]
	_ = x[DRIVER_ID_MESA_PANVK-20]
	_ = x[DRIVER_ID_SAMSUNG_PROPRIETARY-21]
	_ = x[DRIVER_ID_MESA_VENUS-22]
	_ = x[DRIVER_ID_MESA_DOZEN-23]
	_ = x[DRIVER_ID_MESA_NVK-24]
	_ = x[DRIVER_ID_IMAGINATION_OPEN_SOURCE_MESA-25]
	_ = x[DRIVER_ID_MESA_AGXV-26]
	_ = x[DRIVER_ID_AMD_OPEN_SOURCE_KHR-2]
	_ = x[DRIVER_ID_AMD_PROPRIETARY_KHR-1]
	_ = x[DRIVER_ID_ARM_PROPRIETARY_KHR-9]
	_ = x[DRIVER_ID_BROADCOM_PROPRIETARY_KHR-12]
	_ = x[DRIVER_ID_GGP_PROPRIETARY_KHR-11]
	_ = x[DRIVER_ID_GOOGLE_SWIFTSHADER_KHR-10]
	_ = x[DRIVER_ID_IMAGINATION_PROPRIETARY_KHR-7]
	_ = x[DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR-6]
	_ = x[DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR-5]
	_ = x[DRIVER_ID_MESA_RADV_KHR-3]
	_ = x[DRIVER_ID_NVIDIA_PROPRIETARY_KHR-4]
	_ = x[DRIVER_ID_QUALCOMM_PROPRIETARY_KHR-8]
}

const _DriverId_name = "DRIVER_ID_AMD_PROPRIETARYDRIVER_ID_AMD_OPEN_SOURCEDRIVER_ID_MESA_RADVDRIVER_ID_NVIDIA_PROPRIETARYDRIVER_ID_INTEL_PROPRIETARY_WINDOWSDRIVER_ID_INTEL_OPEN_SOURCE_MESADRIVER_ID_IMAGINATION_PROPRIETARYDRIVER_ID_QUALCOMM_PROPRIETARYDRIVER_ID_ARM_PROPRIETARYDRIVER_ID_GOOGLE_SWIFTSHADERDRIVER_ID_GGP_PROPRIETARYDRIVER_ID_BROADCOM_PROPRIETARYDRIVER_ID_MESA_LLVMPIPEDRIVER_ID_MOLTENVKDRIVER_ID_COREAVI_PROPRIETARYDRIVER_ID_JUICE_PROPRIETARYDRIVER_ID_VERISILICON_PROPRIETARYDRIVER_ID_MESA_TURNIPDRIVER_ID_MESA_V3DVDRIVER_ID_MESA_PANVKDRIVER_ID_SAMSUNG_PROPRIETARYDRIVER_ID_MESA_VENUSDRIVER_ID_MESA_DOZENDRIVER_ID_MESA_NVKDRIVER_ID_IMAGINATION_OPEN_SOURCE_MESADRIVER_ID_MESA_AGXV"

var _DriverId_index = [...]uint16{0, 25, 50, 69, 97, 132, 164, 197, 227, 252, 280, 305, 335, 358, 376, 405, 432, 465, 486, 505, 525, 554, 574, 594, 612, 650, 669}

func (i DriverId) String() string {
	i -= 1
	if i < 0 || i >= DriverId(len(_DriverId_index)-1) {
		return "DriverId(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DriverId_name[_DriverId_index[i]:_DriverId_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DYNAMIC_STATE_VIEWPORT-0]
	_ = x[DYNAMIC_STATE_SCISSOR-1]
	_ = x[DYNAMIC_STATE_LINE_WIDTH-2]
	_ = x[DYNAMIC_STATE_DEPTH_BIAS-3]
	_ = x[DYNAMIC_STATE_BLEND_CONSTANTS-4]
	_ = x[DYNAMIC_STATE_DEPTH_BOUNDS-5]
	_ = x[DYNAMIC_STATE_STENCIL_COMPARE_MASK-6]
	_ = x[DYNAMIC_STATE_STENCIL_WRITE_MASK-7]
	_ = x[DYNAMIC_STATE_STENCIL_REFERENCE-8]
	_ = x[DYNAMIC_STATE_VIEWPORT_W_SCALING_NV-1000087000]
	_ = x[DYNAMIC_STATE_DISCARD_RECTANGLE_EXT-1000099000]
	_ = x[DYNAMIC_STATE_DISCARD_RECTANGLE_ENABLE_EXT-1000099001]
	_ = x[DYNAMIC_STATE_DISCARD_RECTANGLE_MODE_EXT-1000099002]
	_ = x[DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT-1000143000]
	_ = x[DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV-1000164004]
	_ = x[DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV-1000164006]
	_ = x[DYNAMIC_STATE_EXCLUSIVE_SCISSOR_ENABLE_NV-1000205000]
	_ = x[DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV-1000205001]
	_ = x[DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR-1000226000]
	_ = x[DYNAMIC_STATE_LINE_STIPPLE_EXT-1000259000]
	_ = x[DYNAMIC_STATE_CULL_MODE-1000267000]
	_ = x[DYNAMIC_STATE_FRONT_FACE-1000267001]
	_ = x[DYNAMIC_STATE_PRIMITIVE_TOPOLOGY-1000267002]
	_ = x[DYNAMIC_STATE_VIEWPORT_WITH_COUNT-1000267003]
	_ = x[DYNAMIC_STATE_SCISSOR_WITH_COUNT-1000267004]
	_ = x[DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE-1000267005]
	_ = x[DYNAMIC_STATE_DEPTH_TEST_ENABLE-1000267006]
	_ = x[DYNAMIC_STATE_DEPTH_WRITE_ENABLE-1000267007]
	_ = x[DYNAMIC_STATE_DEPTH_COMPARE_OP-1000267008]
	_ = x[DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE-1000267009]
	_ = x[DYNAMIC_STATE_STENCIL_TEST_ENABLE-1000267010]
	_ = x[DYNAMIC_STATE_STENCIL_OP-1000267011]
	_ = x[DYNAMIC_STATE_RAY_TRACING_PIPELINE_STACK_SIZE_KHR-1000347000]
	_ = x[DYNAMIC_STATE_VERTEX_INPUT_EXT-1000352000]
	_ = x[DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT-1000377000]
	_ = x[DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE-1000377001]
	_ = x[DYNAMIC_STATE_DEPTH_BIAS_ENABLE-1000377002]
	_ = x[DYNAMIC_STATE_LOGIC_OP_EXT-1000377003]
	_ = x[DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE-1000377004]
	_ = x[DYNAMIC_STATE_COLOR_WRITE_ENABLE_EXT-1000381000]
	_ = x[DYNAMIC_STATE_TESSELLATION_DOMAIN_ORIGIN_EXT-1000455002]
	_ = x[DYNAMIC_STATE_DEPTH_CLAMP_ENABLE_EXT-1000455003]
	_ = x[DYNAMIC_STATE_POLYGON_MODE_EXT-1000455004]
	_ = x[DYNAMIC_STATE_RASTERIZATION_SAMPLES_EXT-1000455005]
	_ = x[DYNAMIC_STATE_SAMPLE_MASK_EXT-1000455006]
	_ = x[DYNAMIC_STATE_ALPHA_TO_COVERAGE_ENABLE_EXT-1000455007]
	_ = x[DYNAMIC_STATE_ALPHA_TO_ONE_ENABLE_EXT-1000455008]
	_ = x[DYNAMIC_STATE_LOGIC_OP_ENABLE_EXT-1000455009]
	_ = x[DYNAMIC_STATE_COLOR_BLEND_ENABLE_EXT-1000455010]
	_ = x[DYNAMIC_STATE_COLOR_BLEND_EQUATION_EXT-1000455011]
	_ = x[DYNAMIC_STATE_COLOR_WRITE_MASK_EXT-1000455012]
	_ = x[DYNAMIC_STATE_RASTERIZATION_STREAM_EXT-1000455013]
	_ = x[DYNAMIC_STATE_CONSERVATIVE_RASTERIZATION_MODE_EXT-1000455014]
	_ = x[DYNAMIC_STATE_EXTRA_PRIMITIVE_OVERESTIMATION_SIZE_EXT-1000455015]
	_ = x[DYNAMIC_STATE_DEPTH_CLIP_ENABLE_EXT-1000455016]
	_ = x[DYNAMIC_STATE_SAMPLE_LOCATIONS_ENABLE_EXT-1000455017]
	_ = x[DYNAMIC_STATE_COLOR_BLEND_ADVANCED_EXT-1000455018]
	_ = x[DYNAMIC_STATE_PROVOKING_VERTEX_MODE_EXT-1000455019]
	_ = x[DYNAMIC_STATE_LINE_RASTERIZATION_MODE_EXT-1000455020]
	_ = x[DYNAMIC_STATE_LINE_STIPPLE_ENABLE_EXT-1000455021]
	_ = x[DYNAMIC_STATE_DEPTH_CLIP_NEGATIVE_ONE_TO_ONE_EXT-1000455022]
	_ = x[DYNAMIC_STATE_VIEWPORT_W_SCALING_ENABLE_NV-1000455023]
	_ = x[DYNAMIC_STATE_VIEWPORT_SWIZZLE_NV-1000455024]
	_ = x[DYNAMIC_STATE_COVERAGE_TO_COLOR_ENABLE_NV-1000455025]
	_ = x[DYNAMIC_STATE_COVERAGE_TO_COLOR_LOCATION_NV-1000455026]
	_ = x[DYNAMIC_STATE_COVERAGE_MODULATION_MODE_NV-1000455027]
	_ = x[DYNAMIC_STATE_COVERAGE_MODULATION_TABLE_ENABLE_NV-1000455028]
	_ = x[DYNAMIC_STATE_COVERAGE_MODULATION_TABLE_NV-1000455029]
	_ = x[DYNAMIC_STATE_SHADING_RATE_IMAGE_ENABLE_NV-1000455030]
	_ = x[DYNAMIC_STATE_REPRESENTATIVE_FRAGMENT_TEST_ENABLE_NV-1000455031]
	_ = x[DYNAMIC_STATE_COVERAGE_REDUCTION_MODE_NV-1000455032]
	_ = x[DYNAMIC_STATE_ATTACHMENT_FEEDBACK_LOOP_ENABLE_EXT-1000524000]
	_ = x[DYNAMIC_STATE_CULL_MODE_EXT-1000267000]
	_ = x[DYNAMIC_STATE_DEPTH_BIAS_ENABLE_EXT-1000377002]
	_ = x[DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE_EXT-1000267009]
	_ = x[DYNAMIC_STATE_DEPTH_COMPARE_OP_EXT-1000267008]
	_ = x[DYNAMIC_STATE_DEPTH_TEST_ENABLE_EXT-1000267006]
	_ = x[DYNAMIC_STATE_DEPTH_WRITE_ENABLE_EXT-1000267007]
	_ = x[DYNAMIC_STATE_FRONT_FACE_EXT-1000267001]
	_ = x[DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE_EXT-1000377004]
	_ = x[DYNAMIC_STATE_PRIMITIVE_TOPOLOGY_EXT-1000267002]
	_ = x[DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE_EXT-1000377001]
	_ = x[DYNAMIC_STATE_SCISSOR_WITH_COUNT_EXT-1000267004]
	_ = x[DYNAMIC_STATE_STENCIL_OP_EXT-1000267011]
	_ = x[DYNAMIC_STATE_STENCIL_TEST_ENABLE_EXT-1000267010]
	_ = x[DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT-1000267005]
	_ = x[DYNAMIC_STATE_VIEWPORT_WITH_COUNT_EXT-1000267003]
}

const _DynamicState_name = "DYNAMIC_STATE_VIEWPORTDYNAMIC_STATE_SCISSORDYNAMIC_STATE_LINE_WIDTHDYNAMIC_STATE_DEPTH_BIASDYNAMIC_STATE_BLEND_CONSTANTSDYNAMIC_STATE_DEPTH_BOUNDSDYNAMIC_STATE_STENCIL_COMPARE_MASKDYNAMIC_STATE_STENCIL_WRITE_MASKDYNAMIC_STATE_STENCIL_REFERENCEDYNAMIC_STATE_VIEWPORT_W_SCALING_NVDYNAMIC_STATE_DISCARD_RECTANGLE_EXTDYNAMIC_STATE_DISCARD_RECTANGLE_ENABLE_EXTDYNAMIC_STATE_DISCARD_RECTANGLE_MODE_EXTDYNAMIC_STATE_SAMPLE_LOCATIONS_EXTDYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NVDYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NVDYNAMIC_STATE_EXCLUSIVE_SCISSOR_ENABLE_NVDYNAMIC_STATE_EXCLUSIVE_SCISSOR_NVDYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHRDYNAMIC_STATE_LINE_STIPPLE_EXTDYNAMIC_STATE_CULL_MODEDYNAMIC_STATE_FRONT_FACEDYNAMIC_STATE_PRIMITIVE_TOPOLOGYDYNAMIC_STATE_VIEWPORT_WITH_COUNTDYNAMIC_STATE_SCISSOR_WITH_COUNTDYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDEDYNAMIC_STATE_DEPTH_TEST_ENABLEDYNAMIC_STATE_DEPTH_WRITE_ENABLEDYNAMIC_STATE_DEPTH_COMPARE_OPDYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLEDYNAMIC_STATE_STENCIL_TEST_ENABLEDYNAMIC_STATE_STENCIL_OPDYNAMIC_STATE_RAY_TRACING_PIPELINE_STACK_SIZE_KHRDYNAMIC_STATE_VERTEX_INPUT_EXTDYNAMIC_STATE_PATCH_CONTROL_POINTS_EXTDYNAMIC_STATE_RASTERIZER_DISCARD_ENABLEDYNAMIC_STATE_DEPTH_BIAS_ENABLEDYNAMIC_STATE_LOGIC_OP_EXTDYNAMIC_STATE_PRIMITIVE_RESTART_ENABLEDYNAMIC_STATE_COLOR_WRITE_ENABLE_EXTDYNAMIC_STATE_TESSELLATION_DOMAIN_ORIGIN_EXTDYNAMIC_STATE_DEPTH_CLAMP_ENABLE_EXTDYNAMIC_STATE_POLYGON_MODE_EXTDYNAMIC_STATE_RASTERIZATION_SAMPLES_EXTDYNAMIC_STATE_SAMPLE_MASK_EXTDYNAMIC_STATE_ALPHA_TO_COVERAGE_ENABLE_EXTDYNAMIC_STATE_ALPHA_TO_ONE_ENABLE_EXTDYNAMIC_STATE_LOGIC_OP_ENABLE_EXTDYNAMIC_STATE_COLOR_BLEND_ENABLE_EXTDYNAMIC_STATE_COLOR_BLEND_EQUATION_EXTDYNAMIC_STATE_COLOR_WRITE_MASK_EXTDYNAMIC_STATE_RASTERIZATION_STREAM_EXTDYNAMIC_STATE_CONSERVATIVE_RASTERIZATION_MODE_EXTDYNAMIC_STATE_EXTRA_PRIMITIVE_OVERESTIMATION_SIZE_EXTDYNAMIC_STATE_DEPTH_CLIP_ENABLE_EXTDYNAMIC_STATE_SAMPLE_LOCATIONS_ENABLE_EXTDYNAMIC_STATE_COLOR_BLEND_ADVANCED_EXTDYNAMIC_STATE_PROVOKING_VERTEX_MODE_EXTDYNAMIC_STATE_LINE_RASTERIZATION_MODE_EXTDYNAMIC_STATE_LINE_STIPPLE_ENABLE_EXTDYNAMIC_STATE_DEPTH_CLIP_NEGATIVE_ONE_TO_ONE_EXTDYNAMIC_STATE_VIEWPORT_W_SCALING_ENABLE_NVDYNAMIC_STATE_VIEWPORT_SWIZZLE_NVDYNAMIC_STATE_COVERAGE_TO_COLOR_ENABLE_NVDYNAMIC_STATE_COVERAGE_TO_COLOR_LOCATION_NVDYNAMIC_STATE_COVERAGE_MODULATION_MODE_NVDYNAMIC_STATE_COVERAGE_MODULATION_TABLE_ENABLE_NVDYNAMIC_STATE_COVERAGE_MODULATION_TABLE_NVDYNAMIC_STATE_SHADING_RATE_IMAGE_ENABLE_NVDYNAMIC_STATE_REPRESENTATIVE_FRAGMENT_TEST_ENABLE_NVDYNAMIC_STATE_COVERAGE_REDUCTION_MODE_NVDYNAMIC_STATE_ATTACHMENT_FEEDBACK_LOOP_ENABLE_EXT"

var _DynamicState_map = map[DynamicState]string{
	0:          _DynamicState_name[0:22],
	1:          _DynamicState_name[22:43],
	2:          _DynamicState_name[43:67],
	3:          _DynamicState_name[67:91],
	4:          _DynamicState_name[91:120],
	5:          _DynamicState_name[120:146],
	6:          _DynamicState_name[146:180],
	7:          _DynamicState_name[180:212],
	8:          _DynamicState_name[212:243],
	1000087000: _DynamicState_name[243:278],
	1000099000: _DynamicState_name[278:313],
	1000099001: _DynamicState_name[313:355],
	1000099002: _DynamicState_name[355:395],
	1000143000: _DynamicState_name[395:429],
	1000164004: _DynamicState_name[429:475],
	1000164006: _DynamicState_name[475:520],
	1000205000: _DynamicState_name[520:561],
	1000205001: _DynamicState_name[561:595],
	1000226000: _DynamicState_name[595:634],
	1000259000: _DynamicState_name[634:664],
	1000267000: _DynamicState_name[664:687],
	1000267001: _DynamicState_name[687:711],
	1000267002: _DynamicState_name[711:743],
	1000267003: _DynamicState_name[743:776],
	1000267004: _DynamicState_name[776:808],
	1000267005: _DynamicState_name[808:849],
	1000267006: _DynamicState_name[849:880],
	1000267007: _DynamicState_name[880:912],
	1000267008: _DynamicState_name[912:942],
	1000267009: _DynamicState_name[942:980],
	1000267010: _DynamicState_name[980:1013],
	1000267011: _DynamicState_name[1013:1037],
	1000347000: _DynamicState_name[1037:1086],
	1000352000: _DynamicState_name[1086:1116],
	1000377000: _DynamicState_name[1116:1154],
	1000377001: _DynamicState_name[1154:1193],
	1000377002: _DynamicState_name[1193:1224],
	1000377003: _DynamicState_name[1224:1250],
	1000377004: _DynamicState_name[1250:1288],
	1000381000: _DynamicState_name[1288:1324],
	1000455002: _DynamicState_name[1324:1368],
	1000455003: _DynamicState_name[1368:1404],
	1000455004: _DynamicState_name[1404:1434],
	1000455005: _DynamicState_name[1434:1473],
	1000455006: _DynamicState_name[1473:1502],
	1000455007: _DynamicState_name[1502:1544],
	1000455008: _DynamicState_name[1544:1581],
	1000455009: _DynamicState_name[1581:1614],
	1000455010: _DynamicState_name[1614:1650],
	1000455011: _DynamicState_name[1650:1688],
	1000455012: _DynamicState_name[1688:1722],
	1000455013: _DynamicState_name[1722:1760],
	1000455014: _DynamicState_name[1760:1809],
	1000455015: _DynamicState_name[1809:1862],
	1000455016: _DynamicState_name[1862:1897],
	1000455017: _DynamicState_name[1897:1938],
	1000455018: _DynamicState_name[1938:1976],
	1000455019: _DynamicState_name[1976:2015],
	1000455020: _DynamicState_name[2015:2056],
	1000455021: _DynamicState_name[2056:2093],
	1000455022: _DynamicState_name[2093:2141],
	1000455023: _DynamicState_name[2141:2183],
	1000455024: _DynamicState_name[2183:2216],
	1000455025: _DynamicState_name[2216:2257],
	1000455026: _DynamicState_name[2257:2300],
	1000455027: _DynamicState_name[2300:2341],
	1000455028: _DynamicState_name[2341:2390],
	1000455029: _DynamicState_name[2390:2432],
	1000455030: _DynamicState_name[2432:2474],
	1000455031: _DynamicState_name[2474:2526],
	1000455032: _DynamicState_name[2526:2566],
	1000524000: _DynamicState_name[2566:2615],
}

func (i DynamicState) String() string {
	if str, ok := _DynamicState_map[i]; ok {
		return str
	}
	return "DynamicState(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EVENT_CREATE_DEVICE_ONLY_BIT-1]
	_ = x[EVENT_CREATE_DEVICE_ONLY_BIT_KHR-1]
}

const _EventCreateFlagBits_name = "EVENT_CREATE_DEVICE_ONLY_BIT"

var _EventCreateFlagBits_index = [...]uint8{0, 28}

func (i EventCreateFlagBits) String() string {
	i -= 1
	if i >= EventCreateFlagBits(len(_EventCreateFlagBits_index)-1) {
		return "EventCreateFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _EventCreateFlagBits_name[_EventCreateFlagBits_index[i]:_EventCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT-1]
	_ = x[EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT-2]
	_ = x[EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR-1]
	_ = x[EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR-2]
}

const _ExternalFenceFeatureFlagBits_name = "EXTERNAL_FENCE_FEATURE_EXPORTABLE_BITEXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT"

var _ExternalFenceFeatureFlagBits_index = [...]uint8{0, 37, 74}

func (i ExternalFenceFeatureFlagBits) String() string {
	i -= 1
	if i >= ExternalFenceFeatureFlagBits(len(_ExternalFenceFeatureFlagBits_index)-1) {
		return "ExternalFenceFeatureFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ExternalFenceFeatureFlagBits_name[_ExternalFenceFeatureFlagBits_index[i]:_ExternalFenceFeatureFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT-1]
	_ = x[EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT-2]
	_ = x[EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT-4]
	_ = x[EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT-8]
	_ = x[EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR-1]
	_ = x[EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR-2]
	_ = x[EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR-4]
	_ = x[EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR-8]
}

const (
	_ExternalFenceHandleTypeFlagBits_name_0 = "EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BITEXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT"
	_ExternalFenceHandleTypeFlagBits_name_1 = "EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT"
	_ExternalFenceHandleTypeFlagBits_name_2 = "EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT"
)

var (
	_ExternalFenceHandleTypeFlagBits_index_0 = [...]uint8{0, 40, 83}
)

func (i ExternalFenceHandleTypeFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ExternalFenceHandleTypeFlagBits_name_0[_ExternalFenceHandleTypeFlagBits_index_0[i]:_ExternalFenceHandleTypeFlagBits_index_0[i+1]]
	case i == 4:
		return _ExternalFenceHandleTypeFlagBits_name_1
	case i == 8:
		return _ExternalFenceHandleTypeFlagBits_name_2
	default:
		return "ExternalFenceHandleTypeFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT-1]
	_ = x[EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT-2]
	_ = x[EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT-4]
	_ = x[EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHR-1]
	_ = x[EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHR-2]
	_ = x[EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHR-4]
}

const (
	_ExternalMemoryFeatureFlagBits_name_0 = "EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BITEXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT"
	_ExternalMemoryFeatureFlagBits_name_1 = "EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT"
)

var (
	_ExternalMemoryFeatureFlagBits_index_0 = [...]uint8{0, 42, 80}
)

func (i ExternalMemoryFeatureFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ExternalMemoryFeatureFlagBits_name_0[_ExternalMemoryFeatureFlagBits_index_0[i]:_ExternalMemoryFeatureFlagBits_index_0[i+1]]
	case i == 4:
		return _ExternalMemoryFeatureFlagBits_name_1
	default:
		return "ExternalMemoryFeatureFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV-1]
	_ = x[EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV-2]
	_ = x[EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV-4]
}

const (
	_ExternalMemoryFeatureFlagBitsNV_name_0 = "EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NVEXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV"
	_ExternalMemoryFeatureFlagBitsNV_name_1 = "EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV"
)

var (
	_ExternalMemoryFeatureFlagBitsNV_index_0 = [...]uint8{0, 45, 86}
)

func (i ExternalMemoryFeatureFlagBitsNV) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ExternalMemoryFeatureFlagBitsNV_name_0[_ExternalMemoryFeatureFlagBitsNV_index_0[i]:_ExternalMemoryFeatureFlagBitsNV_index_0[i+1]]
	case i == 4:
		return _ExternalMemoryFeatureFlagBitsNV_name_1
	default:
		return "ExternalMemoryFeatureFlagBitsNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT-1]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT-2]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT-4]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT-8]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT-16]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT-32]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT-64]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT-1000125000]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT-1000178000]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT-1000178000]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_RDMA_ADDRESS_BIT_NV-1000371000]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR-8]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR-16]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR-32]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR-64]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR-1]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR-2]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR-4]
}

const (
	_ExternalMemoryHandleTypeFlagBits_name_0 = "EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BITEXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT"
	_ExternalMemoryHandleTypeFlagBits_name_1 = "EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT"
	_ExternalMemoryHandleTypeFlagBits_name_2 = "EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT"
	_ExternalMemoryHandleTypeFlagBits_name_3 = "EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT"
	_ExternalMemoryHandleTypeFlagBits_name_4 = "EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT"
	_ExternalMemoryHandleTypeFlagBits_name_5 = "EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT"
	_ExternalMemoryHandleTypeFlagBits_name_6 = "EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT"
	_ExternalMemoryHandleTypeFlagBits_name_7 = "EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT"
	_ExternalMemoryHandleTypeFlagBits_name_8 = "EXTERNAL_MEMORY_HANDLE_TYPE_RDMA_ADDRESS_BIT_NV"
)

var (
	_ExternalMemoryHandleTypeFlagBits_index_0 = [...]uint8{0, 41, 85}
)

func (i ExternalMemoryHandleTypeFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ExternalMemoryHandleTypeFlagBits_name_0[_ExternalMemoryHandleTypeFlagBits_index_0[i]:_ExternalMemoryHandleTypeFlagBits_index_0[i+1]]
	case i == 4:
		return _ExternalMemoryHandleTypeFlagBits_name_1
	case i == 8:
		return _ExternalMemoryHandleTypeFlagBits_name_2
	case i == 16:
		return _ExternalMemoryHandleTypeFlagBits_name_3
	case i == 32:
		return _ExternalMemoryHandleTypeFlagBits_name_4
	case i == 64:
		return _ExternalMemoryHandleTypeFlagBits_name_5
	case i == 1000125000:
		return _ExternalMemoryHandleTypeFlagBits_name_6
	case i == 1000178000:
		return _ExternalMemoryHandleTypeFlagBits_name_7
	case i == 1000371000:
		return _ExternalMemoryHandleTypeFlagBits_name_8
	default:
		return "ExternalMemoryHandleTypeFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV-1]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV-2]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV-4]
	_ = x[EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV-8]
}

const (
	_ExternalMemoryHandleTypeFlagBitsNV_name_0 = "EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NVEXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV"
	_ExternalMemoryHandleTypeFlagBitsNV_name_1 = "EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV"
	_ExternalMemoryHandleTypeFlagBitsNV_name_2 = "EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV"
)

var (
	_ExternalMemoryHandleTypeFlagBitsNV_index_0 = [...]uint8{0, 47, 98}
)

func (i ExternalMemoryHandleTypeFlagBitsNV) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ExternalMemoryHandleTypeFlagBitsNV_name_0[_ExternalMemoryHandleTypeFlagBitsNV_index_0[i]:_ExternalMemoryHandleTypeFlagBitsNV_index_0[i+1]]
	case i == 4:
		return _ExternalMemoryHandleTypeFlagBitsNV_name_1
	case i == 8:
		return _ExternalMemoryHandleTypeFlagBitsNV_name_2
	default:
		return "ExternalMemoryHandleTypeFlagBitsNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT-1]
	_ = x[EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT-2]
	_ = x[EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHR-1]
	_ = x[EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHR-2]
}

const _ExternalSemaphoreFeatureFlagBits_name = "EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BITEXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT"

var _ExternalSemaphoreFeatureFlagBits_index = [...]uint8{0, 41, 82}

func (i ExternalSemaphoreFeatureFlagBits) String() string {
	i -= 1
	if i >= ExternalSemaphoreFeatureFlagBits(len(_ExternalSemaphoreFeatureFlagBits_index)-1) {
		return "ExternalSemaphoreFeatureFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ExternalSemaphoreFeatureFlagBits_name[_ExternalSemaphoreFeatureFlagBits_index[i]:_ExternalSemaphoreFeatureFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT-1]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT-2]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT-4]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT-8]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT-16]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHR-8]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE_BIT-8]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR-1]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR-2]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR-4]
	_ = x[EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT_KHR-16]
}

const (
	_ExternalSemaphoreHandleTypeFlagBits_name_0 = "EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BITEXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT"
	_ExternalSemaphoreHandleTypeFlagBits_name_1 = "EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT"
	_ExternalSemaphoreHandleTypeFlagBits_name_2 = "EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT"
	_ExternalSemaphoreHandleTypeFlagBits_name_3 = "EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT"
)

var (
	_ExternalSemaphoreHandleTypeFlagBits_index_0 = [...]uint8{0, 44, 91}
)

func (i ExternalSemaphoreHandleTypeFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ExternalSemaphoreHandleTypeFlagBits_name_0[_ExternalSemaphoreHandleTypeFlagBits_index_0[i]:_ExternalSemaphoreHandleTypeFlagBits_index_0[i+1]]
	case i == 4:
		return _ExternalSemaphoreHandleTypeFlagBits_name_1
	case i == 8:
		return _ExternalSemaphoreHandleTypeFlagBits_name_2
	case i == 16:
		return _ExternalSemaphoreHandleTypeFlagBits_name_3
	default:
		return "ExternalSemaphoreHandleTypeFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FENCE_CREATE_SIGNALED_BIT-1]
}

const _FenceCreateFlagBits_name = "FENCE_CREATE_SIGNALED_BIT"

var _FenceCreateFlagBits_index = [...]uint8{0, 25}

func (i FenceCreateFlagBits) String() string {
	i -= 1
	if i >= FenceCreateFlagBits(len(_FenceCreateFlagBits_index)-1) {
		return "FenceCreateFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _FenceCreateFlagBits_name[_FenceCreateFlagBits_index[i]:_FenceCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FENCE_IMPORT_TEMPORARY_BIT-1]
	_ = x[FENCE_IMPORT_TEMPORARY_BIT_KHR-1]
}

const _FenceImportFlagBits_name = "FENCE_IMPORT_TEMPORARY_BIT"

var _FenceImportFlagBits_index = [...]uint8{0, 26}

func (i FenceImportFlagBits) String() string {
	i -= 1
	if i >= FenceImportFlagBits(len(_FenceImportFlagBits_index)-1) {
		return "FenceImportFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _FenceImportFlagBits_name[_FenceImportFlagBits_index[i]:_FenceImportFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FILTER_NEAREST-0]
	_ = x[FILTER_LINEAR-1]
	_ = x[FILTER_CUBIC_EXT-1000170000]
	_ = x[FILTER_CUBIC_IMG-1000170000]
}

const (
	_Filter_name_0 = "FILTER_NEARESTFILTER_LINEAR"
	_Filter_name_1 = "FILTER_CUBIC_EXT"
)

var (
	_Filter_index_0 = [...]uint8{0, 14, 27}
)

func (i Filter) String() string {
	switch {
	case 0 <= i && i <= 1:
		return _Filter_name_0[_Filter_index_0[i]:_Filter_index_0[i+1]]
	case i == 1000170000:
		return _Filter_name_1
	default:
		return "Filter(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FORMAT_UNDEFINED-0]
	_ = x[FORMAT_R4G4_UNORM_PACK8-1]
	_ = x[FORMAT_R4G4B4A4_UNORM_PACK16-2]
	_ = x[FORMAT_B4G4R4A4_UNORM_PACK16-3]
	_ = x[FORMAT_R5G6B5_UNORM_PACK16-4]
	_ = x[FORMAT_B5G6R5_UNORM_PACK16-5]
	_ = x[FORMAT_R5G5B5A1_UNORM_PACK16-6]
	_ = x[FORMAT_B5G5R5A1_UNORM_PACK16-7]
	_ = x[FORMAT_A1R5G5B5_UNORM_PACK16-8]
	_ = x[FORMAT_R8_UNORM-9]
	_ = x[FORMAT_R8_SNORM-10]
	_ = x[FORMAT_R8_USCALED-11]
	_ = x[FORMAT_R8_SSCALED-12]
	_ = x[FORMAT_R8_UINT-13]
	_ = x[FORMAT_R8_SINT-14]
	_ = x[FORMAT_R8_SRGB-15]
	_ = x[FORMAT_R8G8_UNORM-16]
	_ = x[FORMAT_R8G8_SNORM-17]
	_ = x[FORMAT_R8G8_USCALED-18]
	_ = x[FORMAT_R8G8_SSCALED-19]
	_ = x[FORMAT_R8G8_UINT-20]
	_ = x[FORMAT_R8G8_SINT-21]
	_ = x[FORMAT_R8G8_SRGB-22]
	_ = x[FORMAT_R8G8B8_UNORM-23]
	_ = x[FORMAT_R8G8B8_SNORM-24]
	_ = x[FORMAT_R8G8B8_USCALED-25]
	_ = x[FORMAT_R8G8B8_SSCALED-26]
	_ = x[FORMAT_R8G8B8_UINT-27]
	_ = x[FORMAT_R8G8B8_SINT-28]
	_ = x[FORMAT_R8G8B8_SRGB-29]
	_ = x[FORMAT_B8G8R8_UNORM-30]
	_ = x[FORMAT_B8G8R8_SNORM-31]
	_ = x[FORMAT_B8G8R8_USCALED-32]
	_ = x[FORMAT_B8G8R8_SSCALED-33]
	_ = x[FORMAT_B8G8R8_UINT-34]
	_ = x[FORMAT_B8G8R8_SINT-35]
	_ = x[FORMAT_B8G8R8_SRGB-36]
	_ = x[FORMAT_R8G8B8A8_UNORM-37]
	_ = x[FORMAT_R8G8B8A8_SNORM-38]
	_ = x[FORMAT_R8G8B8A8_USCALED-39]
	_ = x[FORMAT_R8G8B8A8_SSCALED-40]
	_ = x[FORMAT_R8G8B8A8_UINT-41]
	_ = x[FORMAT_R8G8B8A8_SINT-42]
	_ = x[FORMAT_R8G8B8A8_SRGB-43]
	_ = x[FORMAT_B8G8R8A8_UNORM-44]
	_ = x[FORMAT_B8G8R8A8_SNORM-45]
	_ = x[FORMAT_B8G8R8A8_USCALED-46]
	_ = x[FORMAT_B8G8R8A8_SSCALED-47]
	_ = x[FORMAT_B8G8R8A8_UINT-48]
	_ = x[FORMAT_B8G8R8A8_SINT-49]
	_ = x[FORMAT_B8G8R8A8_SRGB-50]
	_ = x[FORMAT_A8B8G8R8_UNORM_PACK32-51]
	_ = x[FORMAT_A8B8G8R8_SNORM_PACK32-52]
	_ = x[FORMAT_A8B8G8R8_USCALED_PACK32-53]
	_ = x[FORMAT_A8B8G8R8_SSCALED_PACK32-54]
	_ = x[FORMAT_A8B8G8R8_UINT_PACK32-55]
	_ = x[FORMAT_A8B8G8R8_SINT_PACK32-56]
	_ = x[FORMAT_A8B8G8R8_SRGB_PACK32-57]
	_ = x[FORMAT_A2R10G10B10_UNORM_PACK32-58]
	_ = x[FORMAT_A2R10G10B10_SNORM_PACK32-59]
	_ = x[FORMAT_A2R10G10B10_USCALED_PACK32-60]
	_ = x[FORMAT_A2R10G10B10_SSCALED_PACK32-61]
	_ = x[FORMAT_A2R10G10B10_UINT_PACK32-62]
	_ = x[FORMAT_A2R10G10B10_SINT_PACK32-63]
	_ = x[FORMAT_A2B10G10R10_UNORM_PACK32-64]
	_ = x[FORMAT_A2B10G10R10_SNORM_PACK32-65]
	_ = x[FORMAT_A2B10G10R10_USCALED_PACK32-66]
	_ = x[FORMAT_A2B10G10R10_SSCALED_PACK32-67]
	_ = x[FORMAT_A2B10G10R10_UINT_PACK32-68]
	_ = x[FORMAT_A2B10G10R10_SINT_PACK32-69]
	_ = x[FORMAT_R16_UNORM-70]
	_ = x[FORMAT_R16_SNORM-71]
	_ = x[FORMAT_R16_USCALED-72]
	_ = x[FORMAT_R16_SSCALED-73]
	_ = x[FORMAT_R16_UINT-74]
	_ = x[FORMAT_R16_SINT-75]
	_ = x[FORMAT_R16_SFLOAT-76]
	_ = x[FORMAT_R16G16_UNORM-77]
	_ = x[FORMAT_R16G16_SNORM-78]
	_ = x[FORMAT_R16G16_USCALED-79]
	_ = x[FORMAT_R16G16_SSCALED-80]
	_ = x[FORMAT_R16G16_UINT-81]
	_ = x[FORMAT_R16G16_SINT-82]
	_ = x[FORMAT_R16G16_SFLOAT-83]
	_ = x[FORMAT_R16G16B16_UNORM-84]
	_ = x[FORMAT_R16G16B16_SNORM-85]
	_ = x[FORMAT_R16G16B16_USCALED-86]
	_ = x[FORMAT_R16G16B16_SSCALED-87]
	_ = x[FORMAT_R16G16B16_UINT-88]
	_ = x[FORMAT_R16G16B16_SINT-89]
	_ = x[FORMAT_R16G16B16_SFLOAT-90]
	_ = x[FORMAT_R16G16B16A16_UNORM-91]
	_ = x[FORMAT_R16G16B16A16_SNORM-92]
	_ = x[FORMAT_R16G16B16A16_USCALED-93]
	_ = x[FORMAT_R16G16B16A16_SSCALED-94]
	_ = x[FORMAT_R16G16B16A16_UINT-95]
	_ = x[FORMAT_R16G16B16A16_SINT-96]
	_ = x[FORMAT_R16G16B16A16_SFLOAT-97]
	_ = x[FORMAT_R32_UINT-98]
	_ = x[FORMAT_R32_SINT-99]
	_ = x[FORMAT_R32_SFLOAT-100]
	_ = x[FORMAT_R32G32_UINT-101]
	_ = x[FORMAT_R32G32_SINT-102]
	_ = x[FORMAT_R32G32_SFLOAT-103]
	_ = x[FORMAT_R32G32B32_UINT-104]
	_ = x[FORMAT_R32G32B32_SINT-105]
	_ = x[FORMAT_R32G32B32_SFLOAT-106]
	_ = x[FORMAT_R32G32B32A32_UINT-107]
	_ = x[FORMAT_R32G32B32A32_SINT-108]
	_ = x[FORMAT_R32G32B32A32_SFLOAT-109]
	_ = x[FORMAT_R64_UINT-110]
	_ = x[FORMAT_R64_SINT-111]
	_ = x[FORMAT_R64_SFLOAT-112]
	_ = x[FORMAT_R64G64_UINT-113]
	_ = x[FORMAT_R64G64_SINT-114]
	_ = x[FORMAT_R64G64_SFLOAT-115]
	_ = x[FORMAT_R64G64B64_UINT-116]
	_ = x[FORMAT_R64G64B64_SINT-117]
	_ = x[FORMAT_R64G64B64_SFLOAT-118]
	_ = x[FORMAT_R64G64B64A64_UINT-119]
	_ = x[FORMAT_R64G64B64A64_SINT-120]
	_ = x[FORMAT_R64G64B64A64_SFLOAT-121]
	_ = x[FORMAT_B10G11R11_UFLOAT_PACK32-122]
	_ = x[FORMAT_E5B9G9R9_UFLOAT_PACK32-123]
	_ = x[FORMAT_D16_UNORM-124]
	_ = x[FORMAT_X8_D24_UNORM_PACK32-125]
	_ = x[FORMAT_D32_SFLOAT-126]
	_ = x[FORMAT_S8_UINT-127]
	_ = x[FORMAT_D16_UNORM_S8_UINT-128]
	_ = x[FORMAT_D24_UNORM_S8_UINT-129]
	_ = x[FORMAT_D32_SFLOAT_S8_UINT-130]
	_ = x[FORMAT_BC1_RGB_UNORM_BLOCK-131]
	_ = x[FORMAT_BC1_RGB_SRGB_BLOCK-132]
	_ = x[FORMAT_BC1_RGBA_UNORM_BLOCK-133]
	_ = x[FORMAT_BC1_RGBA_SRGB_BLOCK-134]
	_ = x[FORMAT_BC2_UNORM_BLOCK-135]
	_ = x[FORMAT_BC2_SRGB_BLOCK-136]
	_ = x[FORMAT_BC3_UNORM_BLOCK-137]
	_ = x[FORMAT_BC3_SRGB_BLOCK-138]
	_ = x[FORMAT_BC4_UNORM_BLOCK-139]
	_ = x[FORMAT_BC4_SNORM_BLOCK-140]
	_ = x[FORMAT_BC5_UNORM_BLOCK-141]
	_ = x[FORMAT_BC5_SNORM_BLOCK-142]
	_ = x[FORMAT_BC6H_UFLOAT_BLOCK-143]
	_ = x[FORMAT_BC6H_SFLOAT_BLOCK-144]
	_ = x[FORMAT_BC7_UNORM_BLOCK-145]
	_ = x[FORMAT_BC7_SRGB_BLOCK-146]
	_ = x[FORMAT_ETC2_R8G8B8_UNORM_BLOCK-147]
	_ = x[FORMAT_ETC2_R8G8B8_SRGB_BLOCK-148]
	_ = x[FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK-149]
	_ = x[FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK-150]
	_ = x[FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK-151]
	_ = x[FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK-152]
	_ = x[FORMAT_EAC_R11_UNORM_BLOCK-153]
	_ = x[FORMAT_EAC_R11_SNORM_BLOCK-154]
	_ = x[FORMAT_EAC_R11G11_UNORM_BLOCK-155]
	_ = x[FORMAT_EAC_R11G11_SNORM_BLOCK-156]
	_ = x[FORMAT_ASTC_4x4_UNORM_BLOCK-157]
	_ = x[FORMAT_ASTC_4x4_SRGB_BLOCK-158]
	_ = x[FORMAT_ASTC_5x4_UNORM_BLOCK-159]
	_ = x[FORMAT_ASTC_5x4_SRGB_BLOCK-160]
	_ = x[FORMAT_ASTC_5x5_UNORM_BLOCK-161]
	_ = x[FORMAT_ASTC_5x5_SRGB_BLOCK-162]
	_ = x[FORMAT_ASTC_6x5_UNORM_BLOCK-163]
	_ = x[FORMAT_ASTC_6x5_SRGB_BLOCK-164]
	_ = x[FORMAT_ASTC_6x6_UNORM_BLOCK-165]
	_ = x[FORMAT_ASTC_6x6_SRGB_BLOCK-166]
	_ = x[FORMAT_ASTC_8x5_UNORM_BLOCK-167]
	_ = x[FORMAT_ASTC_8x5_SRGB_BLOCK-168]
	_ = x[FORMAT_ASTC_8x6_UNORM_BLOCK-169]
	_ = x[FORMAT_ASTC_8x6_SRGB_BLOCK-170]
	_ = x[FORMAT_ASTC_8x8_UNORM_BLOCK-171]
	_ = x[FORMAT_ASTC_8x8_SRGB_BLOCK-172]
	_ = x[FORMAT_ASTC_10x5_UNORM_BLOCK-173]
	_ = x[FORMAT_ASTC_10x5_SRGB_BLOCK-174]
	_ = x[FORMAT_ASTC_10x6_UNORM_BLOCK-175]
	_ = x[FORMAT_ASTC_10x6_SRGB_BLOCK-176]
	_ = x[FORMAT_ASTC_10x8_UNORM_BLOCK-177]
	_ = x[FORMAT_ASTC_10x8_SRGB_BLOCK-178]
	_ = x[FORMAT_ASTC_10x10_UNORM_BLOCK-179]
	_ = x[FORMAT_ASTC_10x10_SRGB_BLOCK-180]
	_ = x[FORMAT_ASTC_12x10_UNORM_BLOCK-181]
	_ = x[FORMAT_ASTC_12x10_SRGB_BLOCK-182]
	_ = x[FORMAT_ASTC_12x12_UNORM_BLOCK-183]
	_ = x[FORMAT_ASTC_12x12_SRGB_BLOCK-184]
	_ = x[FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG-1000054000]
	_ = x[FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG-1000054001]
	_ = x[FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG-1000054002]
	_ = x[FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG-1000054003]
	_ = x[FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG-1000054004]
	_ = x[FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG-1000054005]
	_ = x[FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG-1000054006]
	_ = x[FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG-1000054007]
	_ = x[FORMAT_ASTC_4x4_SFLOAT_BLOCK-1000066000]
	_ = x[FORMAT_ASTC_5x4_SFLOAT_BLOCK-1000066001]
	_ = x[FORMAT_ASTC_5x5_SFLOAT_BLOCK-1000066002]
	_ = x[FORMAT_ASTC_6x5_SFLOAT_BLOCK-1000066003]
	_ = x[FORMAT_ASTC_6x6_SFLOAT_BLOCK-1000066004]
	_ = x[FORMAT_ASTC_8x5_SFLOAT_BLOCK-1000066005]
	_ = x[FORMAT_ASTC_8x6_SFLOAT_BLOCK-1000066006]
	_ = x[FORMAT_ASTC_8x8_SFLOAT_BLOCK-1000066007]
	_ = x[FORMAT_ASTC_10x5_SFLOAT_BLOCK-1000066008]
	_ = x[FORMAT_ASTC_10x6_SFLOAT_BLOCK-1000066009]
	_ = x[FORMAT_ASTC_10x8_SFLOAT_BLOCK-1000066010]
	_ = x[FORMAT_ASTC_10x10_SFLOAT_BLOCK-1000066011]
	_ = x[FORMAT_ASTC_12x10_SFLOAT_BLOCK-1000066012]
	_ = x[FORMAT_ASTC_12x12_SFLOAT_BLOCK-1000066013]
	_ = x[FORMAT_G8B8G8R8_422_UNORM-1000156000]
	_ = x[FORMAT_B8G8R8G8_422_UNORM-1000156001]
	_ = x[FORMAT_G8_B8_R8_3PLANE_420_UNORM-1000156002]
	_ = x[FORMAT_G8_B8R8_2PLANE_420_UNORM-1000156003]
	_ = x[FORMAT_G8_B8_R8_3PLANE_422_UNORM-1000156004]
	_ = x[FORMAT_G8_B8R8_2PLANE_422_UNORM-1000156005]
	_ = x[FORMAT_G8_B8_R8_3PLANE_444_UNORM-1000156006]
	_ = x[FORMAT_R10X6_UNORM_PACK16-1000156007]
	_ = x[FORMAT_R10X6G10X6_UNORM_2PACK16-1000156008]
	_ = x[FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16-1000156009]
	_ = x[FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16-1000156010]
	_ = x[FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16-1000156011]
	_ = x[FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16-1000156012]
	_ = x[FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16-1000156013]
	_ = x[FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16-1000156014]
	_ = x[FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16-1000156015]
	_ = x[FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16-1000156016]
	_ = x[FORMAT_R12X4_UNORM_PACK16-1000156017]
	_ = x[FORMAT_R12X4G12X4_UNORM_2PACK16-1000156018]
	_ = x[FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16-1000156019]
	_ = x[FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16-1000156020]
	_ = x[FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16-1000156021]
	_ = x[FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16-1000156022]
	_ = x[FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16-1000156023]
	_ = x[FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16-1000156024]
	_ = x[FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16-1000156025]
	_ = x[FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16-1000156026]
	_ = x[FORMAT_G16B16G16R16_422_UNORM-1000156027]
	_ = x[FORMAT_B16G16R16G16_422_UNORM-1000156028]
	_ = x[FORMAT_G16_B16_R16_3PLANE_420_UNORM-1000156029]
	_ = x[FORMAT_G16_B16R16_2PLANE_420_UNORM-1000156030]
	_ = x[FORMAT_G16_B16_R16_3PLANE_422_UNORM-1000156031]
	_ = x[FORMAT_G16_B16R16_2PLANE_422_UNORM-1000156032]
	_ = x[FORMAT_G16_B16_R16_3PLANE_444_UNORM-1000156033]
	_ = x[FORMAT_G8_B8R8_2PLANE_444_UNORM-1000330000]
	_ = x[FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16-1000330001]
	_ = x[FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16-1000330002]
	_ = x[FORMAT_G16_B16R16_2PLANE_444_UNORM-1000330003]
	_ = x[FORMAT_A4R4G4B4_UNORM_PACK16-1000340000]
	_ = x[FORMAT_A4B4G4R4_UNORM_PACK16-1000340001]
	_ = x[FORMAT_R16G16_S10_5_NV-1000464000]
	_ = x[FORMAT_A1B5G5R5_UNORM_PACK16_KHR-1000470000]
	_ = x[FORMAT_A8_UNORM_KHR-1000470001]
	_ = x[FORMAT_A4B4G4R4_UNORM_PACK16_EXT-1000340001]
	_ = x[FORMAT_A4R4G4B4_UNORM_PACK16_EXT-1000340000]
	_ = x[FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT-1000066011]
	_ = x[FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT-1000066008]
	_ = x[FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT-1000066009]
	_ = x[FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT-1000066010]
	_ = x[FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT-1000066012]
	_ = x[FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT-1000066013]
	_ = x[FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT-1000066000]
	_ = x[FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT-1000066001]
	_ = x[FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT-1000066002]
	_ = x[FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT-1000066003]
	_ = x[FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT-1000066004]
	_ = x[FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT-1000066005]
	_ = x[FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT-1000066006]
	_ = x[FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT-1000066007]
	_ = x[FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR-1000156011]
	_ = x[FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR-1000156021]
	_ = x[FORMAT_B16G16R16G16_422_UNORM_KHR-1000156028]
	_ = x[FORMAT_B8G8R8G8_422_UNORM_KHR-1000156001]
	_ = x[FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR-1000156010]
	_ = x[FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR-1000156013]
	_ = x[FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR-1000156015]
	_ = x[FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT-1000330001]
	_ = x[FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR-1000156012]
	_ = x[FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR-1000156014]
	_ = x[FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR-1000156016]
	_ = x[FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR-1000156020]
	_ = x[FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR-1000156023]
	_ = x[FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR-1000156025]
	_ = x[FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT-1000330002]
	_ = x[FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR-1000156022]
	_ = x[FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR-1000156024]
	_ = x[FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR-1000156026]
	_ = x[FORMAT_G16B16G16R16_422_UNORM_KHR-1000156027]
	_ = x[FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR-1000156030]
	_ = x[FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR-1000156032]
	_ = x[FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT-1000330003]
	_ = x[FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR-1000156029]
	_ = x[FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR-1000156031]
	_ = x[FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR-1000156033]
	_ = x[FORMAT_G8B8G8R8_422_UNORM_KHR-1000156000]
	_ = x[FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR-1000156003]
	_ = x[FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR-1000156005]
	_ = x[FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT-1000330000]
	_ = x[FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR-1000156002]
	_ = x[FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR-1000156004]
	_ = x[FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR-1000156006]
	_ = x[FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR-1000156009]
	_ = x[FORMAT_R10X6G10X6_UNORM_2PACK16_KHR-1000156008]
	_ = x[FORMAT_R10X6_UNORM_PACK16_KHR-1000156007]
	_ = x[FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR-1000156019]
	_ = x[FORMAT_R12X4G12X4_UNORM_2PACK16_KHR-1000156018]
	_ = x[FORMAT_R12X4_UNORM_PACK16_KHR-1000156017]
}

const (
	_Format_name_0 = "FORMAT_UNDEFINEDFORMAT_R4G4_UNORM_PACK8FORMAT_R4G4B4A4_UNORM_PACK16FORMAT_B4G4R4A4_UNORM_PACK16FORMAT_R5G6B5_UNORM_PACK16FORMAT_B5G6R5_UNORM_PACK16FORMAT_R5G5B5A1_UNORM_PACK16FORMAT_B5G5R5A1_UNORM_PACK16FORMAT_A1R5G5B5_UNORM_PACK16FORMAT_R8_UNORMFORMAT_R8_SNORMFORMAT_R8_USCALEDFORMAT_R8_SSCALEDFORMAT_R8_UINTFORMAT_R8_SINTFORMAT_R8_SRGBFORMAT_R8G8_UNORMFORMAT_R8G8_SNORMFORMAT_R8G8_USCALEDFORMAT_R8G8_SSCALEDFORMAT_R8G8_UINTFORMAT_R8G8_SINTFORMAT_R8G8_SRGBFORMAT_R8G8B8_UNORMFORMAT_R8G8B8_SNORMFORMAT_R8G8B8_USCALEDFORMAT_R8G8B8_SSCALEDFORMAT_R8G8B8_UINTFORMAT_R8G8B8_SINTFORMAT_R8G8B8_SRGBFORMAT_B8G8R8_UNORMFORMAT_B8G8R8_SNORMFORMAT_B8G8R8_USCALEDFORMAT_B8G8R8_SSCALEDFORMAT_B8G8R8_UINTFORMAT_B8G8R8_SINTFORMAT_B8G8R8_SRGBFORMAT_R8G8B8A8_UNORMFORMAT_R8G8B8A8_SNORMFORMAT_R8G8B8A8_USCALEDFORMAT_R8G8B8A8_SSCALEDFORMAT_R8G8B8A8_UINTFORMAT_R8G8B8A8_SINTFORMAT_R8G8B8A8_SRGBFORMAT_B8G8R8A8_UNORMFORMAT_B8G8R8A8_SNORMFORMAT_B8G8R8A8_USCALEDFORMAT_B8G8R8A8_SSCALEDFORMAT_B8G8R8A8_UINTFORMAT_B8G8R8A8_SINTFORMAT_B8G8R8A8_SRGBFORMAT_A8B8G8R8_UNORM_PACK32FORMAT_A8B8G8R8_SNORM_PACK32FORMAT_A8B8G8R8_USCALED_PACK32FORMAT_A8B8G8R8_SSCALED_PACK32FORMAT_A8B8G8R8_UINT_PACK32FORMAT_A8B8G8R8_SINT_PACK32FORMAT_A8B8G8R8_SRGB_PACK32FORMAT_A2R10G10B10_UNORM_PACK32FORMAT_A2R10G10B10_SNORM_PACK32FORMAT_A2R10G10B10_USCALED_PACK32FORMAT_A2R10G10B10_SSCALED_PACK32FORMAT_A2R10G10B10_UINT_PACK32FORMAT_A2R10G10B10_SINT_PACK32FORMAT_A2B10G10R10_UNORM_PACK32FORMAT_A2B10G10R10_SNORM_PACK32FORMAT_A2B10G10R10_USCALED_PACK32FORMAT_A2B10G10R10_SSCALED_PACK32FORMAT_A2B10G10R10_UINT_PACK32FORMAT_A2B10G10R10_SINT_PACK32FORMAT_R16_UNORMFORMAT_R16_SNORMFORMAT_R16_USCALEDFORMAT_R16_SSCALEDFORMAT_R16_UINTFORMAT_R16_SINTFORMAT_R16_SFLOATFORMAT_R16G16_UNORMFORMAT_R16G16_SNORMFORMAT_R16G16_USCALEDFORMAT_R16G16_SSCALEDFORMAT_R16G16_UINTFORMAT_R16G16_SINTFORMAT_R16G16_SFLOATFORMAT_R16G16B16_UNORMFORMAT_R16G16B16_SNORMFORMAT_R16G16B16_USCALEDFORMAT_R16G16B16_SSCALEDFORMAT_R16G16B16_UINTFORMAT_R16G16B16_SINTFORMAT_R16G16B16_SFLOATFORMAT_R16G16B16A16_UNORMFORMAT_R16G16B16A16_SNORMFORMAT_R16G16B16A16_USCALEDFORMAT_R16G16B16A16_SSCALEDFORMAT_R16G16B16A16_UINTFORMAT_R16G16B16A16_SINTFORMAT_R16G16B16A16_SFLOATFORMAT_R32_UINTFORMAT_R32_SINTFORMAT_R32_SFLOATFORMAT_R32G32_UINTFORMAT_R32G32_SINTFORMAT_R32G32_SFLOATFORMAT_R32G32B32_UINTFORMAT_R32G32B32_SINTFORMAT_R32G32B32_SFLOATFORMAT_R32G32B32A32_UINTFORMAT_R32G32B32A32_SINTFORMAT_R32G32B32A32_SFLOATFORMAT_R64_UINTFORMAT_R64_SINTFORMAT_R64_SFLOATFORMAT_R64G64_UINTFORMAT_R64G64_SINTFORMAT_R64G64_SFLOATFORMAT_R64G64B64_UINTFORMAT_R64G64B64_SINTFORMAT_R64G64B64_SFLOATFORMAT_R64G64B64A64_UINTFORMAT_R64G64B64A64_SINTFORMAT_R64G64B64A64_SFLOATFORMAT_B10G11R11_UFLOAT_PACK32FORMAT_E5B9G9R9_UFLOAT_PACK32FORMAT_D16_UNORMFORMAT_X8_D24_UNORM_PACK32FORMAT_D32_SFLOATFORMAT_S8_UINTFORMAT_D16_UNORM_S8_UINTFORMAT_D24_UNORM_S8_UINTFORMAT_D32_SFLOAT_S8_UINTFORMAT_BC1_RGB_UNORM_BLOCKFORMAT_BC1_RGB_SRGB_BLOCKFORMAT_BC1_RGBA_UNORM_BLOCKFORMAT_BC1_RGBA_SRGB_BLOCKFORMAT_BC2_UNORM_BLOCKFORMAT_BC2_SRGB_BLOCKFORMAT_BC3_UNORM_BLOCKFORMAT_BC3_SRGB_BLOCKFORMAT_BC4_UNORM_BLOCKFORMAT_BC4_SNORM_BLOCKFORMAT_BC5_UNORM_BLOCKFORMAT_BC5_SNORM_BLOCKFORMAT_BC6H_UFLOAT_BLOCKFORMAT_BC6H_SFLOAT_BLOCKFORMAT_BC7_UNORM_BLOCKFORMAT_BC7_SRGB_BLOCKFORMAT_ETC2_R8G8B8_UNORM_BLOCKFORMAT_ETC2_R8G8B8_SRGB_BLOCKFORMAT_ETC2_R8G8B8A1_UNORM_BLOCKFORMAT_ETC2_R8G8B8A1_SRGB_BLOCKFORMAT_ETC2_R8G8B8A8_UNORM_BLOCKFORMAT_ETC2_R8G8B8A8_SRGB_BLOCKFORMAT_EAC_R11_UNORM_BLOCKFORMAT_EAC_R11_SNORM_BLOCKFORMAT_EAC_R11G11_UNORM_BLOCKFORMAT_EAC_R11G11_SNORM_BLOCKFORMAT_ASTC_4x4_UNORM_BLOCKFORMAT_ASTC_4x4_SRGB_BLOCKFORMAT_ASTC_5x4_UNORM_BLOCKFORMAT_ASTC_5x4_SRGB_BLOCKFORMAT_ASTC_5x5_UNORM_BLOCKFORMAT_ASTC_5x5_SRGB_BLOCKFORMAT_ASTC_6x5_UNORM_BLOCKFORMAT_ASTC_6x5_SRGB_BLOCKFORMAT_ASTC_6x6_UNORM_BLOCKFORMAT_ASTC_6x6_SRGB_BLOCKFORMAT_ASTC_8x5_UNORM_BLOCKFORMAT_ASTC_8x5_SRGB_BLOCKFORMAT_ASTC_8x6_UNORM_BLOCKFORMAT_ASTC_8x6_SRGB_BLOCKFORMAT_ASTC_8x8_UNORM_BLOCKFORMAT_ASTC_8x8_SRGB_BLOCKFORMAT_ASTC_10x5_UNORM_BLOCKFORMAT_ASTC_10x5_SRGB_BLOCKFORMAT_ASTC_10x6_UNORM_BLOCKFORMAT_ASTC_10x6_SRGB_BLOCKFORMAT_ASTC_10x8_UNORM_BLOCKFORMAT_ASTC_10x8_SRGB_BLOCKFORMAT_ASTC_10x10_UNORM_BLOCKFORMAT_ASTC_10x10_SRGB_BLOCKFORMAT_ASTC_12x10_UNORM_BLOCKFORMAT_ASTC_12x10_SRGB_BLOCKFORMAT_ASTC_12x12_UNORM_BLOCKFORMAT_ASTC_12x12_SRGB_BLOCK"
	_Format_name_1 = "FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMGFORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMGFORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMGFORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMGFORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMGFORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMGFORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMGFORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG"
	_Format_name_2 = "FORMAT_ASTC_4x4_SFLOAT_BLOCKFORMAT_ASTC_5x4_SFLOAT_BLOCKFORMAT_ASTC_5x5_SFLOAT_BLOCKFORMAT_ASTC_6x5_SFLOAT_BLOCKFORMAT_ASTC_6x6_SFLOAT_BLOCKFORMAT_ASTC_8x5_SFLOAT_BLOCKFORMAT_ASTC_8x6_SFLOAT_BLOCKFORMAT_ASTC_8x8_SFLOAT_BLOCKFORMAT_ASTC_10x5_SFLOAT_BLOCKFORMAT_ASTC_10x6_SFLOAT_BLOCKFORMAT_ASTC_10x8_SFLOAT_BLOCKFORMAT_ASTC_10x10_SFLOAT_BLOCKFORMAT_ASTC_12x10_SFLOAT_BLOCKFORMAT_ASTC_12x12_SFLOAT_BLOCK"
	_Format_name_3 = "FORMAT_G8B8G8R8_422_UNORMFORMAT_B8G8R8G8_422_UNORMFORMAT_G8_B8_R8_3PLANE_420_UNORMFORMAT_G8_B8R8_2PLANE_420_UNORMFORMAT_G8_B8_R8_3PLANE_422_UNORMFORMAT_G8_B8R8_2PLANE_422_UNORMFORMAT_G8_B8_R8_3PLANE_444_UNORMFORMAT_R10X6_UNORM_PACK16FORMAT_R10X6G10X6_UNORM_2PACK16FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16FORMAT_R12X4_UNORM_PACK16FORMAT_R12X4G12X4_UNORM_2PACK16FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16FORMAT_G16B16G16R16_422_UNORMFORMAT_B16G16R16G16_422_UNORMFORMAT_G16_B16_R16_3PLANE_420_UNORMFORMAT_G16_B16R16_2PLANE_420_UNORMFORMAT_G16_B16_R16_3PLANE_422_UNORMFORMAT_G16_B16R16_2PLANE_422_UNORMFORMAT_G16_B16_R16_3PLANE_444_UNORM"
	_Format_name_4 = "FORMAT_G8_B8R8_2PLANE_444_UNORMFORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16FORMAT_G16_B16R16_2PLANE_444_UNORM"
	_Format_name_5 = "FORMAT_A4R4G4B4_UNORM_PACK16FORMAT_A4B4G4R4_UNORM_PACK16"
	_Format_name_6 = "FORMAT_R16G16_S10_5_NV"
	_Format_name_7 = "FORMAT_A1B5G5R5_UNORM_PACK16_KHRFORMAT_A8_UNORM_KHR"
)

var (
	_Format_index_0 = [...]uint16{0, 16, 39, 67, 95, 121, 147, 175, 203, 231, 246, 261, 278, 295, 309, 323, 337, 354, 371, 390, 409, 425, 441, 457, 476, 495, 516, 537, 555, 573, 591, 610, 629, 650, 671, 689, 707, 725, 746, 767, 790, 813, 833, 853, 873, 894, 915, 938, 961, 981, 1001, 1021, 1049, 1077, 1107, 1137, 1164, 1191, 1218, 1249, 1280, 1313, 1346, 1376, 1406, 1437, 1468, 1501, 1534, 1564, 1594, 1610, 1626, 1644, 1662, 1677, 1692, 1709, 1728, 1747, 1768, 1789, 1807, 1825, 1845, 1867, 1889, 1913, 1937, 1958, 1979, 2002, 2027, 2052, 2079, 2106, 2130, 2154, 2180, 2195, 2210, 2227, 2245, 2263, 2283, 2304, 2325, 2348, 2372, 2396, 2422, 2437, 2452, 2469, 2487, 2505, 2525, 2546, 2567, 2590, 2614, 2638, 2664, 2694, 2723, 2739, 2765, 2782, 2796, 2820, 2844, 2869, 2895, 2920, 2947, 2973, 2995, 3016, 3038, 3059, 3081, 3103, 3125, 3147, 3171, 3195, 3217, 3238, 3268, 3297, 3329, 3360, 3392, 3423, 3449, 3475, 3504, 3533, 3560, 3586, 3613, 3639, 3666, 3692, 3719, 3745, 3772, 3798, 3825, 3851, 3878, 3904, 3931, 3957, 3985, 4012, 4040, 4067, 4095, 4122, 4151, 4179, 4208, 4236, 4265, 4293}
	_Format_index_1 = [...]uint16{0, 34, 68, 102, 136, 169, 202, 235, 268}
	_Format_index_2 = [...]uint16{0, 28, 56, 84, 112, 140, 168, 196, 224, 253, 282, 311, 341, 371, 401}
	_Format_index_3 = [...]uint16{0, 25, 50, 82, 113, 145, 176, 208, 233, 264, 305, 350, 395, 444, 492, 541, 589, 638, 663, 694, 735, 780, 825, 874, 922, 971, 1019, 1068, 1097, 1126, 1161, 1195, 1230, 1264, 1299}
	_Format_index_4 = [...]uint8{0, 31, 79, 127, 161}
	_Format_index_5 = [...]uint8{0, 28, 56}
	_Format_index_7 = [...]uint8{0, 32, 51}
)

func (i Format) String() string {
	switch {
	case 0 <= i && i <= 184:
		return _Format_name_0[_Format_index_0[i]:_Format_index_0[i+1]]
	case 1000054000 <= i && i <= 1000054007:
		i -= 1000054000
		return _Format_name_1[_Format_index_1[i]:_Format_index_1[i+1]]
	case 1000066000 <= i && i <= 1000066013:
		i -= 1000066000
		return _Format_name_2[_Format_index_2[i]:_Format_index_2[i+1]]
	case 1000156000 <= i && i <= 1000156033:
		i -= 1000156000
		return _Format_name_3[_Format_index_3[i]:_Format_index_3[i+1]]
	case 1000330000 <= i && i <= 1000330003:
		i -= 1000330000
		return _Format_name_4[_Format_index_4[i]:_Format_index_4[i+1]]
	case 1000340000 <= i && i <= 1000340001:
		i -= 1000340000
		return _Format_name_5[_Format_index_5[i]:_Format_index_5[i+1]]
	case i == 1000464000:
		return _Format_name_6
	case 1000470000 <= i && i <= 1000470001:
		i -= 1000470000
		return _Format_name_7[_Format_index_7[i]:_Format_index_7[i+1]]
	default:
		return "Format(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_BIT-1]
	_ = x[FORMAT_FEATURE_STORAGE_IMAGE_BIT-2]
	_ = x[FORMAT_FEATURE_BLIT_SRC_BIT-1024]
	_ = x[FORMAT_FEATURE_BLIT_DST_BIT-2048]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT-4096]
	_ = x[FORMAT_FEATURE_TRANSFER_SRC_BIT-16384]
	_ = x[FORMAT_FEATURE_TRANSFER_DST_BIT-32768]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT-65536]
	_ = x[FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT-131072]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT-262144]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT-524288]
	_ = x[FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT-4]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT-1048576]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT-2097152]
	_ = x[FORMAT_FEATURE_DISJOINT_BIT-4194304]
	_ = x[FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT-8388608]
	_ = x[FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT-8]
	_ = x[FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT-16]
	_ = x[FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT-32]
	_ = x[FORMAT_FEATURE_VERTEX_BUFFER_BIT-64]
	_ = x[FORMAT_FEATURE_COLOR_ATTACHMENT_BIT-128]
	_ = x[FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT-256]
	_ = x[FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT-512]
	_ = x[FORMAT_FEATURE_VIDEO_DECODE_DPB_BIT_KHR-1000024000]
	_ = x[FORMAT_FEATURE_VIDEO_DECODE_OUTPUT_BIT_KHR-1000024000]
	_ = x[FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR-1000150000]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT-1000170000]
	_ = x[FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT-1000218000]
	_ = x[FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR-1000226000]
	_ = x[FORMAT_FEATURE_VIDEO_ENCODE_INPUT_BIT_KHR-1000299000]
	_ = x[FORMAT_FEATURE_VIDEO_ENCODE_DPB_BIT_KHR-1000299000]
	_ = x[FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR-8388608]
	_ = x[FORMAT_FEATURE_DISJOINT_BIT_KHR-4194304]
	_ = x[FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR-131072]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG-1000170000]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT-65536]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR-1048576]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR-2097152]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR-262144]
	_ = x[FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR-524288]
	_ = x[FORMAT_FEATURE_TRANSFER_DST_BIT_KHR-32768]
	_ = x[FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR-16384]
}

const _FormatFeatureFlagBits_name = "FORMAT_FEATURE_SAMPLED_IMAGE_BITFORMAT_FEATURE_STORAGE_IMAGE_BITFORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BITFORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BITFORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BITFORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BITFORMAT_FEATURE_VERTEX_BUFFER_BITFORMAT_FEATURE_COLOR_ATTACHMENT_BITFORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BITFORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BITFORMAT_FEATURE_BLIT_SRC_BITFORMAT_FEATURE_BLIT_DST_BITFORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BITFORMAT_FEATURE_TRANSFER_SRC_BITFORMAT_FEATURE_TRANSFER_DST_BITFORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BITFORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BITFORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BITFORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BITFORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BITFORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BITFORMAT_FEATURE_DISJOINT_BITFORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BITFORMAT_FEATURE_VIDEO_DECODE_DPB_BIT_KHRFORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHRFORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXTFORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXTFORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHRFORMAT_FEATURE_VIDEO_ENCODE_INPUT_BIT_KHR"

var _FormatFeatureFlagBits_map = map[FormatFeatureFlagBits]string{
	1:          _FormatFeatureFlagBits_name[0:32],
	2:          _FormatFeatureFlagBits_name[32:64],
	4:          _FormatFeatureFlagBits_name[64:103],
	8:          _FormatFeatureFlagBits_name[103:142],
	16:         _FormatFeatureFlagBits_name[142:181],
	32:         _FormatFeatureFlagBits_name[181:227],
	64:         _FormatFeatureFlagBits_name[227:259],
	128:        _FormatFeatureFlagBits_name[259:294],
	256:        _FormatFeatureFlagBits_name[294:335],
	512:        _FormatFeatureFlagBits_name[335:378],
	1024:       _FormatFeatureFlagBits_name[378:405],
	2048:       _FormatFeatureFlagBits_name[405:432],
	4096:       _FormatFeatureFlagBits_name[432:478],
	16384:      _FormatFeatureFlagBits_name[478:509],
	32768:      _FormatFeatureFlagBits_name[509:540],
	65536:      _FormatFeatureFlagBits_name[540:586],
	131072:     _FormatFeatureFlagBits_name[586:628],
	262144:     _FormatFeatureFlagBits_name[628:691],
	524288:     _FormatFeatureFlagBits_name[691:771],
	1048576:    _FormatFeatureFlagBits_name[771:851],
	2097152:    _FormatFeatureFlagBits_name[851:941],
	4194304:    _FormatFeatureFlagBits_name[941:968],
	8388608:    _FormatFeatureFlagBits_name[968:1009],
	1000024000: _FormatFeatureFlagBits_name[1009:1048],
	1000150000: _FormatFeatureFlagBits_name[1048:1107],
	1000170000: _FormatFeatureFlagBits_name[1107:1156],
	1000218000: _FormatFeatureFlagBits_name[1156:1199],
	1000226000: _FormatFeatureFlagBits_name[1199:1254],
	1000299000: _FormatFeatureFlagBits_name[1254:1295],
}

func (i FormatFeatureFlagBits) String() string {
	if str, ok := _FormatFeatureFlagBits_map[i]; ok {
		return str
	}
	return "FormatFeatureFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT-1]
	_ = x[FORMAT_FEATURE_2_STORAGE_IMAGE_BIT-2]
	_ = x[FORMAT_FEATURE_2_BLIT_SRC_BIT-1024]
	_ = x[FORMAT_FEATURE_2_BLIT_DST_BIT-2048]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT-4096]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT-8192]
	_ = x[FORMAT_FEATURE_2_TRANSFER_SRC_BIT-16384]
	_ = x[FORMAT_FEATURE_2_TRANSFER_DST_BIT-32768]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT-65536]
	_ = x[FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT-131072]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT-262144]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT-524288]
	_ = x[FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT-4]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT-1048576]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT-2097152]
	_ = x[FORMAT_FEATURE_2_DISJOINT_BIT-4194304]
	_ = x[FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT-8388608]
	_ = x[FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT-8]
	_ = x[FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT-2147483648]
	_ = x[FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT-4294967296]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT-8589934592]
	_ = x[FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT-16]
	_ = x[FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT-32]
	_ = x[FORMAT_FEATURE_2_VERTEX_BUFFER_BIT-64]
	_ = x[FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT-128]
	_ = x[FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT-256]
	_ = x[FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT-512]
	_ = x[FORMAT_FEATURE_2_VIDEO_DECODE_DPB_BIT_KHR-1000024000]
	_ = x[FORMAT_FEATURE_2_VIDEO_DECODE_OUTPUT_BIT_KHR-1000024000]
	_ = x[FORMAT_FEATURE_2_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR-1000150000]
	_ = x[FORMAT_FEATURE_2_FRAGMENT_DENSITY_MAP_BIT_EXT-1000218000]
	_ = x[FORMAT_FEATURE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR-1000226000]
	_ = x[FORMAT_FEATURE_2_HOST_IMAGE_TRANSFER_BIT_EXT-1000270000]
	_ = x[FORMAT_FEATURE_2_VIDEO_ENCODE_INPUT_BIT_KHR-1000299000]
	_ = x[FORMAT_FEATURE_2_VIDEO_ENCODE_DPB_BIT_KHR-1000299000]
	_ = x[FORMAT_FEATURE_2_LINEAR_COLOR_ATTACHMENT_BIT_NV-1000430000]
	_ = x[FORMAT_FEATURE_2_WEIGHT_IMAGE_BIT_QCOM-1000440000]
	_ = x[FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM-1000440000]
	_ = x[FORMAT_FEATURE_2_BLOCK_MATCHING_BIT_QCOM-1000440000]
	_ = x[FORMAT_FEATURE_2_WEIGHT_SAMPLED_IMAGE_BIT_QCOM-1000440000]
	_ = x[FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV-1000464000]
	_ = x[FORMAT_FEATURE_2_OPTICAL_FLOW_VECTOR_BIT_NV-1000464000]
	_ = x[FORMAT_FEATURE_2_OPTICAL_FLOW_IMAGE_BIT_NV-1000464000]
	_ = x[FORMAT_FEATURE_2_BLIT_DST_BIT_KHR-2048]
	_ = x[FORMAT_FEATURE_2_BLIT_SRC_BIT_KHR-1024]
	_ = x[FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT_KHR-128]
	_ = x[FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT_KHR-256]
	_ = x[FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT_KHR-8388608]
	_ = x[FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT_KHR-512]
	_ = x[FORMAT_FEATURE_2_DISJOINT_BIT_KHR-4194304]
	_ = x[FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT_KHR-131072]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT_KHR-1]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR-8589934592]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT-8192]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHR-4096]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR-65536]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR-1048576]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR-2097152]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR-262144]
	_ = x[FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR-524288]
	_ = x[FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT_KHR-4]
	_ = x[FORMAT_FEATURE_2_STORAGE_IMAGE_BIT_KHR-2]
	_ = x[FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT_KHR-2147483648]
	_ = x[FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHR-32]
	_ = x[FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT_KHR-16]
	_ = x[FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR-4294967296]
	_ = x[FORMAT_FEATURE_2_TRANSFER_DST_BIT_KHR-32768]
	_ = x[FORMAT_FEATURE_2_TRANSFER_SRC_BIT_KHR-16384]
	_ = x[FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR-8]
	_ = x[FORMAT_FEATURE_2_VERTEX_BUFFER_BIT_KHR-64]
}

const _FormatFeatureFlagBits2_name = "FORMAT_FEATURE_2_SAMPLED_IMAGE_BITFORMAT_FEATURE_2_STORAGE_IMAGE_BITFORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BITFORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BITFORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BITFORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BITFORMAT_FEATURE_2_VERTEX_BUFFER_BITFORMAT_FEATURE_2_COLOR_ATTACHMENT_BITFORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BITFORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BITFORMAT_FEATURE_2_BLIT_SRC_BITFORMAT_FEATURE_2_BLIT_DST_BITFORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BITFORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BITFORMAT_FEATURE_2_TRANSFER_SRC_BITFORMAT_FEATURE_2_TRANSFER_DST_BITFORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BITFORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BITFORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BITFORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BITFORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BITFORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BITFORMAT_FEATURE_2_DISJOINT_BITFORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BITFORMAT_FEATURE_2_VIDEO_DECODE_DPB_BIT_KHRFORMAT_FEATURE_2_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHRFORMAT_FEATURE_2_FRAGMENT_DENSITY_MAP_BIT_EXTFORMAT_FEATURE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHRFORMAT_FEATURE_2_HOST_IMAGE_TRANSFER_BIT_EXTFORMAT_FEATURE_2_VIDEO_ENCODE_INPUT_BIT_KHRFORMAT_FEATURE_2_LINEAR_COLOR_ATTACHMENT_BIT_NVFORMAT_FEATURE_2_WEIGHT_IMAGE_BIT_QCOMFORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NVFORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BITFORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BITFORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT"

var _FormatFeatureFlagBits2_map = map[FormatFeatureFlagBits2]string{
	1:          _FormatFeatureFlagBits2_name[0:34],
	2:          _FormatFeatureFlagBits2_name[34:68],
	4:          _FormatFeatureFlagBits2_name[68:109],
	8:          _FormatFeatureFlagBits2_name[109:150],
	16:         _FormatFeatureFlagBits2_name[150:191],
	32:         _FormatFeatureFlagBits2_name[191:239],
	64:         _FormatFeatureFlagBits2_name[239:273],
	128:        _FormatFeatureFlagBits2_name[273:310],
	256:        _FormatFeatureFlagBits2_name[310:353],
	512:        _FormatFeatureFlagBits2_name[353:398],
	1024:       _FormatFeatureFlagBits2_name[398:427],
	2048:       _FormatFeatureFlagBits2_name[427:456],
	4096:       _FormatFeatureFlagBits2_name[456:504],
	8192:       _FormatFeatureFlagBits2_name[504:551],
	16384:      _FormatFeatureFlagBits2_name[551:584],
	32768:      _FormatFeatureFlagBits2_name[584:617],
	65536:      _FormatFeatureFlagBits2_name[617:665],
	131072:     _FormatFeatureFlagBits2_name[665:709],
	262144:     _FormatFeatureFlagBits2_name[709:774],
	524288:     _FormatFeatureFlagBits2_name[774:856],
	1048576:    _FormatFeatureFlagBits2_name[856:938],
	2097152:    _FormatFeatureFlagBits2_name[938:1030],
	4194304:    _FormatFeatureFlagBits2_name[1030:1059],
	8388608:    _FormatFeatureFlagBits2_name[1059:1102],
	1000024000: _FormatFeatureFlagBits2_name[1102:1143],
	1000150000: _FormatFeatureFlagBits2_name[1143:1204],
	1000218000: _FormatFeatureFlagBits2_name[1204:1249],
	1000226000: _FormatFeatureFlagBits2_name[1249:1306],
	1000270000: _FormatFeatureFlagBits2_name[1306:1350],
	1000299000: _FormatFeatureFlagBits2_name[1350:1393],
	1000430000: _FormatFeatureFlagBits2_name[1393:1440],
	1000440000: _FormatFeatureFlagBits2_name[1440:1478],
	1000464000: _FormatFeatureFlagBits2_name[1478:1519],
	2147483648: _FormatFeatureFlagBits2_name[1519:1567],
	4294967296: _FormatFeatureFlagBits2_name[1567:1616],
	8589934592: _FormatFeatureFlagBits2_name[1616:1667],
}

func (i FormatFeatureFlagBits2) String() string {
	if str, ok := _FormatFeatureFlagBits2_map[i]; ok {
		return str
	}
	return "FormatFeatureFlagBits2(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR-0]
	_ = x[FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR-1]
	_ = x[FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHR-2]
	_ = x[FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHR-3]
	_ = x[FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR-4]
}

const _FragmentShadingRateCombinerOpKHR_name = "FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHRFRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHRFRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHRFRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHRFRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR"

var _FragmentShadingRateCombinerOpKHR_index = [...]uint8{0, 42, 87, 128, 169, 210}

func (i FragmentShadingRateCombinerOpKHR) String() string {
	if i < 0 || i >= FragmentShadingRateCombinerOpKHR(len(_FragmentShadingRateCombinerOpKHR_index)-1) {
		return "FragmentShadingRateCombinerOpKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FragmentShadingRateCombinerOpKHR_name[_FragmentShadingRateCombinerOpKHR_index[i]:_FragmentShadingRateCombinerOpKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FRAGMENT_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV-0]
	_ = x[FRAGMENT_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV-1]
	_ = x[FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV-4]
	_ = x[FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV-5]
	_ = x[FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV-6]
	_ = x[FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV-9]
	_ = x[FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV-10]
	_ = x[FRAGMENT_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV-11]
	_ = x[FRAGMENT_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV-12]
	_ = x[FRAGMENT_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV-13]
	_ = x[FRAGMENT_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV-14]
	_ = x[FRAGMENT_SHADING_RATE_NO_INVOCATIONS_NV-15]
}

const (
	_FragmentShadingRateNV_name_0 = "FRAGMENT_SHADING_RATE_1_INVOCATION_PER_PIXEL_NVFRAGMENT_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV"
	_FragmentShadingRateNV_name_1 = "FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NVFRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NVFRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV"
	_FragmentShadingRateNV_name_2 = "FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NVFRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NVFRAGMENT_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NVFRAGMENT_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NVFRAGMENT_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NVFRAGMENT_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NVFRAGMENT_SHADING_RATE_NO_INVOCATIONS_NV"
)

var (
	_FragmentShadingRateNV_index_0 = [...]uint8{0, 47, 99}
	_FragmentShadingRateNV_index_1 = [...]uint8{0, 52, 104, 156}
	_FragmentShadingRateNV_index_2 = [...]uint16{0, 52, 104, 152, 200, 248, 297, 336}
)

func (i FragmentShadingRateNV) String() string {
	switch {
	case 0 <= i && i <= 1:
		return _FragmentShadingRateNV_name_0[_FragmentShadingRateNV_index_0[i]:_FragmentShadingRateNV_index_0[i+1]]
	case 4 <= i && i <= 6:
		i -= 4
		return _FragmentShadingRateNV_name_1[_FragmentShadingRateNV_index_1[i]:_FragmentShadingRateNV_index_1[i+1]]
	case 9 <= i && i <= 15:
		i -= 9
		return _FragmentShadingRateNV_name_2[_FragmentShadingRateNV_index_2[i]:_FragmentShadingRateNV_index_2[i+1]]
	default:
		return "FragmentShadingRateNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FRAGMENT_SHADING_RATE_TYPE_FRAGMENT_SIZE_NV-0]
	_ = x[FRAGMENT_SHADING_RATE_TYPE_ENUMS_NV-1]
}

const _FragmentShadingRateTypeNV_name = "FRAGMENT_SHADING_RATE_TYPE_FRAGMENT_SIZE_NVFRAGMENT_SHADING_RATE_TYPE_ENUMS_NV"

var _FragmentShadingRateTypeNV_index = [...]uint8{0, 43, 78}

func (i FragmentShadingRateTypeNV) String() string {
	if i < 0 || i >= FragmentShadingRateTypeNV(len(_FragmentShadingRateTypeNV_index)-1) {
		return "FragmentShadingRateTypeNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FragmentShadingRateTypeNV_name[_FragmentShadingRateTypeNV_index[i]:_FragmentShadingRateTypeNV_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FRAME_BOUNDARY_FRAME_END_BIT_EXT-1]
}

const _FrameBoundaryFlagBitsEXT_name = "FRAME_BOUNDARY_FRAME_END_BIT_EXT"

var _FrameBoundaryFlagBitsEXT_index = [...]uint8{0, 32}

func (i FrameBoundaryFlagBitsEXT) String() string {
	i -= 1
	if i >= FrameBoundaryFlagBitsEXT(len(_FrameBoundaryFlagBitsEXT_index)-1) {
		return "FrameBoundaryFlagBitsEXT(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _FrameBoundaryFlagBitsEXT_name[_FrameBoundaryFlagBitsEXT_index[i]:_FrameBoundaryFlagBitsEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FRAMEBUFFER_CREATE_IMAGELESS_BIT-1]
	_ = x[FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR-1]
}

const _FramebufferCreateFlagBits_name = "FRAMEBUFFER_CREATE_IMAGELESS_BIT"

var _FramebufferCreateFlagBits_index = [...]uint8{0, 32}

func (i FramebufferCreateFlagBits) String() string {
	i -= 1
	if i >= FramebufferCreateFlagBits(len(_FramebufferCreateFlagBits_index)-1) {
		return "FramebufferCreateFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _FramebufferCreateFlagBits_name[_FramebufferCreateFlagBits_index[i]:_FramebufferCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FRONT_FACE_COUNTER_CLOCKWISE-0]
	_ = x[FRONT_FACE_CLOCKWISE-1]
}

const _FrontFace_name = "FRONT_FACE_COUNTER_CLOCKWISEFRONT_FACE_CLOCKWISE"

var _FrontFace_index = [...]uint8{0, 28, 48}

func (i FrontFace) String() string {
	if i < 0 || i >= FrontFace(len(_FrontFace_index)-1) {
		return "FrontFace(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _FrontFace_name[_FrontFace_index[i]:_FrontFace_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[GEOMETRY_OPAQUE_BIT_KHR-1]
	_ = x[GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR-2]
	_ = x[GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV-2]
	_ = x[GEOMETRY_OPAQUE_BIT_NV-1]
}

const _GeometryFlagBitsKHR_name = "GEOMETRY_OPAQUE_BIT_KHRGEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR"

var _GeometryFlagBitsKHR_index = [...]uint8{0, 23, 71}

func (i GeometryFlagBitsKHR) String() string {
	i -= 1
	if i >= GeometryFlagBitsKHR(len(_GeometryFlagBitsKHR_index)-1) {
		return "GeometryFlagBitsKHR(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _GeometryFlagBitsKHR_name[_GeometryFlagBitsKHR_index[i]:_GeometryFlagBitsKHR_index[i+1]]
}
