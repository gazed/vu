// Code generated by "stringer -output=enum_string_3.go -type=GeometryInstanceFlagBitsKHR,GeometryTypeKHR,GraphicsPipelineLibraryFlagBitsEXT,HostImageCopyFlagBitsEXT,ImageAspectFlagBits,ImageCompressionFixedRateFlagBitsEXT,ImageCompressionFlagBitsEXT,ImageCreateFlagBits,ImageLayout,ImageTiling,ImageType,ImageUsageFlagBits,ImageViewCreateFlagBits,ImageViewType,IndexType,IndirectCommandsLayoutUsageFlagBitsNV,IndirectCommandsTokenTypeNV,IndirectStateFlagBitsNV,InstanceCreateFlagBits,InternalAllocationType,LatencyMarkerNV,LayerSettingTypeEXT,LayeredDriverUnderlyingApiMSFT,LineRasterizationModeEXT,LogicOp,MemoryAllocateFlagBits,MemoryDecompressionMethodFlagBitsNV,MemoryHeapFlagBits,MemoryOverallocationBehaviorAMD,MemoryPropertyFlagBits,MicromapCreateFlagBitsEXT"; DO NOT EDIT.

package vk

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR-1]
	_ = x[GEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR-2]
	_ = x[GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR-4]
	_ = x[GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR-8]
	_ = x[GEOMETRY_INSTANCE_FORCE_OPACITY_MICROMAP_2_STATE_EXT-1000396000]
	_ = x[GEOMETRY_INSTANCE_DISABLE_OPACITY_MICROMAPS_EXT-1000396000]
	_ = x[GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV-8]
	_ = x[GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV-4]
	_ = x[GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV-1]
	_ = x[GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR-2]
	_ = x[GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV-2]
}

const (
	_GeometryInstanceFlagBitsKHR_name_0 = "GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHRGEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR"
	_GeometryInstanceFlagBitsKHR_name_1 = "GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR"
	_GeometryInstanceFlagBitsKHR_name_2 = "GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR"
	_GeometryInstanceFlagBitsKHR_name_3 = "GEOMETRY_INSTANCE_FORCE_OPACITY_MICROMAP_2_STATE_EXT"
)

var (
	_GeometryInstanceFlagBitsKHR_index_0 = [...]uint8{0, 54, 100}
)

func (i GeometryInstanceFlagBitsKHR) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _GeometryInstanceFlagBitsKHR_name_0[_GeometryInstanceFlagBitsKHR_index_0[i]:_GeometryInstanceFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _GeometryInstanceFlagBitsKHR_name_1
	case i == 8:
		return _GeometryInstanceFlagBitsKHR_name_2
	case i == 1000396000:
		return _GeometryInstanceFlagBitsKHR_name_3
	default:
		return "GeometryInstanceFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[GEOMETRY_TYPE_TRIANGLES_KHR-0]
	_ = x[GEOMETRY_TYPE_AABBS_KHR-1]
	_ = x[GEOMETRY_TYPE_INSTANCES_KHR-2]
	_ = x[GEOMETRY_TYPE_AABBS_NV-1]
	_ = x[GEOMETRY_TYPE_TRIANGLES_NV-0]
}

const _GeometryTypeKHR_name = "GEOMETRY_TYPE_TRIANGLES_KHRGEOMETRY_TYPE_AABBS_KHRGEOMETRY_TYPE_INSTANCES_KHR"

var _GeometryTypeKHR_index = [...]uint8{0, 27, 50, 77}

func (i GeometryTypeKHR) String() string {
	if i < 0 || i >= GeometryTypeKHR(len(_GeometryTypeKHR_index)-1) {
		return "GeometryTypeKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _GeometryTypeKHR_name[_GeometryTypeKHR_index[i]:_GeometryTypeKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[GRAPHICS_PIPELINE_LIBRARY_VERTEX_INPUT_INTERFACE_BIT_EXT-1]
	_ = x[GRAPHICS_PIPELINE_LIBRARY_PRE_RASTERIZATION_SHADERS_BIT_EXT-2]
	_ = x[GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_SHADER_BIT_EXT-4]
	_ = x[GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_OUTPUT_INTERFACE_BIT_EXT-8]
}

const (
	_GraphicsPipelineLibraryFlagBitsEXT_name_0 = "GRAPHICS_PIPELINE_LIBRARY_VERTEX_INPUT_INTERFACE_BIT_EXTGRAPHICS_PIPELINE_LIBRARY_PRE_RASTERIZATION_SHADERS_BIT_EXT"
	_GraphicsPipelineLibraryFlagBitsEXT_name_1 = "GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_SHADER_BIT_EXT"
	_GraphicsPipelineLibraryFlagBitsEXT_name_2 = "GRAPHICS_PIPELINE_LIBRARY_FRAGMENT_OUTPUT_INTERFACE_BIT_EXT"
)

var (
	_GraphicsPipelineLibraryFlagBitsEXT_index_0 = [...]uint8{0, 56, 115}
)

func (i GraphicsPipelineLibraryFlagBitsEXT) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _GraphicsPipelineLibraryFlagBitsEXT_name_0[_GraphicsPipelineLibraryFlagBitsEXT_index_0[i]:_GraphicsPipelineLibraryFlagBitsEXT_index_0[i+1]]
	case i == 4:
		return _GraphicsPipelineLibraryFlagBitsEXT_name_1
	case i == 8:
		return _GraphicsPipelineLibraryFlagBitsEXT_name_2
	default:
		return "GraphicsPipelineLibraryFlagBitsEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[HOST_IMAGE_COPY_MEMCPY_EXT-1]
}

const _HostImageCopyFlagBitsEXT_name = "HOST_IMAGE_COPY_MEMCPY_EXT"

var _HostImageCopyFlagBitsEXT_index = [...]uint8{0, 26}

func (i HostImageCopyFlagBitsEXT) String() string {
	i -= 1
	if i >= HostImageCopyFlagBitsEXT(len(_HostImageCopyFlagBitsEXT_index)-1) {
		return "HostImageCopyFlagBitsEXT(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _HostImageCopyFlagBitsEXT_name[_HostImageCopyFlagBitsEXT_index[i]:_HostImageCopyFlagBitsEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_ASPECT_NONE-0]
	_ = x[IMAGE_ASPECT_COLOR_BIT-1]
	_ = x[IMAGE_ASPECT_DEPTH_BIT-2]
	_ = x[IMAGE_ASPECT_STENCIL_BIT-4]
	_ = x[IMAGE_ASPECT_METADATA_BIT-8]
	_ = x[IMAGE_ASPECT_PLANE_0_BIT-16]
	_ = x[IMAGE_ASPECT_PLANE_1_BIT-32]
	_ = x[IMAGE_ASPECT_PLANE_2_BIT-64]
	_ = x[IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT-1000158000]
	_ = x[IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT-1000158000]
	_ = x[IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT-1000158000]
	_ = x[IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT-1000158000]
	_ = x[IMAGE_ASPECT_NONE_KHR-0]
	_ = x[IMAGE_ASPECT_PLANE_0_BIT_KHR-16]
	_ = x[IMAGE_ASPECT_PLANE_1_BIT_KHR-32]
	_ = x[IMAGE_ASPECT_PLANE_2_BIT_KHR-64]
}

const (
	_ImageAspectFlagBits_name_0 = "IMAGE_ASPECT_NONEIMAGE_ASPECT_COLOR_BITIMAGE_ASPECT_DEPTH_BIT"
	_ImageAspectFlagBits_name_1 = "IMAGE_ASPECT_STENCIL_BIT"
	_ImageAspectFlagBits_name_2 = "IMAGE_ASPECT_METADATA_BIT"
	_ImageAspectFlagBits_name_3 = "IMAGE_ASPECT_PLANE_0_BIT"
	_ImageAspectFlagBits_name_4 = "IMAGE_ASPECT_PLANE_1_BIT"
	_ImageAspectFlagBits_name_5 = "IMAGE_ASPECT_PLANE_2_BIT"
	_ImageAspectFlagBits_name_6 = "IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT"
)

var (
	_ImageAspectFlagBits_index_0 = [...]uint8{0, 17, 39, 61}
)

func (i ImageAspectFlagBits) String() string {
	switch {
	case i <= 2:
		return _ImageAspectFlagBits_name_0[_ImageAspectFlagBits_index_0[i]:_ImageAspectFlagBits_index_0[i+1]]
	case i == 4:
		return _ImageAspectFlagBits_name_1
	case i == 8:
		return _ImageAspectFlagBits_name_2
	case i == 16:
		return _ImageAspectFlagBits_name_3
	case i == 32:
		return _ImageAspectFlagBits_name_4
	case i == 64:
		return _ImageAspectFlagBits_name_5
	case i == 1000158000:
		return _ImageAspectFlagBits_name_6
	default:
		return "ImageAspectFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_NONE_EXT-0]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_1BPC_BIT_EXT-1]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_2BPC_BIT_EXT-2]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_11BPC_BIT_EXT-1024]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_12BPC_BIT_EXT-2048]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_13BPC_BIT_EXT-4096]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_14BPC_BIT_EXT-8192]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_15BPC_BIT_EXT-16384]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_16BPC_BIT_EXT-32768]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_17BPC_BIT_EXT-65536]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_18BPC_BIT_EXT-131072]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_19BPC_BIT_EXT-262144]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_20BPC_BIT_EXT-524288]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_3BPC_BIT_EXT-4]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_21BPC_BIT_EXT-1048576]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_22BPC_BIT_EXT-2097152]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_23BPC_BIT_EXT-4194304]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_24BPC_BIT_EXT-8388608]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_4BPC_BIT_EXT-8]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_5BPC_BIT_EXT-16]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_6BPC_BIT_EXT-32]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_7BPC_BIT_EXT-64]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_8BPC_BIT_EXT-128]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_9BPC_BIT_EXT-256]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_10BPC_BIT_EXT-512]
}

const _ImageCompressionFixedRateFlagBitsEXT_name = "IMAGE_COMPRESSION_FIXED_RATE_NONE_EXTIMAGE_COMPRESSION_FIXED_RATE_1BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_2BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_3BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_4BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_5BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_6BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_7BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_8BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_9BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_10BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_11BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_12BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_13BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_14BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_15BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_16BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_17BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_18BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_19BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_20BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_21BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_22BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_23BPC_BIT_EXTIMAGE_COMPRESSION_FIXED_RATE_24BPC_BIT_EXT"

var _ImageCompressionFixedRateFlagBitsEXT_map = map[ImageCompressionFixedRateFlagBitsEXT]string{
	0:       _ImageCompressionFixedRateFlagBitsEXT_name[0:37],
	1:       _ImageCompressionFixedRateFlagBitsEXT_name[37:78],
	2:       _ImageCompressionFixedRateFlagBitsEXT_name[78:119],
	4:       _ImageCompressionFixedRateFlagBitsEXT_name[119:160],
	8:       _ImageCompressionFixedRateFlagBitsEXT_name[160:201],
	16:      _ImageCompressionFixedRateFlagBitsEXT_name[201:242],
	32:      _ImageCompressionFixedRateFlagBitsEXT_name[242:283],
	64:      _ImageCompressionFixedRateFlagBitsEXT_name[283:324],
	128:     _ImageCompressionFixedRateFlagBitsEXT_name[324:365],
	256:     _ImageCompressionFixedRateFlagBitsEXT_name[365:406],
	512:     _ImageCompressionFixedRateFlagBitsEXT_name[406:448],
	1024:    _ImageCompressionFixedRateFlagBitsEXT_name[448:490],
	2048:    _ImageCompressionFixedRateFlagBitsEXT_name[490:532],
	4096:    _ImageCompressionFixedRateFlagBitsEXT_name[532:574],
	8192:    _ImageCompressionFixedRateFlagBitsEXT_name[574:616],
	16384:   _ImageCompressionFixedRateFlagBitsEXT_name[616:658],
	32768:   _ImageCompressionFixedRateFlagBitsEXT_name[658:700],
	65536:   _ImageCompressionFixedRateFlagBitsEXT_name[700:742],
	131072:  _ImageCompressionFixedRateFlagBitsEXT_name[742:784],
	262144:  _ImageCompressionFixedRateFlagBitsEXT_name[784:826],
	524288:  _ImageCompressionFixedRateFlagBitsEXT_name[826:868],
	1048576: _ImageCompressionFixedRateFlagBitsEXT_name[868:910],
	2097152: _ImageCompressionFixedRateFlagBitsEXT_name[910:952],
	4194304: _ImageCompressionFixedRateFlagBitsEXT_name[952:994],
	8388608: _ImageCompressionFixedRateFlagBitsEXT_name[994:1036],
}

func (i ImageCompressionFixedRateFlagBitsEXT) String() string {
	if str, ok := _ImageCompressionFixedRateFlagBitsEXT_map[i]; ok {
		return str
	}
	return "ImageCompressionFixedRateFlagBitsEXT(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_COMPRESSION_DEFAULT_EXT-0]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_DEFAULT_EXT-1]
	_ = x[IMAGE_COMPRESSION_FIXED_RATE_EXPLICIT_EXT-2]
	_ = x[IMAGE_COMPRESSION_DISABLED_EXT-4]
}

const (
	_ImageCompressionFlagBitsEXT_name_0 = "IMAGE_COMPRESSION_DEFAULT_EXTIMAGE_COMPRESSION_FIXED_RATE_DEFAULT_EXTIMAGE_COMPRESSION_FIXED_RATE_EXPLICIT_EXT"
	_ImageCompressionFlagBitsEXT_name_1 = "IMAGE_COMPRESSION_DISABLED_EXT"
)

var (
	_ImageCompressionFlagBitsEXT_index_0 = [...]uint8{0, 29, 69, 110}
)

func (i ImageCompressionFlagBitsEXT) String() string {
	switch {
	case i <= 2:
		return _ImageCompressionFlagBitsEXT_name_0[_ImageCompressionFlagBitsEXT_index_0[i]:_ImageCompressionFlagBitsEXT_index_0[i+1]]
	case i == 4:
		return _ImageCompressionFlagBitsEXT_name_1
	default:
		return "ImageCompressionFlagBitsEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_CREATE_SPARSE_BINDING_BIT-1]
	_ = x[IMAGE_CREATE_SPARSE_RESIDENCY_BIT-2]
	_ = x[IMAGE_CREATE_ALIAS_BIT-1024]
	_ = x[IMAGE_CREATE_PROTECTED_BIT-2048]
	_ = x[IMAGE_CREATE_SPARSE_ALIASED_BIT-4]
	_ = x[IMAGE_CREATE_MUTABLE_FORMAT_BIT-8]
	_ = x[IMAGE_CREATE_CUBE_COMPATIBLE_BIT-16]
	_ = x[IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT-32]
	_ = x[IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT-64]
	_ = x[IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT-128]
	_ = x[IMAGE_CREATE_EXTENDED_USAGE_BIT-256]
	_ = x[IMAGE_CREATE_DISJOINT_BIT-512]
	_ = x[IMAGE_CREATE_CORNER_SAMPLED_BIT_NV-1000050000]
	_ = x[IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT-1000143000]
	_ = x[IMAGE_CREATE_SUBSAMPLED_BIT_EXT-1000218000]
	_ = x[IMAGE_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT-1000316000]
	_ = x[IMAGE_CREATE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_BIT_EXT-1000376000]
	_ = x[IMAGE_CREATE_2D_VIEW_COMPATIBLE_BIT_EXT-1000393000]
	_ = x[IMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM-1000425000]
	_ = x[IMAGE_CREATE_VIDEO_PROFILE_INDEPENDENT_BIT_KHR-1000515000]
	_ = x[IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR-32]
	_ = x[IMAGE_CREATE_ALIAS_BIT_KHR-1024]
	_ = x[IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR-128]
	_ = x[IMAGE_CREATE_DISJOINT_BIT_KHR-512]
	_ = x[IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR-256]
	_ = x[IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR-64]
}

const _ImageCreateFlagBits_name = "IMAGE_CREATE_SPARSE_BINDING_BITIMAGE_CREATE_SPARSE_RESIDENCY_BITIMAGE_CREATE_SPARSE_ALIASED_BITIMAGE_CREATE_MUTABLE_FORMAT_BITIMAGE_CREATE_CUBE_COMPATIBLE_BITIMAGE_CREATE_2D_ARRAY_COMPATIBLE_BITIMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BITIMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BITIMAGE_CREATE_EXTENDED_USAGE_BITIMAGE_CREATE_DISJOINT_BITIMAGE_CREATE_ALIAS_BITIMAGE_CREATE_PROTECTED_BITIMAGE_CREATE_CORNER_SAMPLED_BIT_NVIMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXTIMAGE_CREATE_SUBSAMPLED_BIT_EXTIMAGE_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXTIMAGE_CREATE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_BIT_EXTIMAGE_CREATE_2D_VIEW_COMPATIBLE_BIT_EXTIMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOMIMAGE_CREATE_VIDEO_PROFILE_INDEPENDENT_BIT_KHR"

var _ImageCreateFlagBits_map = map[ImageCreateFlagBits]string{
	1:          _ImageCreateFlagBits_name[0:31],
	2:          _ImageCreateFlagBits_name[31:64],
	4:          _ImageCreateFlagBits_name[64:95],
	8:          _ImageCreateFlagBits_name[95:126],
	16:         _ImageCreateFlagBits_name[126:158],
	32:         _ImageCreateFlagBits_name[158:194],
	64:         _ImageCreateFlagBits_name[194:238],
	128:        _ImageCreateFlagBits_name[238:282],
	256:        _ImageCreateFlagBits_name[282:313],
	512:        _ImageCreateFlagBits_name[313:338],
	1024:       _ImageCreateFlagBits_name[338:360],
	2048:       _ImageCreateFlagBits_name[360:386],
	1000050000: _ImageCreateFlagBits_name[386:420],
	1000143000: _ImageCreateFlagBits_name[420:474],
	1000218000: _ImageCreateFlagBits_name[474:505],
	1000316000: _ImageCreateFlagBits_name[505:558],
	1000376000: _ImageCreateFlagBits_name[558:616],
	1000393000: _ImageCreateFlagBits_name[616:655],
	1000425000: _ImageCreateFlagBits_name[655:704],
	1000515000: _ImageCreateFlagBits_name[704:750],
}

func (i ImageCreateFlagBits) String() string {
	if str, ok := _ImageCreateFlagBits_map[i]; ok {
		return str
	}
	return "ImageCreateFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_LAYOUT_UNDEFINED-0]
	_ = x[IMAGE_LAYOUT_GENERAL-1]
	_ = x[IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL-2]
	_ = x[IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL-3]
	_ = x[IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL-4]
	_ = x[IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL-5]
	_ = x[IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL-6]
	_ = x[IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL-7]
	_ = x[IMAGE_LAYOUT_PREINITIALIZED-8]
	_ = x[IMAGE_LAYOUT_PRESENT_SRC_KHR-1000001002]
	_ = x[IMAGE_LAYOUT_VIDEO_DECODE_DST_KHR-1000024000]
	_ = x[IMAGE_LAYOUT_VIDEO_DECODE_SRC_KHR-1000024001]
	_ = x[IMAGE_LAYOUT_VIDEO_DECODE_DPB_KHR-1000024002]
	_ = x[IMAGE_LAYOUT_SHARED_PRESENT_KHR-1000111000]
	_ = x[IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL-1000117000]
	_ = x[IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL-1000117001]
	_ = x[IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT-1000218000]
	_ = x[IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR-1000226003]
	_ = x[IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL-1000241000]
	_ = x[IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL-1000241001]
	_ = x[IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL-1000241002]
	_ = x[IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL-1000241003]
	_ = x[IMAGE_LAYOUT_VIDEO_ENCODE_DST_KHR-1000299000]
	_ = x[IMAGE_LAYOUT_VIDEO_ENCODE_SRC_KHR-1000299001]
	_ = x[IMAGE_LAYOUT_VIDEO_ENCODE_DPB_KHR-1000299002]
	_ = x[IMAGE_LAYOUT_READ_ONLY_OPTIMAL-1000314000]
	_ = x[IMAGE_LAYOUT_ATTACHMENT_OPTIMAL-1000314001]
	_ = x[IMAGE_LAYOUT_ATTACHMENT_FEEDBACK_LOOP_OPTIMAL_EXT-1000339000]
	_ = x[IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR-1000314001]
	_ = x[IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL_KHR-1000241000]
	_ = x[IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR-1000117001]
	_ = x[IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL_KHR-1000241001]
	_ = x[IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR-1000117000]
	_ = x[IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV-1000226003]
	_ = x[IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR-1000314000]
	_ = x[IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL_KHR-1000241002]
	_ = x[IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL_KHR-1000241003]
}

const _ImageLayout_name = "IMAGE_LAYOUT_UNDEFINEDIMAGE_LAYOUT_GENERALIMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMALIMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMALIMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMALIMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMALIMAGE_LAYOUT_TRANSFER_SRC_OPTIMALIMAGE_LAYOUT_TRANSFER_DST_OPTIMALIMAGE_LAYOUT_PREINITIALIZEDIMAGE_LAYOUT_PRESENT_SRC_KHRIMAGE_LAYOUT_VIDEO_DECODE_DST_KHRIMAGE_LAYOUT_VIDEO_DECODE_SRC_KHRIMAGE_LAYOUT_VIDEO_DECODE_DPB_KHRIMAGE_LAYOUT_SHARED_PRESENT_KHRIMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMALIMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMALIMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXTIMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHRIMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMALIMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMALIMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMALIMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMALIMAGE_LAYOUT_VIDEO_ENCODE_DST_KHRIMAGE_LAYOUT_VIDEO_ENCODE_SRC_KHRIMAGE_LAYOUT_VIDEO_ENCODE_DPB_KHRIMAGE_LAYOUT_READ_ONLY_OPTIMALIMAGE_LAYOUT_ATTACHMENT_OPTIMALIMAGE_LAYOUT_ATTACHMENT_FEEDBACK_LOOP_OPTIMAL_EXT"

var _ImageLayout_map = map[ImageLayout]string{
	0:          _ImageLayout_name[0:22],
	1:          _ImageLayout_name[22:42],
	2:          _ImageLayout_name[42:79],
	3:          _ImageLayout_name[79:124],
	4:          _ImageLayout_name[124:168],
	5:          _ImageLayout_name[168:205],
	6:          _ImageLayout_name[205:238],
	7:          _ImageLayout_name[238:271],
	8:          _ImageLayout_name[271:298],
	1000001002: _ImageLayout_name[298:326],
	1000024000: _ImageLayout_name[326:359],
	1000024001: _ImageLayout_name[359:392],
	1000024002: _ImageLayout_name[392:425],
	1000111000: _ImageLayout_name[425:456],
	1000117000: _ImageLayout_name[456:511],
	1000117001: _ImageLayout_name[511:566],
	1000218000: _ImageLayout_name[566:611],
	1000226003: _ImageLayout_name[611:668],
	1000241000: _ImageLayout_name[668:705],
	1000241001: _ImageLayout_name[705:741],
	1000241002: _ImageLayout_name[741:780],
	1000241003: _ImageLayout_name[780:818],
	1000299000: _ImageLayout_name[818:851],
	1000299001: _ImageLayout_name[851:884],
	1000299002: _ImageLayout_name[884:917],
	1000314000: _ImageLayout_name[917:947],
	1000314001: _ImageLayout_name[947:978],
	1000339000: _ImageLayout_name[978:1027],
}

func (i ImageLayout) String() string {
	if str, ok := _ImageLayout_map[i]; ok {
		return str
	}
	return "ImageLayout(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_TILING_OPTIMAL-0]
	_ = x[IMAGE_TILING_LINEAR-1]
	_ = x[IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT-1000158000]
}

const (
	_ImageTiling_name_0 = "IMAGE_TILING_OPTIMALIMAGE_TILING_LINEAR"
	_ImageTiling_name_1 = "IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT"
)

var (
	_ImageTiling_index_0 = [...]uint8{0, 20, 39}
)

func (i ImageTiling) String() string {
	switch {
	case 0 <= i && i <= 1:
		return _ImageTiling_name_0[_ImageTiling_index_0[i]:_ImageTiling_index_0[i+1]]
	case i == 1000158000:
		return _ImageTiling_name_1
	default:
		return "ImageTiling(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_TYPE_1D-0]
	_ = x[IMAGE_TYPE_2D-1]
	_ = x[IMAGE_TYPE_3D-2]
}

const _ImageType_name = "IMAGE_TYPE_1DIMAGE_TYPE_2DIMAGE_TYPE_3D"

var _ImageType_index = [...]uint8{0, 13, 26, 39}

func (i ImageType) String() string {
	if i < 0 || i >= ImageType(len(_ImageType_index)-1) {
		return "ImageType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ImageType_name[_ImageType_index[i]:_ImageType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_USAGE_TRANSFER_SRC_BIT-1]
	_ = x[IMAGE_USAGE_TRANSFER_DST_BIT-2]
	_ = x[IMAGE_USAGE_SAMPLED_BIT-4]
	_ = x[IMAGE_USAGE_STORAGE_BIT-8]
	_ = x[IMAGE_USAGE_COLOR_ATTACHMENT_BIT-16]
	_ = x[IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT-32]
	_ = x[IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT-64]
	_ = x[IMAGE_USAGE_INPUT_ATTACHMENT_BIT-128]
	_ = x[IMAGE_USAGE_VIDEO_DECODE_DST_BIT_KHR-1000024000]
	_ = x[IMAGE_USAGE_VIDEO_DECODE_SRC_BIT_KHR-1000024000]
	_ = x[IMAGE_USAGE_VIDEO_DECODE_DPB_BIT_KHR-1000024000]
	_ = x[IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT-1000218000]
	_ = x[IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR-1000226000]
	_ = x[IMAGE_USAGE_HOST_TRANSFER_BIT_EXT-1000270000]
	_ = x[IMAGE_USAGE_VIDEO_ENCODE_DPB_BIT_KHR-1000299000]
	_ = x[IMAGE_USAGE_VIDEO_ENCODE_SRC_BIT_KHR-1000299000]
	_ = x[IMAGE_USAGE_VIDEO_ENCODE_DST_BIT_KHR-1000299000]
	_ = x[IMAGE_USAGE_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT-1000339000]
	_ = x[IMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEI-1000370000]
	_ = x[IMAGE_USAGE_SAMPLE_WEIGHT_BIT_QCOM-1000440000]
	_ = x[IMAGE_USAGE_SAMPLE_BLOCK_MATCH_BIT_QCOM-1000440000]
	_ = x[IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV-1000226000]
}

const _ImageUsageFlagBits_name = "IMAGE_USAGE_TRANSFER_SRC_BITIMAGE_USAGE_TRANSFER_DST_BITIMAGE_USAGE_SAMPLED_BITIMAGE_USAGE_STORAGE_BITIMAGE_USAGE_COLOR_ATTACHMENT_BITIMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BITIMAGE_USAGE_TRANSIENT_ATTACHMENT_BITIMAGE_USAGE_INPUT_ATTACHMENT_BITIMAGE_USAGE_VIDEO_DECODE_DST_BIT_KHRIMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXTIMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHRIMAGE_USAGE_HOST_TRANSFER_BIT_EXTIMAGE_USAGE_VIDEO_ENCODE_DPB_BIT_KHRIMAGE_USAGE_ATTACHMENT_FEEDBACK_LOOP_BIT_EXTIMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEIIMAGE_USAGE_SAMPLE_WEIGHT_BIT_QCOM"

var _ImageUsageFlagBits_map = map[ImageUsageFlagBits]string{
	1:          _ImageUsageFlagBits_name[0:28],
	2:          _ImageUsageFlagBits_name[28:56],
	4:          _ImageUsageFlagBits_name[56:79],
	8:          _ImageUsageFlagBits_name[79:102],
	16:         _ImageUsageFlagBits_name[102:134],
	32:         _ImageUsageFlagBits_name[134:174],
	64:         _ImageUsageFlagBits_name[174:210],
	128:        _ImageUsageFlagBits_name[210:242],
	1000024000: _ImageUsageFlagBits_name[242:278],
	1000218000: _ImageUsageFlagBits_name[278:318],
	1000226000: _ImageUsageFlagBits_name[318:370],
	1000270000: _ImageUsageFlagBits_name[370:403],
	1000299000: _ImageUsageFlagBits_name[403:439],
	1000339000: _ImageUsageFlagBits_name[439:483],
	1000370000: _ImageUsageFlagBits_name[483:521],
	1000440000: _ImageUsageFlagBits_name[521:555],
}

func (i ImageUsageFlagBits) String() string {
	if str, ok := _ImageUsageFlagBits_map[i]; ok {
		return str
	}
	return "ImageUsageFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT-1000218000]
	_ = x[IMAGE_VIEW_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT-1000316000]
	_ = x[IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT-1000332000]
}

const (
	_ImageViewCreateFlagBits_name_0 = "IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT"
	_ImageViewCreateFlagBits_name_1 = "IMAGE_VIEW_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT"
	_ImageViewCreateFlagBits_name_2 = "IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT"
)

func (i ImageViewCreateFlagBits) String() string {
	switch {
	case i == 1000218000:
		return _ImageViewCreateFlagBits_name_0
	case i == 1000316000:
		return _ImageViewCreateFlagBits_name_1
	case i == 1000332000:
		return _ImageViewCreateFlagBits_name_2
	default:
		return "ImageViewCreateFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[IMAGE_VIEW_TYPE_1D-0]
	_ = x[IMAGE_VIEW_TYPE_2D-1]
	_ = x[IMAGE_VIEW_TYPE_3D-2]
	_ = x[IMAGE_VIEW_TYPE_CUBE-3]
	_ = x[IMAGE_VIEW_TYPE_1D_ARRAY-4]
	_ = x[IMAGE_VIEW_TYPE_2D_ARRAY-5]
	_ = x[IMAGE_VIEW_TYPE_CUBE_ARRAY-6]
}

const _ImageViewType_name = "IMAGE_VIEW_TYPE_1DIMAGE_VIEW_TYPE_2DIMAGE_VIEW_TYPE_3DIMAGE_VIEW_TYPE_CUBEIMAGE_VIEW_TYPE_1D_ARRAYIMAGE_VIEW_TYPE_2D_ARRAYIMAGE_VIEW_TYPE_CUBE_ARRAY"

var _ImageViewType_index = [...]uint8{0, 18, 36, 54, 74, 98, 122, 148}

func (i ImageViewType) String() string {
	if i < 0 || i >= ImageViewType(len(_ImageViewType_index)-1) {
		return "ImageViewType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ImageViewType_name[_ImageViewType_index[i]:_ImageViewType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INDEX_TYPE_UINT16-0]
	_ = x[INDEX_TYPE_UINT32-1]
	_ = x[INDEX_TYPE_NONE_KHR-1000150000]
	_ = x[INDEX_TYPE_UINT8_EXT-1000265000]
	_ = x[INDEX_TYPE_NONE_NV-1000150000]
}

const (
	_IndexType_name_0 = "INDEX_TYPE_UINT16INDEX_TYPE_UINT32"
	_IndexType_name_1 = "INDEX_TYPE_NONE_KHR"
	_IndexType_name_2 = "INDEX_TYPE_UINT8_EXT"
)

var (
	_IndexType_index_0 = [...]uint8{0, 17, 34}
)

func (i IndexType) String() string {
	switch {
	case 0 <= i && i <= 1:
		return _IndexType_name_0[_IndexType_index_0[i]:_IndexType_index_0[i+1]]
	case i == 1000150000:
		return _IndexType_name_1
	case i == 1000265000:
		return _IndexType_name_2
	default:
		return "IndexType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INDIRECT_COMMANDS_LAYOUT_USAGE_EXPLICIT_PREPROCESS_BIT_NV-1]
	_ = x[INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NV-2]
	_ = x[INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NV-4]
}

const (
	_IndirectCommandsLayoutUsageFlagBitsNV_name_0 = "INDIRECT_COMMANDS_LAYOUT_USAGE_EXPLICIT_PREPROCESS_BIT_NVINDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NV"
	_IndirectCommandsLayoutUsageFlagBitsNV_name_1 = "INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NV"
)

var (
	_IndirectCommandsLayoutUsageFlagBitsNV_index_0 = [...]uint8{0, 57, 112}
)

func (i IndirectCommandsLayoutUsageFlagBitsNV) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _IndirectCommandsLayoutUsageFlagBitsNV_name_0[_IndirectCommandsLayoutUsageFlagBitsNV_index_0[i]:_IndirectCommandsLayoutUsageFlagBitsNV_index_0[i+1]]
	case i == 4:
		return _IndirectCommandsLayoutUsageFlagBitsNV_name_1
	default:
		return "IndirectCommandsLayoutUsageFlagBitsNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_SHADER_GROUP_NV-0]
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_STATE_FLAGS_NV-1]
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NV-2]
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NV-3]
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NV-4]
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NV-5]
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NV-6]
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_TASKS_NV-7]
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_MESH_TASKS_NV-1000328000]
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_PIPELINE_NV-1000428003]
	_ = x[INDIRECT_COMMANDS_TOKEN_TYPE_DISPATCH_NV-1000428004]
}

const (
	_IndirectCommandsTokenTypeNV_name_0 = "INDIRECT_COMMANDS_TOKEN_TYPE_SHADER_GROUP_NVINDIRECT_COMMANDS_TOKEN_TYPE_STATE_FLAGS_NVINDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NVINDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NVINDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NVINDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NVINDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NVINDIRECT_COMMANDS_TOKEN_TYPE_DRAW_TASKS_NV"
	_IndirectCommandsTokenTypeNV_name_1 = "INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_MESH_TASKS_NV"
	_IndirectCommandsTokenTypeNV_name_2 = "INDIRECT_COMMANDS_TOKEN_TYPE_PIPELINE_NVINDIRECT_COMMANDS_TOKEN_TYPE_DISPATCH_NV"
)

var (
	_IndirectCommandsTokenTypeNV_index_0 = [...]uint16{0, 44, 87, 131, 176, 221, 265, 301, 343}
	_IndirectCommandsTokenTypeNV_index_2 = [...]uint8{0, 40, 80}
)

func (i IndirectCommandsTokenTypeNV) String() string {
	switch {
	case 0 <= i && i <= 7:
		return _IndirectCommandsTokenTypeNV_name_0[_IndirectCommandsTokenTypeNV_index_0[i]:_IndirectCommandsTokenTypeNV_index_0[i+1]]
	case i == 1000328000:
		return _IndirectCommandsTokenTypeNV_name_1
	case 1000428003 <= i && i <= 1000428004:
		i -= 1000428003
		return _IndirectCommandsTokenTypeNV_name_2[_IndirectCommandsTokenTypeNV_index_2[i]:_IndirectCommandsTokenTypeNV_index_2[i+1]]
	default:
		return "IndirectCommandsTokenTypeNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INDIRECT_STATE_FLAG_FRONTFACE_BIT_NV-1]
}

const _IndirectStateFlagBitsNV_name = "INDIRECT_STATE_FLAG_FRONTFACE_BIT_NV"

var _IndirectStateFlagBitsNV_index = [...]uint8{0, 36}

func (i IndirectStateFlagBitsNV) String() string {
	i -= 1
	if i >= IndirectStateFlagBitsNV(len(_IndirectStateFlagBitsNV_index)-1) {
		return "IndirectStateFlagBitsNV(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _IndirectStateFlagBitsNV_name[_IndirectStateFlagBitsNV_index[i]:_IndirectStateFlagBitsNV_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR-1000394000]
}

const _InstanceCreateFlagBits_name = "INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR"

var _InstanceCreateFlagBits_index = [...]uint8{0, 45}

func (i InstanceCreateFlagBits) String() string {
	i -= 1000394000
	if i >= InstanceCreateFlagBits(len(_InstanceCreateFlagBits_index)-1) {
		return "InstanceCreateFlagBits(" + strconv.FormatInt(int64(i+1000394000), 10) + ")"
	}
	return _InstanceCreateFlagBits_name[_InstanceCreateFlagBits_index[i]:_InstanceCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INTERNAL_ALLOCATION_TYPE_EXECUTABLE-0]
}

const _InternalAllocationType_name = "INTERNAL_ALLOCATION_TYPE_EXECUTABLE"

var _InternalAllocationType_index = [...]uint8{0, 35}

func (i InternalAllocationType) String() string {
	if i < 0 || i >= InternalAllocationType(len(_InternalAllocationType_index)-1) {
		return "InternalAllocationType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _InternalAllocationType_name[_InternalAllocationType_index[i]:_InternalAllocationType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LATENCY_MARKER_SIMULATION_START_NV-0]
	_ = x[LATENCY_MARKER_SIMULATION_END_NV-1]
	_ = x[LATENCY_MARKER_RENDERSUBMIT_START_NV-2]
	_ = x[LATENCY_MARKER_RENDERSUBMIT_END_NV-3]
	_ = x[LATENCY_MARKER_PRESENT_START_NV-4]
	_ = x[LATENCY_MARKER_PRESENT_END_NV-5]
	_ = x[LATENCY_MARKER_INPUT_SAMPLE_NV-6]
	_ = x[LATENCY_MARKER_TRIGGER_FLASH_NV-7]
	_ = x[LATENCY_MARKER_OUT_OF_BAND_RENDERSUBMIT_START_NV-8]
	_ = x[LATENCY_MARKER_OUT_OF_BAND_RENDERSUBMIT_END_NV-9]
	_ = x[LATENCY_MARKER_OUT_OF_BAND_PRESENT_START_NV-10]
	_ = x[LATENCY_MARKER_OUT_OF_BAND_PRESENT_END_NV-11]
}

const _LatencyMarkerNV_name = "LATENCY_MARKER_SIMULATION_START_NVLATENCY_MARKER_SIMULATION_END_NVLATENCY_MARKER_RENDERSUBMIT_START_NVLATENCY_MARKER_RENDERSUBMIT_END_NVLATENCY_MARKER_PRESENT_START_NVLATENCY_MARKER_PRESENT_END_NVLATENCY_MARKER_INPUT_SAMPLE_NVLATENCY_MARKER_TRIGGER_FLASH_NVLATENCY_MARKER_OUT_OF_BAND_RENDERSUBMIT_START_NVLATENCY_MARKER_OUT_OF_BAND_RENDERSUBMIT_END_NVLATENCY_MARKER_OUT_OF_BAND_PRESENT_START_NVLATENCY_MARKER_OUT_OF_BAND_PRESENT_END_NV"

var _LatencyMarkerNV_index = [...]uint16{0, 34, 66, 102, 136, 167, 196, 226, 257, 305, 351, 394, 435}

func (i LatencyMarkerNV) String() string {
	if i < 0 || i >= LatencyMarkerNV(len(_LatencyMarkerNV_index)-1) {
		return "LatencyMarkerNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LatencyMarkerNV_name[_LatencyMarkerNV_index[i]:_LatencyMarkerNV_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LAYER_SETTING_TYPE_BOOL32_EXT-0]
	_ = x[LAYER_SETTING_TYPE_INT32_EXT-1]
	_ = x[LAYER_SETTING_TYPE_INT64_EXT-2]
	_ = x[LAYER_SETTING_TYPE_UINT32_EXT-3]
	_ = x[LAYER_SETTING_TYPE_UINT64_EXT-4]
	_ = x[LAYER_SETTING_TYPE_FLOAT32_EXT-5]
	_ = x[LAYER_SETTING_TYPE_FLOAT64_EXT-6]
	_ = x[LAYER_SETTING_TYPE_STRING_EXT-7]
}

const _LayerSettingTypeEXT_name = "LAYER_SETTING_TYPE_BOOL32_EXTLAYER_SETTING_TYPE_INT32_EXTLAYER_SETTING_TYPE_INT64_EXTLAYER_SETTING_TYPE_UINT32_EXTLAYER_SETTING_TYPE_UINT64_EXTLAYER_SETTING_TYPE_FLOAT32_EXTLAYER_SETTING_TYPE_FLOAT64_EXTLAYER_SETTING_TYPE_STRING_EXT"

var _LayerSettingTypeEXT_index = [...]uint8{0, 29, 57, 85, 114, 143, 173, 203, 232}

func (i LayerSettingTypeEXT) String() string {
	if i < 0 || i >= LayerSettingTypeEXT(len(_LayerSettingTypeEXT_index)-1) {
		return "LayerSettingTypeEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LayerSettingTypeEXT_name[_LayerSettingTypeEXT_index[i]:_LayerSettingTypeEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LAYERED_DRIVER_UNDERLYING_API_NONE_MSFT-0]
	_ = x[LAYERED_DRIVER_UNDERLYING_API_D3D12_MSFT-1]
}

const _LayeredDriverUnderlyingApiMSFT_name = "LAYERED_DRIVER_UNDERLYING_API_NONE_MSFTLAYERED_DRIVER_UNDERLYING_API_D3D12_MSFT"

var _LayeredDriverUnderlyingApiMSFT_index = [...]uint8{0, 39, 79}

func (i LayeredDriverUnderlyingApiMSFT) String() string {
	if i < 0 || i >= LayeredDriverUnderlyingApiMSFT(len(_LayeredDriverUnderlyingApiMSFT_index)-1) {
		return "LayeredDriverUnderlyingApiMSFT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LayeredDriverUnderlyingApiMSFT_name[_LayeredDriverUnderlyingApiMSFT_index[i]:_LayeredDriverUnderlyingApiMSFT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LINE_RASTERIZATION_MODE_DEFAULT_EXT-0]
	_ = x[LINE_RASTERIZATION_MODE_RECTANGULAR_EXT-1]
	_ = x[LINE_RASTERIZATION_MODE_BRESENHAM_EXT-2]
	_ = x[LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT-3]
}

const _LineRasterizationModeEXT_name = "LINE_RASTERIZATION_MODE_DEFAULT_EXTLINE_RASTERIZATION_MODE_RECTANGULAR_EXTLINE_RASTERIZATION_MODE_BRESENHAM_EXTLINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT"

var _LineRasterizationModeEXT_index = [...]uint8{0, 35, 74, 111, 157}

func (i LineRasterizationModeEXT) String() string {
	if i < 0 || i >= LineRasterizationModeEXT(len(_LineRasterizationModeEXT_index)-1) {
		return "LineRasterizationModeEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LineRasterizationModeEXT_name[_LineRasterizationModeEXT_index[i]:_LineRasterizationModeEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LOGIC_OP_CLEAR-0]
	_ = x[LOGIC_OP_AND-1]
	_ = x[LOGIC_OP_AND_REVERSE-2]
	_ = x[LOGIC_OP_COPY-3]
	_ = x[LOGIC_OP_AND_INVERTED-4]
	_ = x[LOGIC_OP_NO_OP-5]
	_ = x[LOGIC_OP_XOR-6]
	_ = x[LOGIC_OP_OR-7]
	_ = x[LOGIC_OP_NOR-8]
	_ = x[LOGIC_OP_EQUIVALENT-9]
	_ = x[LOGIC_OP_INVERT-10]
	_ = x[LOGIC_OP_OR_REVERSE-11]
	_ = x[LOGIC_OP_COPY_INVERTED-12]
	_ = x[LOGIC_OP_OR_INVERTED-13]
	_ = x[LOGIC_OP_NAND-14]
	_ = x[LOGIC_OP_SET-15]
}

const _LogicOp_name = "LOGIC_OP_CLEARLOGIC_OP_ANDLOGIC_OP_AND_REVERSELOGIC_OP_COPYLOGIC_OP_AND_INVERTEDLOGIC_OP_NO_OPLOGIC_OP_XORLOGIC_OP_ORLOGIC_OP_NORLOGIC_OP_EQUIVALENTLOGIC_OP_INVERTLOGIC_OP_OR_REVERSELOGIC_OP_COPY_INVERTEDLOGIC_OP_OR_INVERTEDLOGIC_OP_NANDLOGIC_OP_SET"

var _LogicOp_index = [...]uint8{0, 14, 26, 46, 59, 80, 94, 106, 117, 129, 148, 163, 182, 204, 224, 237, 249}

func (i LogicOp) String() string {
	if i < 0 || i >= LogicOp(len(_LogicOp_index)-1) {
		return "LogicOp(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LogicOp_name[_LogicOp_index[i]:_LogicOp_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MEMORY_ALLOCATE_DEVICE_MASK_BIT-1]
	_ = x[MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT-2]
	_ = x[MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT-4]
	_ = x[MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT_KHR-2]
	_ = x[MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR-4]
	_ = x[MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHR-1]
}

const (
	_MemoryAllocateFlagBits_name_0 = "MEMORY_ALLOCATE_DEVICE_MASK_BITMEMORY_ALLOCATE_DEVICE_ADDRESS_BIT"
	_MemoryAllocateFlagBits_name_1 = "MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT"
)

var (
	_MemoryAllocateFlagBits_index_0 = [...]uint8{0, 31, 65}
)

func (i MemoryAllocateFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _MemoryAllocateFlagBits_name_0[_MemoryAllocateFlagBits_index_0[i]:_MemoryAllocateFlagBits_index_0[i+1]]
	case i == 4:
		return _MemoryAllocateFlagBits_name_1
	default:
		return "MemoryAllocateFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MEMORY_DECOMPRESSION_METHOD_GDEFLATE_1_0_BIT_NV-1]
}

const _MemoryDecompressionMethodFlagBitsNV_name = "MEMORY_DECOMPRESSION_METHOD_GDEFLATE_1_0_BIT_NV"

var _MemoryDecompressionMethodFlagBitsNV_index = [...]uint8{0, 47}

func (i MemoryDecompressionMethodFlagBitsNV) String() string {
	i -= 1
	if i >= MemoryDecompressionMethodFlagBitsNV(len(_MemoryDecompressionMethodFlagBitsNV_index)-1) {
		return "MemoryDecompressionMethodFlagBitsNV(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _MemoryDecompressionMethodFlagBitsNV_name[_MemoryDecompressionMethodFlagBitsNV_index[i]:_MemoryDecompressionMethodFlagBitsNV_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MEMORY_HEAP_DEVICE_LOCAL_BIT-1]
	_ = x[MEMORY_HEAP_MULTI_INSTANCE_BIT-2]
	_ = x[MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR-2]
}

const _MemoryHeapFlagBits_name = "MEMORY_HEAP_DEVICE_LOCAL_BITMEMORY_HEAP_MULTI_INSTANCE_BIT"

var _MemoryHeapFlagBits_index = [...]uint8{0, 28, 58}

func (i MemoryHeapFlagBits) String() string {
	i -= 1
	if i >= MemoryHeapFlagBits(len(_MemoryHeapFlagBits_index)-1) {
		return "MemoryHeapFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _MemoryHeapFlagBits_name[_MemoryHeapFlagBits_index[i]:_MemoryHeapFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD-0]
	_ = x[MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD-1]
	_ = x[MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD-2]
}

const _MemoryOverallocationBehaviorAMD_name = "MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMDMEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMDMEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD"

var _MemoryOverallocationBehaviorAMD_index = [...]uint8{0, 42, 84, 129}

func (i MemoryOverallocationBehaviorAMD) String() string {
	if i < 0 || i >= MemoryOverallocationBehaviorAMD(len(_MemoryOverallocationBehaviorAMD_index)-1) {
		return "MemoryOverallocationBehaviorAMD(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MemoryOverallocationBehaviorAMD_name[_MemoryOverallocationBehaviorAMD_index[i]:_MemoryOverallocationBehaviorAMD_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MEMORY_PROPERTY_DEVICE_LOCAL_BIT-1]
	_ = x[MEMORY_PROPERTY_HOST_VISIBLE_BIT-2]
	_ = x[MEMORY_PROPERTY_HOST_COHERENT_BIT-4]
	_ = x[MEMORY_PROPERTY_HOST_CACHED_BIT-8]
	_ = x[MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT-16]
	_ = x[MEMORY_PROPERTY_PROTECTED_BIT-32]
	_ = x[MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD-1000229000]
	_ = x[MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD-1000229000]
	_ = x[MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV-1000371000]
}

const (
	_MemoryPropertyFlagBits_name_0 = "MEMORY_PROPERTY_DEVICE_LOCAL_BITMEMORY_PROPERTY_HOST_VISIBLE_BIT"
	_MemoryPropertyFlagBits_name_1 = "MEMORY_PROPERTY_HOST_COHERENT_BIT"
	_MemoryPropertyFlagBits_name_2 = "MEMORY_PROPERTY_HOST_CACHED_BIT"
	_MemoryPropertyFlagBits_name_3 = "MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT"
	_MemoryPropertyFlagBits_name_4 = "MEMORY_PROPERTY_PROTECTED_BIT"
	_MemoryPropertyFlagBits_name_5 = "MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD"
	_MemoryPropertyFlagBits_name_6 = "MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV"
)

var (
	_MemoryPropertyFlagBits_index_0 = [...]uint8{0, 32, 64}
)

func (i MemoryPropertyFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _MemoryPropertyFlagBits_name_0[_MemoryPropertyFlagBits_index_0[i]:_MemoryPropertyFlagBits_index_0[i+1]]
	case i == 4:
		return _MemoryPropertyFlagBits_name_1
	case i == 8:
		return _MemoryPropertyFlagBits_name_2
	case i == 16:
		return _MemoryPropertyFlagBits_name_3
	case i == 32:
		return _MemoryPropertyFlagBits_name_4
	case i == 1000229000:
		return _MemoryPropertyFlagBits_name_5
	case i == 1000371000:
		return _MemoryPropertyFlagBits_name_6
	default:
		return "MemoryPropertyFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MICROMAP_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT-1]
}

const _MicromapCreateFlagBitsEXT_name = "MICROMAP_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT"

var _MicromapCreateFlagBitsEXT_index = [...]uint8{0, 53}

func (i MicromapCreateFlagBitsEXT) String() string {
	i -= 1
	if i >= MicromapCreateFlagBitsEXT(len(_MicromapCreateFlagBitsEXT_index)-1) {
		return "MicromapCreateFlagBitsEXT(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _MicromapCreateFlagBitsEXT_name[_MicromapCreateFlagBitsEXT_index[i]:_MicromapCreateFlagBitsEXT_index[i+1]]
}
