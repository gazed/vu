// Code generated by "stringer -output=enum_string_5.go -type=PipelineLayoutCreateFlagBits,PipelineRobustnessBufferBehaviorEXT,PipelineRobustnessImageBehaviorEXT,PipelineShaderStageCreateFlagBits,PipelineStageFlagBits,PipelineStageFlagBits2,PointClippingBehavior,PolygonMode,PresentGravityFlagBitsEXT,PresentModeKHR,PresentScalingFlagBitsEXT,PrimitiveTopology,ProvokingVertexModeEXT,QueryControlFlagBits,QueryPipelineStatisticFlagBits,QueryPoolSamplingModeINTEL,QueryResultFlagBits,QueryResultStatusKHR,QueryType,QueueFlagBits,QueueGlobalPriorityKHR,RasterizationOrderAMD,RayTracingInvocationReorderModeNV,RayTracingShaderGroupTypeKHR,RenderPassCreateFlagBits,RenderingFlagBits,ResolveModeFlagBits,Result,SampleCountFlagBits,SamplerAddressMode,SamplerCreateFlagBits"; DO NOT EDIT.

package vk

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_LAYOUT_CREATE_INDEPENDENT_SETS_BIT_EXT-1000320000]
}

const _PipelineLayoutCreateFlagBits_name = "PIPELINE_LAYOUT_CREATE_INDEPENDENT_SETS_BIT_EXT"

var _PipelineLayoutCreateFlagBits_index = [...]uint8{0, 47}

func (i PipelineLayoutCreateFlagBits) String() string {
	i -= 1000320000
	if i >= PipelineLayoutCreateFlagBits(len(_PipelineLayoutCreateFlagBits_index)-1) {
		return "PipelineLayoutCreateFlagBits(" + strconv.FormatInt(int64(i+1000320000), 10) + ")"
	}
	return _PipelineLayoutCreateFlagBits_name[_PipelineLayoutCreateFlagBits_index[i]:_PipelineLayoutCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DEVICE_DEFAULT_EXT-0]
	_ = x[PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DISABLED_EXT-1]
	_ = x[PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_EXT-2]
	_ = x[PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_2_EXT-3]
}

const _PipelineRobustnessBufferBehaviorEXT_name = "PIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DEVICE_DEFAULT_EXTPIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_DISABLED_EXTPIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_EXTPIPELINE_ROBUSTNESS_BUFFER_BEHAVIOR_ROBUST_BUFFER_ACCESS_2_EXT"

var _PipelineRobustnessBufferBehaviorEXT_index = [...]uint8{0, 54, 102, 162, 224}

func (i PipelineRobustnessBufferBehaviorEXT) String() string {
	if i < 0 || i >= PipelineRobustnessBufferBehaviorEXT(len(_PipelineRobustnessBufferBehaviorEXT_index)-1) {
		return "PipelineRobustnessBufferBehaviorEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PipelineRobustnessBufferBehaviorEXT_name[_PipelineRobustnessBufferBehaviorEXT_index[i]:_PipelineRobustnessBufferBehaviorEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DEVICE_DEFAULT_EXT-0]
	_ = x[PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DISABLED_EXT-1]
	_ = x[PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_EXT-2]
	_ = x[PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_2_EXT-3]
}

const _PipelineRobustnessImageBehaviorEXT_name = "PIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DEVICE_DEFAULT_EXTPIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_DISABLED_EXTPIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_EXTPIPELINE_ROBUSTNESS_IMAGE_BEHAVIOR_ROBUST_IMAGE_ACCESS_2_EXT"

var _PipelineRobustnessImageBehaviorEXT_index = [...]uint8{0, 53, 100, 158, 218}

func (i PipelineRobustnessImageBehaviorEXT) String() string {
	if i < 0 || i >= PipelineRobustnessImageBehaviorEXT(len(_PipelineRobustnessImageBehaviorEXT_index)-1) {
		return "PipelineRobustnessImageBehaviorEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PipelineRobustnessImageBehaviorEXT_name[_PipelineRobustnessImageBehaviorEXT_index[i]:_PipelineRobustnessImageBehaviorEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT-1]
	_ = x[PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT-2]
	_ = x[PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT-1]
	_ = x[PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT-2]
}

const _PipelineShaderStageCreateFlagBits_name = "PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BITPIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT"

var _PipelineShaderStageCreateFlagBits_index = [...]uint8{0, 60, 115}

func (i PipelineShaderStageCreateFlagBits) String() string {
	i -= 1
	if i >= PipelineShaderStageCreateFlagBits(len(_PipelineShaderStageCreateFlagBits_index)-1) {
		return "PipelineShaderStageCreateFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _PipelineShaderStageCreateFlagBits_name[_PipelineShaderStageCreateFlagBits_index[i]:_PipelineShaderStageCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_STAGE_NONE-0]
	_ = x[PIPELINE_STAGE_TOP_OF_PIPE_BIT-1]
	_ = x[PIPELINE_STAGE_DRAW_INDIRECT_BIT-2]
	_ = x[PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT-1024]
	_ = x[PIPELINE_STAGE_COMPUTE_SHADER_BIT-2048]
	_ = x[PIPELINE_STAGE_TRANSFER_BIT-4096]
	_ = x[PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT-8192]
	_ = x[PIPELINE_STAGE_HOST_BIT-16384]
	_ = x[PIPELINE_STAGE_ALL_GRAPHICS_BIT-32768]
	_ = x[PIPELINE_STAGE_ALL_COMMANDS_BIT-65536]
	_ = x[PIPELINE_STAGE_VERTEX_INPUT_BIT-4]
	_ = x[PIPELINE_STAGE_VERTEX_SHADER_BIT-8]
	_ = x[PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT-16]
	_ = x[PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT-32]
	_ = x[PIPELINE_STAGE_GEOMETRY_SHADER_BIT-64]
	_ = x[PIPELINE_STAGE_FRAGMENT_SHADER_BIT-128]
	_ = x[PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT-256]
	_ = x[PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT-512]
	_ = x[PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT-1000028000]
	_ = x[PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT-1000081000]
	_ = x[PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR-1000150000]
	_ = x[PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT-1000218000]
	_ = x[PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR-1000226000]
	_ = x[PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV-1000277000]
	_ = x[PIPELINE_STAGE_MESH_SHADER_BIT_EXT-1000328000]
	_ = x[PIPELINE_STAGE_TASK_SHADER_BIT_EXT-1000328000]
	_ = x[PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR-1000347000]
	_ = x[PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV-1000150000]
	_ = x[PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV-1000226000]
	_ = x[PIPELINE_STAGE_MESH_SHADER_BIT_NV-1000328000]
	_ = x[PIPELINE_STAGE_NONE_KHR-0]
	_ = x[PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV-1000347000]
	_ = x[PIPELINE_STAGE_TASK_SHADER_BIT_NV-1000328000]
}

const _PipelineStageFlagBits_name = "PIPELINE_STAGE_NONEPIPELINE_STAGE_TOP_OF_PIPE_BITPIPELINE_STAGE_DRAW_INDIRECT_BITPIPELINE_STAGE_VERTEX_INPUT_BITPIPELINE_STAGE_VERTEX_SHADER_BITPIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BITPIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BITPIPELINE_STAGE_GEOMETRY_SHADER_BITPIPELINE_STAGE_FRAGMENT_SHADER_BITPIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BITPIPELINE_STAGE_LATE_FRAGMENT_TESTS_BITPIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BITPIPELINE_STAGE_COMPUTE_SHADER_BITPIPELINE_STAGE_TRANSFER_BITPIPELINE_STAGE_BOTTOM_OF_PIPE_BITPIPELINE_STAGE_HOST_BITPIPELINE_STAGE_ALL_GRAPHICS_BITPIPELINE_STAGE_ALL_COMMANDS_BITPIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXTPIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXTPIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHRPIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXTPIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHRPIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NVPIPELINE_STAGE_MESH_SHADER_BIT_EXTPIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR"

var _PipelineStageFlagBits_map = map[PipelineStageFlagBits]string{
	0:          _PipelineStageFlagBits_name[0:19],
	1:          _PipelineStageFlagBits_name[19:49],
	2:          _PipelineStageFlagBits_name[49:81],
	4:          _PipelineStageFlagBits_name[81:112],
	8:          _PipelineStageFlagBits_name[112:144],
	16:         _PipelineStageFlagBits_name[144:190],
	32:         _PipelineStageFlagBits_name[190:239],
	64:         _PipelineStageFlagBits_name[239:273],
	128:        _PipelineStageFlagBits_name[273:307],
	256:        _PipelineStageFlagBits_name[307:346],
	512:        _PipelineStageFlagBits_name[346:384],
	1024:       _PipelineStageFlagBits_name[384:426],
	2048:       _PipelineStageFlagBits_name[426:459],
	4096:       _PipelineStageFlagBits_name[459:486],
	8192:       _PipelineStageFlagBits_name[486:519],
	16384:      _PipelineStageFlagBits_name[519:542],
	32768:      _PipelineStageFlagBits_name[542:573],
	65536:      _PipelineStageFlagBits_name[573:604],
	1000028000: _PipelineStageFlagBits_name[604:645],
	1000081000: _PipelineStageFlagBits_name[645:689],
	1000150000: _PipelineStageFlagBits_name[689:740],
	1000218000: _PipelineStageFlagBits_name[740:787],
	1000226000: _PipelineStageFlagBits_name[787:842],
	1000277000: _PipelineStageFlagBits_name[842:882],
	1000328000: _PipelineStageFlagBits_name[882:916],
	1000347000: _PipelineStageFlagBits_name[916:957],
}

func (i PipelineStageFlagBits) String() string {
	if str, ok := _PipelineStageFlagBits_map[i]; ok {
		return str
	}
	return "PipelineStageFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_STAGE_2_NONE-0]
	_ = x[PIPELINE_STAGE_2_TOP_OF_PIPE_BIT-1]
	_ = x[PIPELINE_STAGE_2_DRAW_INDIRECT_BIT-2]
	_ = x[PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT-1024]
	_ = x[PIPELINE_STAGE_2_COMPUTE_SHADER_BIT-2048]
	_ = x[PIPELINE_STAGE_2_ALL_TRANSFER_BIT-4096]
	_ = x[PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT-8192]
	_ = x[PIPELINE_STAGE_2_HOST_BIT-16384]
	_ = x[PIPELINE_STAGE_2_ALL_GRAPHICS_BIT-32768]
	_ = x[PIPELINE_STAGE_2_ALL_COMMANDS_BIT-65536]
	_ = x[PIPELINE_STAGE_2_VERTEX_INPUT_BIT-4]
	_ = x[PIPELINE_STAGE_2_VERTEX_SHADER_BIT-8]
	_ = x[PIPELINE_STAGE_2_COPY_BIT-4294967296]
	_ = x[PIPELINE_STAGE_2_RESOLVE_BIT-8589934592]
	_ = x[PIPELINE_STAGE_2_BLIT_BIT-17179869184]
	_ = x[PIPELINE_STAGE_2_CLEAR_BIT-34359738368]
	_ = x[PIPELINE_STAGE_2_INDEX_INPUT_BIT-68719476736]
	_ = x[PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT-137438953472]
	_ = x[PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT-274877906944]
	_ = x[PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT-16]
	_ = x[PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT-32]
	_ = x[PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT-64]
	_ = x[PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT-128]
	_ = x[PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT-256]
	_ = x[PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT-512]
	_ = x[PIPELINE_STAGE_2_VIDEO_DECODE_BIT_KHR-1000024000]
	_ = x[PIPELINE_STAGE_2_VIDEO_ENCODE_BIT_KHR-1000299000]
	_ = x[PIPELINE_STAGE_2_TASK_SHADER_BIT_EXT-1000314000]
	_ = x[PIPELINE_STAGE_2_MESH_SHADER_BIT_EXT-1000314000]
	_ = x[PIPELINE_STAGE_2_TRANSFORM_FEEDBACK_BIT_EXT-1000314000]
	_ = x[PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR-1000314000]
	_ = x[PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR-1000314000]
	_ = x[PIPELINE_STAGE_2_CONDITIONAL_RENDERING_BIT_EXT-1000314000]
	_ = x[PIPELINE_STAGE_2_FRAGMENT_DENSITY_PROCESS_BIT_EXT-1000314000]
	_ = x[PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_NV-1000314000]
	_ = x[PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR-1000314000]
	_ = x[PIPELINE_STAGE_2_SUBPASS_SHADER_BIT_HUAWEI-1000369000]
	_ = x[PIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEI-1000370000]
	_ = x[PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_COPY_BIT_KHR-1000386000]
	_ = x[PIPELINE_STAGE_2_MICROMAP_BUILD_BIT_EXT-1000396000]
	_ = x[PIPELINE_STAGE_2_CLUSTER_CULLING_SHADER_BIT_HUAWEI-1000404000]
	_ = x[PIPELINE_STAGE_2_OPTICAL_FLOW_BIT_NV-1000464000]
	_ = x[PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_NV-1000314000]
	_ = x[PIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHR-65536]
	_ = x[PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR-32768]
	_ = x[PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR-4096]
	_ = x[PIPELINE_STAGE_2_TRANSFER_BIT_KHR-4096]
	_ = x[PIPELINE_STAGE_2_TRANSFER_BIT-4096]
	_ = x[PIPELINE_STAGE_2_BLIT_BIT_KHR-17179869184]
	_ = x[PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHR-8192]
	_ = x[PIPELINE_STAGE_2_CLEAR_BIT_KHR-34359738368]
	_ = x[PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR-1024]
	_ = x[PIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHR-2048]
	_ = x[PIPELINE_STAGE_2_COPY_BIT_KHR-4294967296]
	_ = x[PIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHR-2]
	_ = x[PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHR-256]
	_ = x[PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHR-128]
	_ = x[PIPELINE_STAGE_2_SHADING_RATE_IMAGE_BIT_NV-1000314000]
	_ = x[PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHR-64]
	_ = x[PIPELINE_STAGE_2_HOST_BIT_KHR-16384]
	_ = x[PIPELINE_STAGE_2_INDEX_INPUT_BIT_KHR-68719476736]
	_ = x[PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHR-512]
	_ = x[PIPELINE_STAGE_2_MESH_SHADER_BIT_NV-1000314000]
	_ = x[PIPELINE_STAGE_2_NONE_KHR-0]
	_ = x[PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR-274877906944]
	_ = x[PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_NV-1000314000]
	_ = x[PIPELINE_STAGE_2_RESOLVE_BIT_KHR-8589934592]
	_ = x[PIPELINE_STAGE_2_SUBPASS_SHADING_BIT_HUAWEI-1000369000]
	_ = x[PIPELINE_STAGE_2_TASK_SHADER_BIT_NV-1000314000]
	_ = x[PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHR-16]
	_ = x[PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHR-32]
	_ = x[PIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHR-1]
	_ = x[PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHR-137438953472]
	_ = x[PIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHR-4]
	_ = x[PIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHR-8]
}

const _PipelineStageFlagBits2_name = "PIPELINE_STAGE_2_NONEPIPELINE_STAGE_2_TOP_OF_PIPE_BITPIPELINE_STAGE_2_DRAW_INDIRECT_BITPIPELINE_STAGE_2_VERTEX_INPUT_BITPIPELINE_STAGE_2_VERTEX_SHADER_BITPIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BITPIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BITPIPELINE_STAGE_2_GEOMETRY_SHADER_BITPIPELINE_STAGE_2_FRAGMENT_SHADER_BITPIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BITPIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BITPIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BITPIPELINE_STAGE_2_COMPUTE_SHADER_BITPIPELINE_STAGE_2_ALL_TRANSFER_BITPIPELINE_STAGE_2_BOTTOM_OF_PIPE_BITPIPELINE_STAGE_2_HOST_BITPIPELINE_STAGE_2_ALL_GRAPHICS_BITPIPELINE_STAGE_2_ALL_COMMANDS_BITPIPELINE_STAGE_2_VIDEO_DECODE_BIT_KHRPIPELINE_STAGE_2_VIDEO_ENCODE_BIT_KHRPIPELINE_STAGE_2_TASK_SHADER_BIT_EXTPIPELINE_STAGE_2_SUBPASS_SHADER_BIT_HUAWEIPIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEIPIPELINE_STAGE_2_ACCELERATION_STRUCTURE_COPY_BIT_KHRPIPELINE_STAGE_2_MICROMAP_BUILD_BIT_EXTPIPELINE_STAGE_2_CLUSTER_CULLING_SHADER_BIT_HUAWEIPIPELINE_STAGE_2_OPTICAL_FLOW_BIT_NVPIPELINE_STAGE_2_COPY_BITPIPELINE_STAGE_2_RESOLVE_BITPIPELINE_STAGE_2_BLIT_BITPIPELINE_STAGE_2_CLEAR_BITPIPELINE_STAGE_2_INDEX_INPUT_BITPIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BITPIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT"

var _PipelineStageFlagBits2_map = map[PipelineStageFlagBits2]string{
	0:            _PipelineStageFlagBits2_name[0:21],
	1:            _PipelineStageFlagBits2_name[21:53],
	2:            _PipelineStageFlagBits2_name[53:87],
	4:            _PipelineStageFlagBits2_name[87:120],
	8:            _PipelineStageFlagBits2_name[120:154],
	16:           _PipelineStageFlagBits2_name[154:202],
	32:           _PipelineStageFlagBits2_name[202:253],
	64:           _PipelineStageFlagBits2_name[253:289],
	128:          _PipelineStageFlagBits2_name[289:325],
	256:          _PipelineStageFlagBits2_name[325:366],
	512:          _PipelineStageFlagBits2_name[366:406],
	1024:         _PipelineStageFlagBits2_name[406:450],
	2048:         _PipelineStageFlagBits2_name[450:485],
	4096:         _PipelineStageFlagBits2_name[485:518],
	8192:         _PipelineStageFlagBits2_name[518:553],
	16384:        _PipelineStageFlagBits2_name[553:578],
	32768:        _PipelineStageFlagBits2_name[578:611],
	65536:        _PipelineStageFlagBits2_name[611:644],
	1000024000:   _PipelineStageFlagBits2_name[644:681],
	1000299000:   _PipelineStageFlagBits2_name[681:718],
	1000314000:   _PipelineStageFlagBits2_name[718:754],
	1000369000:   _PipelineStageFlagBits2_name[754:796],
	1000370000:   _PipelineStageFlagBits2_name[796:839],
	1000386000:   _PipelineStageFlagBits2_name[839:891],
	1000396000:   _PipelineStageFlagBits2_name[891:930],
	1000404000:   _PipelineStageFlagBits2_name[930:980],
	1000464000:   _PipelineStageFlagBits2_name[980:1016],
	4294967296:   _PipelineStageFlagBits2_name[1016:1041],
	8589934592:   _PipelineStageFlagBits2_name[1041:1069],
	17179869184:  _PipelineStageFlagBits2_name[1069:1094],
	34359738368:  _PipelineStageFlagBits2_name[1094:1120],
	68719476736:  _PipelineStageFlagBits2_name[1120:1152],
	137438953472: _PipelineStageFlagBits2_name[1152:1195],
	274877906944: _PipelineStageFlagBits2_name[1195:1241],
}

func (i PipelineStageFlagBits2) String() string {
	if str, ok := _PipelineStageFlagBits2_map[i]; ok {
		return str
	}
	return "PipelineStageFlagBits2(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES-0]
	_ = x[POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY-1]
	_ = x[POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR-0]
	_ = x[POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR-1]
}

const _PointClippingBehavior_name = "POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANESPOINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY"

var _PointClippingBehavior_index = [...]uint8{0, 39, 84}

func (i PointClippingBehavior) String() string {
	if i < 0 || i >= PointClippingBehavior(len(_PointClippingBehavior_index)-1) {
		return "PointClippingBehavior(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PointClippingBehavior_name[_PointClippingBehavior_index[i]:_PointClippingBehavior_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[POLYGON_MODE_FILL-0]
	_ = x[POLYGON_MODE_LINE-1]
	_ = x[POLYGON_MODE_POINT-2]
	_ = x[POLYGON_MODE_FILL_RECTANGLE_NV-1000153000]
}

const (
	_PolygonMode_name_0 = "POLYGON_MODE_FILLPOLYGON_MODE_LINEPOLYGON_MODE_POINT"
	_PolygonMode_name_1 = "POLYGON_MODE_FILL_RECTANGLE_NV"
)

var (
	_PolygonMode_index_0 = [...]uint8{0, 17, 34, 52}
)

func (i PolygonMode) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _PolygonMode_name_0[_PolygonMode_index_0[i]:_PolygonMode_index_0[i+1]]
	case i == 1000153000:
		return _PolygonMode_name_1
	default:
		return "PolygonMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PRESENT_GRAVITY_MIN_BIT_EXT-1]
	_ = x[PRESENT_GRAVITY_MAX_BIT_EXT-2]
	_ = x[PRESENT_GRAVITY_CENTERED_BIT_EXT-4]
}

const (
	_PresentGravityFlagBitsEXT_name_0 = "PRESENT_GRAVITY_MIN_BIT_EXTPRESENT_GRAVITY_MAX_BIT_EXT"
	_PresentGravityFlagBitsEXT_name_1 = "PRESENT_GRAVITY_CENTERED_BIT_EXT"
)

var (
	_PresentGravityFlagBitsEXT_index_0 = [...]uint8{0, 27, 54}
)

func (i PresentGravityFlagBitsEXT) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _PresentGravityFlagBitsEXT_name_0[_PresentGravityFlagBitsEXT_index_0[i]:_PresentGravityFlagBitsEXT_index_0[i+1]]
	case i == 4:
		return _PresentGravityFlagBitsEXT_name_1
	default:
		return "PresentGravityFlagBitsEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PRESENT_MODE_IMMEDIATE_KHR-0]
	_ = x[PRESENT_MODE_MAILBOX_KHR-1]
	_ = x[PRESENT_MODE_FIFO_KHR-2]
	_ = x[PRESENT_MODE_FIFO_RELAXED_KHR-3]
	_ = x[PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR-1000111000]
	_ = x[PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR-1000111001]
}

const (
	_PresentModeKHR_name_0 = "PRESENT_MODE_IMMEDIATE_KHRPRESENT_MODE_MAILBOX_KHRPRESENT_MODE_FIFO_KHRPRESENT_MODE_FIFO_RELAXED_KHR"
	_PresentModeKHR_name_1 = "PRESENT_MODE_SHARED_DEMAND_REFRESH_KHRPRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR"
)

var (
	_PresentModeKHR_index_0 = [...]uint8{0, 26, 50, 71, 100}
	_PresentModeKHR_index_1 = [...]uint8{0, 38, 80}
)

func (i PresentModeKHR) String() string {
	switch {
	case 0 <= i && i <= 3:
		return _PresentModeKHR_name_0[_PresentModeKHR_index_0[i]:_PresentModeKHR_index_0[i+1]]
	case 1000111000 <= i && i <= 1000111001:
		i -= 1000111000
		return _PresentModeKHR_name_1[_PresentModeKHR_index_1[i]:_PresentModeKHR_index_1[i+1]]
	default:
		return "PresentModeKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PRESENT_SCALING_ONE_TO_ONE_BIT_EXT-1]
	_ = x[PRESENT_SCALING_ASPECT_RATIO_STRETCH_BIT_EXT-2]
	_ = x[PRESENT_SCALING_STRETCH_BIT_EXT-4]
}

const (
	_PresentScalingFlagBitsEXT_name_0 = "PRESENT_SCALING_ONE_TO_ONE_BIT_EXTPRESENT_SCALING_ASPECT_RATIO_STRETCH_BIT_EXT"
	_PresentScalingFlagBitsEXT_name_1 = "PRESENT_SCALING_STRETCH_BIT_EXT"
)

var (
	_PresentScalingFlagBitsEXT_index_0 = [...]uint8{0, 34, 78}
)

func (i PresentScalingFlagBitsEXT) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _PresentScalingFlagBitsEXT_name_0[_PresentScalingFlagBitsEXT_index_0[i]:_PresentScalingFlagBitsEXT_index_0[i+1]]
	case i == 4:
		return _PresentScalingFlagBitsEXT_name_1
	default:
		return "PresentScalingFlagBitsEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PRIMITIVE_TOPOLOGY_POINT_LIST-0]
	_ = x[PRIMITIVE_TOPOLOGY_LINE_LIST-1]
	_ = x[PRIMITIVE_TOPOLOGY_LINE_STRIP-2]
	_ = x[PRIMITIVE_TOPOLOGY_TRIANGLE_LIST-3]
	_ = x[PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP-4]
	_ = x[PRIMITIVE_TOPOLOGY_TRIANGLE_FAN-5]
	_ = x[PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY-6]
	_ = x[PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY-7]
	_ = x[PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY-8]
	_ = x[PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY-9]
	_ = x[PRIMITIVE_TOPOLOGY_PATCH_LIST-10]
}

const _PrimitiveTopology_name = "PRIMITIVE_TOPOLOGY_POINT_LISTPRIMITIVE_TOPOLOGY_LINE_LISTPRIMITIVE_TOPOLOGY_LINE_STRIPPRIMITIVE_TOPOLOGY_TRIANGLE_LISTPRIMITIVE_TOPOLOGY_TRIANGLE_STRIPPRIMITIVE_TOPOLOGY_TRIANGLE_FANPRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCYPRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCYPRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCYPRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCYPRIMITIVE_TOPOLOGY_PATCH_LIST"

var _PrimitiveTopology_index = [...]uint16{0, 29, 57, 86, 118, 151, 182, 225, 269, 316, 364, 393}

func (i PrimitiveTopology) String() string {
	if i < 0 || i >= PrimitiveTopology(len(_PrimitiveTopology_index)-1) {
		return "PrimitiveTopology(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PrimitiveTopology_name[_PrimitiveTopology_index[i]:_PrimitiveTopology_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PROVOKING_VERTEX_MODE_FIRST_VERTEX_EXT-0]
	_ = x[PROVOKING_VERTEX_MODE_LAST_VERTEX_EXT-1]
}

const _ProvokingVertexModeEXT_name = "PROVOKING_VERTEX_MODE_FIRST_VERTEX_EXTPROVOKING_VERTEX_MODE_LAST_VERTEX_EXT"

var _ProvokingVertexModeEXT_index = [...]uint8{0, 38, 75}

func (i ProvokingVertexModeEXT) String() string {
	if i < 0 || i >= ProvokingVertexModeEXT(len(_ProvokingVertexModeEXT_index)-1) {
		return "ProvokingVertexModeEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ProvokingVertexModeEXT_name[_ProvokingVertexModeEXT_index[i]:_ProvokingVertexModeEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[QUERY_CONTROL_PRECISE_BIT-1]
}

const _QueryControlFlagBits_name = "QUERY_CONTROL_PRECISE_BIT"

var _QueryControlFlagBits_index = [...]uint8{0, 25}

func (i QueryControlFlagBits) String() string {
	i -= 1
	if i >= QueryControlFlagBits(len(_QueryControlFlagBits_index)-1) {
		return "QueryControlFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _QueryControlFlagBits_name[_QueryControlFlagBits_index[i]:_QueryControlFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT-1]
	_ = x[QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT-2]
	_ = x[QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT-1024]
	_ = x[QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT-4]
	_ = x[QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT-8]
	_ = x[QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT-16]
	_ = x[QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT-32]
	_ = x[QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT-64]
	_ = x[QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT-128]
	_ = x[QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT-256]
	_ = x[QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT-512]
	_ = x[QUERY_PIPELINE_STATISTIC_MESH_SHADER_INVOCATIONS_BIT_EXT-1000328000]
	_ = x[QUERY_PIPELINE_STATISTIC_TASK_SHADER_INVOCATIONS_BIT_EXT-1000328000]
	_ = x[QUERY_PIPELINE_STATISTIC_CLUSTER_CULLING_SHADER_INVOCATIONS_BIT_HUAWEI-1000404000]
}

const _QueryPipelineStatisticFlagBits_name = "QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BITQUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BITQUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BITQUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BITQUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BITQUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BITQUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BITQUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BITQUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BITQUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BITQUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BITQUERY_PIPELINE_STATISTIC_MESH_SHADER_INVOCATIONS_BIT_EXTQUERY_PIPELINE_STATISTIC_CLUSTER_CULLING_SHADER_INVOCATIONS_BIT_HUAWEI"

var _QueryPipelineStatisticFlagBits_map = map[QueryPipelineStatisticFlagBits]string{
	1:          _QueryPipelineStatisticFlagBits_name[0:52],
	2:          _QueryPipelineStatisticFlagBits_name[52:106],
	4:          _QueryPipelineStatisticFlagBits_name[106:160],
	8:          _QueryPipelineStatisticFlagBits_name[160:216],
	16:         _QueryPipelineStatisticFlagBits_name[216:271],
	32:         _QueryPipelineStatisticFlagBits_name[271:320],
	64:         _QueryPipelineStatisticFlagBits_name[320:368],
	128:        _QueryPipelineStatisticFlagBits_name[368:424],
	256:        _QueryPipelineStatisticFlagBits_name[424:488],
	512:        _QueryPipelineStatisticFlagBits_name[488:559],
	1024:       _QueryPipelineStatisticFlagBits_name[559:614],
	1000328000: _QueryPipelineStatisticFlagBits_name[614:670],
	1000404000: _QueryPipelineStatisticFlagBits_name[670:740],
}

func (i QueryPipelineStatisticFlagBits) String() string {
	if str, ok := _QueryPipelineStatisticFlagBits_map[i]; ok {
		return str
	}
	return "QueryPipelineStatisticFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[QUERY_POOL_SAMPLING_MODE_MANUAL_INTEL-0]
}

const _QueryPoolSamplingModeINTEL_name = "QUERY_POOL_SAMPLING_MODE_MANUAL_INTEL"

var _QueryPoolSamplingModeINTEL_index = [...]uint8{0, 37}

func (i QueryPoolSamplingModeINTEL) String() string {
	if i < 0 || i >= QueryPoolSamplingModeINTEL(len(_QueryPoolSamplingModeINTEL_index)-1) {
		return "QueryPoolSamplingModeINTEL(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _QueryPoolSamplingModeINTEL_name[_QueryPoolSamplingModeINTEL_index[i]:_QueryPoolSamplingModeINTEL_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[QUERY_RESULT_64_BIT-1]
	_ = x[QUERY_RESULT_WAIT_BIT-2]
	_ = x[QUERY_RESULT_WITH_AVAILABILITY_BIT-4]
	_ = x[QUERY_RESULT_PARTIAL_BIT-8]
	_ = x[QUERY_RESULT_WITH_STATUS_BIT_KHR-1000023000]
}

const (
	_QueryResultFlagBits_name_0 = "QUERY_RESULT_64_BITQUERY_RESULT_WAIT_BIT"
	_QueryResultFlagBits_name_1 = "QUERY_RESULT_WITH_AVAILABILITY_BIT"
	_QueryResultFlagBits_name_2 = "QUERY_RESULT_PARTIAL_BIT"
	_QueryResultFlagBits_name_3 = "QUERY_RESULT_WITH_STATUS_BIT_KHR"
)

var (
	_QueryResultFlagBits_index_0 = [...]uint8{0, 19, 40}
)

func (i QueryResultFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _QueryResultFlagBits_name_0[_QueryResultFlagBits_index_0[i]:_QueryResultFlagBits_index_0[i+1]]
	case i == 4:
		return _QueryResultFlagBits_name_1
	case i == 8:
		return _QueryResultFlagBits_name_2
	case i == 1000023000:
		return _QueryResultFlagBits_name_3
	default:
		return "QueryResultFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[QUERY_RESULT_STATUS_INSUFFICIENT_BITSTREAM_BUFFER_RANGE_KHR - -1000299000]
	_ = x[QUERY_RESULT_STATUS_ERROR_KHR - -1]
	_ = x[QUERY_RESULT_STATUS_NOT_READY_KHR-0]
	_ = x[QUERY_RESULT_STATUS_COMPLETE_KHR-1]
}

const (
	_QueryResultStatusKHR_name_0 = "QUERY_RESULT_STATUS_INSUFFICIENT_BITSTREAM_BUFFER_RANGE_KHR"
	_QueryResultStatusKHR_name_1 = "QUERY_RESULT_STATUS_ERROR_KHRQUERY_RESULT_STATUS_NOT_READY_KHRQUERY_RESULT_STATUS_COMPLETE_KHR"
)

var (
	_QueryResultStatusKHR_index_1 = [...]uint8{0, 29, 62, 94}
)

func (i QueryResultStatusKHR) String() string {
	switch {
	case i == -1000299000:
		return _QueryResultStatusKHR_name_0
	case -1 <= i && i <= 1:
		i -= -1
		return _QueryResultStatusKHR_name_1[_QueryResultStatusKHR_index_1[i]:_QueryResultStatusKHR_index_1[i+1]]
	default:
		return "QueryResultStatusKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[QUERY_TYPE_OCCLUSION-0]
	_ = x[QUERY_TYPE_PIPELINE_STATISTICS-1]
	_ = x[QUERY_TYPE_TIMESTAMP-2]
	_ = x[QUERY_TYPE_RESULT_STATUS_ONLY_KHR-1000023000]
	_ = x[QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT-1000028004]
	_ = x[QUERY_TYPE_PERFORMANCE_QUERY_KHR-1000116000]
	_ = x[QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR-1000150000]
	_ = x[QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR-1000150001]
	_ = x[QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV-1000165000]
	_ = x[QUERY_TYPE_PERFORMANCE_QUERY_INTEL-1000210000]
	_ = x[QUERY_TYPE_VIDEO_ENCODE_FEEDBACK_KHR-1000299000]
	_ = x[QUERY_TYPE_MESH_PRIMITIVES_GENERATED_EXT-1000328000]
	_ = x[QUERY_TYPE_PRIMITIVES_GENERATED_EXT-1000382000]
	_ = x[QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_BOTTOM_LEVEL_POINTERS_KHR-1000386000]
	_ = x[QUERY_TYPE_ACCELERATION_STRUCTURE_SIZE_KHR-1000386001]
	_ = x[QUERY_TYPE_MICROMAP_SERIALIZATION_SIZE_EXT-1000396000]
	_ = x[QUERY_TYPE_MICROMAP_COMPACTED_SIZE_EXT-1000396001]
}

const _QueryType_name = "QUERY_TYPE_OCCLUSIONQUERY_TYPE_PIPELINE_STATISTICSQUERY_TYPE_TIMESTAMPQUERY_TYPE_RESULT_STATUS_ONLY_KHRQUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXTQUERY_TYPE_PERFORMANCE_QUERY_KHRQUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHRQUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHRQUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NVQUERY_TYPE_PERFORMANCE_QUERY_INTELQUERY_TYPE_VIDEO_ENCODE_FEEDBACK_KHRQUERY_TYPE_MESH_PRIMITIVES_GENERATED_EXTQUERY_TYPE_PRIMITIVES_GENERATED_EXTQUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_BOTTOM_LEVEL_POINTERS_KHRQUERY_TYPE_ACCELERATION_STRUCTURE_SIZE_KHRQUERY_TYPE_MICROMAP_SERIALIZATION_SIZE_EXTQUERY_TYPE_MICROMAP_COMPACTED_SIZE_EXT"

var _QueryType_map = map[QueryType]string{
	0:          _QueryType_name[0:20],
	1:          _QueryType_name[20:50],
	2:          _QueryType_name[50:70],
	1000023000: _QueryType_name[70:103],
	1000028004: _QueryType_name[103:143],
	1000116000: _QueryType_name[143:175],
	1000150000: _QueryType_name[175:227],
	1000150001: _QueryType_name[227:283],
	1000165000: _QueryType_name[283:334],
	1000210000: _QueryType_name[334:368],
	1000299000: _QueryType_name[368:404],
	1000328000: _QueryType_name[404:444],
	1000382000: _QueryType_name[444:479],
	1000386000: _QueryType_name[479:552],
	1000386001: _QueryType_name[552:594],
	1000396000: _QueryType_name[594:636],
	1000396001: _QueryType_name[636:674],
}

func (i QueryType) String() string {
	if str, ok := _QueryType_map[i]; ok {
		return str
	}
	return "QueryType(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[QUEUE_GRAPHICS_BIT-1]
	_ = x[QUEUE_COMPUTE_BIT-2]
	_ = x[QUEUE_TRANSFER_BIT-4]
	_ = x[QUEUE_SPARSE_BINDING_BIT-8]
	_ = x[QUEUE_PROTECTED_BIT-16]
	_ = x[QUEUE_VIDEO_DECODE_BIT_KHR-1000024000]
	_ = x[QUEUE_VIDEO_ENCODE_BIT_KHR-1000299000]
	_ = x[QUEUE_OPTICAL_FLOW_BIT_NV-1000464000]
}

const (
	_QueueFlagBits_name_0 = "QUEUE_GRAPHICS_BITQUEUE_COMPUTE_BIT"
	_QueueFlagBits_name_1 = "QUEUE_TRANSFER_BIT"
	_QueueFlagBits_name_2 = "QUEUE_SPARSE_BINDING_BIT"
	_QueueFlagBits_name_3 = "QUEUE_PROTECTED_BIT"
	_QueueFlagBits_name_4 = "QUEUE_VIDEO_DECODE_BIT_KHR"
	_QueueFlagBits_name_5 = "QUEUE_VIDEO_ENCODE_BIT_KHR"
	_QueueFlagBits_name_6 = "QUEUE_OPTICAL_FLOW_BIT_NV"
)

var (
	_QueueFlagBits_index_0 = [...]uint8{0, 18, 35}
)

func (i QueueFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _QueueFlagBits_name_0[_QueueFlagBits_index_0[i]:_QueueFlagBits_index_0[i+1]]
	case i == 4:
		return _QueueFlagBits_name_1
	case i == 8:
		return _QueueFlagBits_name_2
	case i == 16:
		return _QueueFlagBits_name_3
	case i == 1000024000:
		return _QueueFlagBits_name_4
	case i == 1000299000:
		return _QueueFlagBits_name_5
	case i == 1000464000:
		return _QueueFlagBits_name_6
	default:
		return "QueueFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[QUEUE_GLOBAL_PRIORITY_LOW_KHR-128]
	_ = x[QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR-256]
	_ = x[QUEUE_GLOBAL_PRIORITY_HIGH_KHR-512]
	_ = x[QUEUE_GLOBAL_PRIORITY_REALTIME_KHR-1024]
	_ = x[QUEUE_GLOBAL_PRIORITY_HIGH_EXT-512]
	_ = x[QUEUE_GLOBAL_PRIORITY_LOW_EXT-128]
	_ = x[QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT-256]
	_ = x[QUEUE_GLOBAL_PRIORITY_REALTIME_EXT-1024]
}

const (
	_QueueGlobalPriorityKHR_name_0 = "QUEUE_GLOBAL_PRIORITY_LOW_KHR"
	_QueueGlobalPriorityKHR_name_1 = "QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR"
	_QueueGlobalPriorityKHR_name_2 = "QUEUE_GLOBAL_PRIORITY_HIGH_KHR"
	_QueueGlobalPriorityKHR_name_3 = "QUEUE_GLOBAL_PRIORITY_REALTIME_KHR"
)

func (i QueueGlobalPriorityKHR) String() string {
	switch {
	case i == 128:
		return _QueueGlobalPriorityKHR_name_0
	case i == 256:
		return _QueueGlobalPriorityKHR_name_1
	case i == 512:
		return _QueueGlobalPriorityKHR_name_2
	case i == 1024:
		return _QueueGlobalPriorityKHR_name_3
	default:
		return "QueueGlobalPriorityKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RASTERIZATION_ORDER_STRICT_AMD-0]
	_ = x[RASTERIZATION_ORDER_RELAXED_AMD-1]
}

const _RasterizationOrderAMD_name = "RASTERIZATION_ORDER_STRICT_AMDRASTERIZATION_ORDER_RELAXED_AMD"

var _RasterizationOrderAMD_index = [...]uint8{0, 30, 61}

func (i RasterizationOrderAMD) String() string {
	if i < 0 || i >= RasterizationOrderAMD(len(_RasterizationOrderAMD_index)-1) {
		return "RasterizationOrderAMD(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RasterizationOrderAMD_name[_RasterizationOrderAMD_index[i]:_RasterizationOrderAMD_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RAY_TRACING_INVOCATION_REORDER_MODE_NONE_NV-0]
	_ = x[RAY_TRACING_INVOCATION_REORDER_MODE_REORDER_NV-1]
}

const _RayTracingInvocationReorderModeNV_name = "RAY_TRACING_INVOCATION_REORDER_MODE_NONE_NVRAY_TRACING_INVOCATION_REORDER_MODE_REORDER_NV"

var _RayTracingInvocationReorderModeNV_index = [...]uint8{0, 43, 89}

func (i RayTracingInvocationReorderModeNV) String() string {
	if i < 0 || i >= RayTracingInvocationReorderModeNV(len(_RayTracingInvocationReorderModeNV_index)-1) {
		return "RayTracingInvocationReorderModeNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RayTracingInvocationReorderModeNV_name[_RayTracingInvocationReorderModeNV_index[i]:_RayTracingInvocationReorderModeNV_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR-0]
	_ = x[RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHR-1]
	_ = x[RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR-2]
	_ = x[RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV-0]
	_ = x[RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV-2]
	_ = x[RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV-1]
}

const _RayTracingShaderGroupTypeKHR_name = "RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHRRAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHRRAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR"

var _RayTracingShaderGroupTypeKHR_index = [...]uint8{0, 41, 94, 148}

func (i RayTracingShaderGroupTypeKHR) String() string {
	if i < 0 || i >= RayTracingShaderGroupTypeKHR(len(_RayTracingShaderGroupTypeKHR_index)-1) {
		return "RayTracingShaderGroupTypeKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _RayTracingShaderGroupTypeKHR_name[_RayTracingShaderGroupTypeKHR_index[i]:_RayTracingShaderGroupTypeKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM-1000282000]
}

const _RenderPassCreateFlagBits_name = "RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM"

var _RenderPassCreateFlagBits_index = [...]uint8{0, 37}

func (i RenderPassCreateFlagBits) String() string {
	i -= 1000282000
	if i >= RenderPassCreateFlagBits(len(_RenderPassCreateFlagBits_index)-1) {
		return "RenderPassCreateFlagBits(" + strconv.FormatInt(int64(i+1000282000), 10) + ")"
	}
	return _RenderPassCreateFlagBits_name[_RenderPassCreateFlagBits_index[i]:_RenderPassCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT-1]
	_ = x[RENDERING_SUSPENDING_BIT-2]
	_ = x[RENDERING_RESUMING_BIT-4]
	_ = x[RENDERING_CONTENTS_INLINE_BIT_EXT-1000451000]
	_ = x[RENDERING_ENABLE_LEGACY_DITHERING_BIT_EXT-1000465000]
	_ = x[RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR-1]
	_ = x[RENDERING_RESUMING_BIT_KHR-4]
	_ = x[RENDERING_SUSPENDING_BIT_KHR-2]
}

const (
	_RenderingFlagBits_name_0 = "RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BITRENDERING_SUSPENDING_BIT"
	_RenderingFlagBits_name_1 = "RENDERING_RESUMING_BIT"
	_RenderingFlagBits_name_2 = "RENDERING_CONTENTS_INLINE_BIT_EXT"
	_RenderingFlagBits_name_3 = "RENDERING_ENABLE_LEGACY_DITHERING_BIT_EXT"
)

var (
	_RenderingFlagBits_index_0 = [...]uint8{0, 48, 72}
)

func (i RenderingFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _RenderingFlagBits_name_0[_RenderingFlagBits_index_0[i]:_RenderingFlagBits_index_0[i+1]]
	case i == 4:
		return _RenderingFlagBits_name_1
	case i == 1000451000:
		return _RenderingFlagBits_name_2
	case i == 1000465000:
		return _RenderingFlagBits_name_3
	default:
		return "RenderingFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RESOLVE_MODE_NONE-0]
	_ = x[RESOLVE_MODE_SAMPLE_ZERO_BIT-1]
	_ = x[RESOLVE_MODE_AVERAGE_BIT-2]
	_ = x[RESOLVE_MODE_MIN_BIT-4]
	_ = x[RESOLVE_MODE_MAX_BIT-8]
	_ = x[RESOLVE_MODE_AVERAGE_BIT_KHR-2]
	_ = x[RESOLVE_MODE_MAX_BIT_KHR-8]
	_ = x[RESOLVE_MODE_MIN_BIT_KHR-4]
	_ = x[RESOLVE_MODE_NONE_KHR-0]
	_ = x[RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR-1]
}

const (
	_ResolveModeFlagBits_name_0 = "RESOLVE_MODE_NONERESOLVE_MODE_SAMPLE_ZERO_BITRESOLVE_MODE_AVERAGE_BIT"
	_ResolveModeFlagBits_name_1 = "RESOLVE_MODE_MIN_BIT"
	_ResolveModeFlagBits_name_2 = "RESOLVE_MODE_MAX_BIT"
)

var (
	_ResolveModeFlagBits_index_0 = [...]uint8{0, 17, 45, 69}
)

func (i ResolveModeFlagBits) String() string {
	switch {
	case i <= 2:
		return _ResolveModeFlagBits_name_0[_ResolveModeFlagBits_index_0[i]:_ResolveModeFlagBits_index_0[i+1]]
	case i == 4:
		return _ResolveModeFlagBits_name_1
	case i == 8:
		return _ResolveModeFlagBits_name_2
	default:
		return "ResolveModeFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ERROR_COMPRESSION_EXHAUSTED_EXT - -1000338000]
	_ = x[ERROR_INVALID_VIDEO_STD_PARAMETERS_KHR - -1000299000]
	_ = x[ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS - -1000257000]
	_ = x[ERROR_NOT_PERMITTED_KHR - -1000188001]
	_ = x[ERROR_FRAGMENTATION - -1000161000]
	_ = x[ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT - -1000158000]
	_ = x[ERROR_INVALID_EXTERNAL_HANDLE - -1000072003]
	_ = x[ERROR_OUT_OF_POOL_MEMORY - -1000069000]
	_ = x[ERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHR - -1000023005]
	_ = x[ERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHR - -1000023004]
	_ = x[ERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHR - -1000023003]
	_ = x[ERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHR - -1000023002]
	_ = x[ERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHR - -1000023001]
	_ = x[ERROR_IMAGE_USAGE_NOT_SUPPORTED_KHR - -1000023000]
	_ = x[ERROR_INVALID_SHADER_NV - -1000012000]
	_ = x[ERROR_VALIDATION_FAILED - -1000011001]
	_ = x[ERROR_INCOMPATIBLE_DISPLAY_KHR - -1000003001]
	_ = x[ERROR_OUT_OF_DATE_KHR - -1000001004]
	_ = x[ERROR_NATIVE_WINDOW_IN_USE_KHR - -1000000001]
	_ = x[ERROR_SURFACE_LOST_KHR - -1000000000]
	_ = x[ERROR_UNKNOWN - -13]
	_ = x[ERROR_FRAGMENTED_POOL - -12]
	_ = x[ERROR_FORMAT_NOT_SUPPORTED - -11]
	_ = x[ERROR_TOO_MANY_OBJECTS - -10]
	_ = x[ERROR_INCOMPATIBLE_DRIVER - -9]
	_ = x[ERROR_FEATURE_NOT_PRESENT - -8]
	_ = x[ERROR_EXTENSION_NOT_PRESENT - -7]
	_ = x[ERROR_LAYER_NOT_PRESENT - -6]
	_ = x[ERROR_MEMORY_MAP_FAILED - -5]
	_ = x[ERROR_DEVICE_LOST - -4]
	_ = x[ERROR_INITIALIZATION_FAILED - -3]
	_ = x[ERROR_OUT_OF_DEVICE_MEMORY - -2]
	_ = x[ERROR_OUT_OF_HOST_MEMORY - -1]
	_ = x[NOT_READY-1]
	_ = x[TIMEOUT-2]
	_ = x[EVENT_SET-3]
	_ = x[EVENT_RESET-4]
	_ = x[INCOMPLETE-5]
	_ = x[SUBOPTIMAL_KHR-1000001003]
	_ = x[THREAD_IDLE_KHR-1000268000]
	_ = x[THREAD_DONE_KHR-1000268001]
	_ = x[OPERATION_DEFERRED_KHR-1000268002]
	_ = x[OPERATION_NOT_DEFERRED_KHR-1000268003]
	_ = x[PIPELINE_COMPILE_REQUIRED-1000297000]
	_ = x[ERROR_INCOMPATIBLE_SHADER_BINARY_EXT-1000482000]
	_ = x[ERROR_FRAGMENTATION_EXT - -1000161000]
	_ = x[ERROR_INVALID_EXTERNAL_HANDLE_KHR - -1000072003]
	_ = x[ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR - -1000257000]
	_ = x[ERROR_INVALID_DEVICE_ADDRESS_EXT - -1000257000]
	_ = x[ERROR_NOT_PERMITTED_EXT - -1000188001]
	_ = x[ERROR_OUT_OF_POOL_MEMORY_KHR - -1000069000]
	_ = x[ERROR_VALIDATION_FAILED_EXT - -1000011001]
	_ = x[PIPELINE_COMPILE_REQUIRED_EXT-1000297000]
	_ = x[ERROR_PIPELINE_COMPILE_REQUIRED_EXT-1000297000]
	_ = x[ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT - -1000255000]
}

const _Result_name = "ERROR_COMPRESSION_EXHAUSTED_EXTERROR_INVALID_VIDEO_STD_PARAMETERS_KHRERROR_INVALID_OPAQUE_CAPTURE_ADDRESSERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXTERROR_NOT_PERMITTED_KHRERROR_FRAGMENTATIONERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXTERROR_INVALID_EXTERNAL_HANDLEERROR_OUT_OF_POOL_MEMORYERROR_VIDEO_STD_VERSION_NOT_SUPPORTED_KHRERROR_VIDEO_PROFILE_CODEC_NOT_SUPPORTED_KHRERROR_VIDEO_PROFILE_FORMAT_NOT_SUPPORTED_KHRERROR_VIDEO_PROFILE_OPERATION_NOT_SUPPORTED_KHRERROR_VIDEO_PICTURE_LAYOUT_NOT_SUPPORTED_KHRERROR_IMAGE_USAGE_NOT_SUPPORTED_KHRERROR_INVALID_SHADER_NVERROR_VALIDATION_FAILEDERROR_INCOMPATIBLE_DISPLAY_KHRERROR_OUT_OF_DATE_KHRERROR_NATIVE_WINDOW_IN_USE_KHRERROR_SURFACE_LOST_KHRERROR_UNKNOWNERROR_FRAGMENTED_POOLERROR_FORMAT_NOT_SUPPORTEDERROR_TOO_MANY_OBJECTSERROR_INCOMPATIBLE_DRIVERERROR_FEATURE_NOT_PRESENTERROR_EXTENSION_NOT_PRESENTERROR_LAYER_NOT_PRESENTERROR_MEMORY_MAP_FAILEDERROR_DEVICE_LOSTERROR_INITIALIZATION_FAILEDERROR_OUT_OF_DEVICE_MEMORYERROR_OUT_OF_HOST_MEMORYNOT_READYTIMEOUTEVENT_SETEVENT_RESETINCOMPLETESUBOPTIMAL_KHRTHREAD_IDLE_KHRTHREAD_DONE_KHROPERATION_DEFERRED_KHROPERATION_NOT_DEFERRED_KHRPIPELINE_COMPILE_REQUIREDERROR_INCOMPATIBLE_SHADER_BINARY_EXT"

var _Result_map = map[Result]string{
	-1000338000: _Result_name[0:31],
	-1000299000: _Result_name[31:69],
	-1000257000: _Result_name[69:105],
	-1000255000: _Result_name[105:146],
	-1000188001: _Result_name[146:169],
	-1000161000: _Result_name[169:188],
	-1000158000: _Result_name[188:238],
	-1000072003: _Result_name[238:267],
	-1000069000: _Result_name[267:291],
	-1000023005: _Result_name[291:332],
	-1000023004: _Result_name[332:375],
	-1000023003: _Result_name[375:419],
	-1000023002: _Result_name[419:466],
	-1000023001: _Result_name[466:510],
	-1000023000: _Result_name[510:545],
	-1000012000: _Result_name[545:568],
	-1000011001: _Result_name[568:591],
	-1000003001: _Result_name[591:621],
	-1000001004: _Result_name[621:642],
	-1000000001: _Result_name[642:672],
	-1000000000: _Result_name[672:694],
	-13:         _Result_name[694:707],
	-12:         _Result_name[707:728],
	-11:         _Result_name[728:754],
	-10:         _Result_name[754:776],
	-9:          _Result_name[776:801],
	-8:          _Result_name[801:826],
	-7:          _Result_name[826:853],
	-6:          _Result_name[853:876],
	-5:          _Result_name[876:899],
	-4:          _Result_name[899:916],
	-3:          _Result_name[916:943],
	-2:          _Result_name[943:969],
	-1:          _Result_name[969:993],
	1:           _Result_name[993:1002],
	2:           _Result_name[1002:1009],
	3:           _Result_name[1009:1018],
	4:           _Result_name[1018:1029],
	5:           _Result_name[1029:1039],
	1000001003:  _Result_name[1039:1053],
	1000268000:  _Result_name[1053:1068],
	1000268001:  _Result_name[1068:1083],
	1000268002:  _Result_name[1083:1105],
	1000268003:  _Result_name[1105:1131],
	1000297000:  _Result_name[1131:1156],
	1000482000:  _Result_name[1156:1192],
}

func (i Result) String() string {
	if str, ok := _Result_map[i]; ok {
		return str
	}
	return "Result(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SAMPLE_COUNT_1_BIT-1]
	_ = x[SAMPLE_COUNT_2_BIT-2]
	_ = x[SAMPLE_COUNT_4_BIT-4]
	_ = x[SAMPLE_COUNT_8_BIT-8]
	_ = x[SAMPLE_COUNT_16_BIT-16]
	_ = x[SAMPLE_COUNT_32_BIT-32]
	_ = x[SAMPLE_COUNT_64_BIT-64]
}

const (
	_SampleCountFlagBits_name_0 = "SAMPLE_COUNT_1_BITSAMPLE_COUNT_2_BIT"
	_SampleCountFlagBits_name_1 = "SAMPLE_COUNT_4_BIT"
	_SampleCountFlagBits_name_2 = "SAMPLE_COUNT_8_BIT"
	_SampleCountFlagBits_name_3 = "SAMPLE_COUNT_16_BIT"
	_SampleCountFlagBits_name_4 = "SAMPLE_COUNT_32_BIT"
	_SampleCountFlagBits_name_5 = "SAMPLE_COUNT_64_BIT"
)

var (
	_SampleCountFlagBits_index_0 = [...]uint8{0, 18, 36}
)

func (i SampleCountFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _SampleCountFlagBits_name_0[_SampleCountFlagBits_index_0[i]:_SampleCountFlagBits_index_0[i+1]]
	case i == 4:
		return _SampleCountFlagBits_name_1
	case i == 8:
		return _SampleCountFlagBits_name_2
	case i == 16:
		return _SampleCountFlagBits_name_3
	case i == 32:
		return _SampleCountFlagBits_name_4
	case i == 64:
		return _SampleCountFlagBits_name_5
	default:
		return "SampleCountFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SAMPLER_ADDRESS_MODE_REPEAT-0]
	_ = x[SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT-1]
	_ = x[SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE-2]
	_ = x[SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER-3]
	_ = x[SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE-1000014000]
	_ = x[SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR-1000014000]
}

const (
	_SamplerAddressMode_name_0 = "SAMPLER_ADDRESS_MODE_REPEATSAMPLER_ADDRESS_MODE_MIRRORED_REPEATSAMPLER_ADDRESS_MODE_CLAMP_TO_EDGESAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER"
	_SamplerAddressMode_name_1 = "SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE"
)

var (
	_SamplerAddressMode_index_0 = [...]uint8{0, 27, 63, 97, 133}
)

func (i SamplerAddressMode) String() string {
	switch {
	case 0 <= i && i <= 3:
		return _SamplerAddressMode_name_0[_SamplerAddressMode_index_0[i]:_SamplerAddressMode_index_0[i+1]]
	case i == 1000014000:
		return _SamplerAddressMode_name_1
	default:
		return "SamplerAddressMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT-1000218000]
	_ = x[SAMPLER_CREATE_SUBSAMPLED_BIT_EXT-1000218000]
	_ = x[SAMPLER_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT-1000316000]
	_ = x[SAMPLER_CREATE_NON_SEAMLESS_CUBE_MAP_BIT_EXT-1000422000]
	_ = x[SAMPLER_CREATE_IMAGE_PROCESSING_BIT_QCOM-1000440000]
}

const (
	_SamplerCreateFlagBits_name_0 = "SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT"
	_SamplerCreateFlagBits_name_1 = "SAMPLER_CREATE_DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT"
	_SamplerCreateFlagBits_name_2 = "SAMPLER_CREATE_NON_SEAMLESS_CUBE_MAP_BIT_EXT"
	_SamplerCreateFlagBits_name_3 = "SAMPLER_CREATE_IMAGE_PROCESSING_BIT_QCOM"
)

func (i SamplerCreateFlagBits) String() string {
	switch {
	case i == 1000218000:
		return _SamplerCreateFlagBits_name_0
	case i == 1000316000:
		return _SamplerCreateFlagBits_name_1
	case i == 1000422000:
		return _SamplerCreateFlagBits_name_2
	case i == 1000440000:
		return _SamplerCreateFlagBits_name_3
	default:
		return "SamplerCreateFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
