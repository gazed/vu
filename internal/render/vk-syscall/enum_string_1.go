// Code generated by "stringer -output=enum_string_1.go -type=CompositeAlphaFlagBitsKHR,ConditionalRenderingFlagBitsEXT,ConservativeRasterizationModeEXT,CopyAccelerationStructureModeKHR,CoverageModulationModeNV,CoverageReductionModeNV,CullModeFlagBits,DebugReportFlagBitsEXT,DebugReportObjectTypeEXT,DebugUtilsMessageSeverityFlagBitsEXT,DebugUtilsMessageTypeFlagBitsEXT,DependencyFlagBits,DescriptorBindingFlagBits,DescriptorPoolCreateFlagBits,DescriptorSetLayoutCreateFlagBits,DescriptorType,DescriptorUpdateTemplateType,DeviceDiagnosticsConfigFlagBitsNV,DeviceEventTypeEXT,DeviceGroupPresentModeFlagBitsKHR,DeviceMemoryReportEventTypeEXT,DeviceQueueCreateFlagBits,DiscardRectangleModeEXT,DisplayEventTypeEXT,DisplayPlaneAlphaFlagBitsKHR,DisplayPowerStateEXT,DriverId,DynamicState,EventCreateFlagBits,ExternalFenceFeatureFlagBits,ExternalFenceHandleTypeFlagBits"; DO NOT EDIT.

package vk

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[COMPOSITE_ALPHA_OPAQUE_BIT_KHR-1]
	_ = x[COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR-2]
	_ = x[COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR-4]
	_ = x[COMPOSITE_ALPHA_INHERIT_BIT_KHR-8]
}

const (
	_CompositeAlphaFlagBitsKHR_name_0 = "COMPOSITE_ALPHA_OPAQUE_BIT_KHRCOMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR"
	_CompositeAlphaFlagBitsKHR_name_1 = "COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR"
	_CompositeAlphaFlagBitsKHR_name_2 = "COMPOSITE_ALPHA_INHERIT_BIT_KHR"
)

var (
	_CompositeAlphaFlagBitsKHR_index_0 = [...]uint8{0, 30, 68}
)

func (i CompositeAlphaFlagBitsKHR) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _CompositeAlphaFlagBitsKHR_name_0[_CompositeAlphaFlagBitsKHR_index_0[i]:_CompositeAlphaFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _CompositeAlphaFlagBitsKHR_name_1
	case i == 8:
		return _CompositeAlphaFlagBitsKHR_name_2
	default:
		return "CompositeAlphaFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CONDITIONAL_RENDERING_INVERTED_BIT_EXT-1]
}

const _ConditionalRenderingFlagBitsEXT_name = "CONDITIONAL_RENDERING_INVERTED_BIT_EXT"

var _ConditionalRenderingFlagBitsEXT_index = [...]uint8{0, 38}

func (i ConditionalRenderingFlagBitsEXT) String() string {
	i -= 1
	if i >= ConditionalRenderingFlagBitsEXT(len(_ConditionalRenderingFlagBitsEXT_index)-1) {
		return "ConditionalRenderingFlagBitsEXT(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ConditionalRenderingFlagBitsEXT_name[_ConditionalRenderingFlagBitsEXT_index[i]:_ConditionalRenderingFlagBitsEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT-0]
	_ = x[CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT-1]
	_ = x[CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT-2]
}

const _ConservativeRasterizationModeEXT_name = "CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXTCONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXTCONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT"

var _ConservativeRasterizationModeEXT_index = [...]uint8{0, 44, 92, 141}

func (i ConservativeRasterizationModeEXT) String() string {
	if i < 0 || i >= ConservativeRasterizationModeEXT(len(_ConservativeRasterizationModeEXT_index)-1) {
		return "ConservativeRasterizationModeEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ConservativeRasterizationModeEXT_name[_ConservativeRasterizationModeEXT_index[i]:_ConservativeRasterizationModeEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHR-0]
	_ = x[COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHR-1]
	_ = x[COPY_ACCELERATION_STRUCTURE_MODE_SERIALIZE_KHR-2]
	_ = x[COPY_ACCELERATION_STRUCTURE_MODE_DESERIALIZE_KHR-3]
	_ = x[COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV-0]
	_ = x[COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV-1]
}

const _CopyAccelerationStructureModeKHR_name = "COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHRCOPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHRCOPY_ACCELERATION_STRUCTURE_MODE_SERIALIZE_KHRCOPY_ACCELERATION_STRUCTURE_MODE_DESERIALIZE_KHR"

var _CopyAccelerationStructureModeKHR_index = [...]uint8{0, 42, 86, 132, 180}

func (i CopyAccelerationStructureModeKHR) String() string {
	if i < 0 || i >= CopyAccelerationStructureModeKHR(len(_CopyAccelerationStructureModeKHR_index)-1) {
		return "CopyAccelerationStructureModeKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CopyAccelerationStructureModeKHR_name[_CopyAccelerationStructureModeKHR_index[i]:_CopyAccelerationStructureModeKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[COVERAGE_MODULATION_MODE_NONE_NV-0]
	_ = x[COVERAGE_MODULATION_MODE_RGB_NV-1]
	_ = x[COVERAGE_MODULATION_MODE_ALPHA_NV-2]
	_ = x[COVERAGE_MODULATION_MODE_RGBA_NV-3]
}

const _CoverageModulationModeNV_name = "COVERAGE_MODULATION_MODE_NONE_NVCOVERAGE_MODULATION_MODE_RGB_NVCOVERAGE_MODULATION_MODE_ALPHA_NVCOVERAGE_MODULATION_MODE_RGBA_NV"

var _CoverageModulationModeNV_index = [...]uint8{0, 32, 63, 96, 128}

func (i CoverageModulationModeNV) String() string {
	if i < 0 || i >= CoverageModulationModeNV(len(_CoverageModulationModeNV_index)-1) {
		return "CoverageModulationModeNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CoverageModulationModeNV_name[_CoverageModulationModeNV_index[i]:_CoverageModulationModeNV_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[COVERAGE_REDUCTION_MODE_MERGE_NV-0]
	_ = x[COVERAGE_REDUCTION_MODE_TRUNCATE_NV-1]
}

const _CoverageReductionModeNV_name = "COVERAGE_REDUCTION_MODE_MERGE_NVCOVERAGE_REDUCTION_MODE_TRUNCATE_NV"

var _CoverageReductionModeNV_index = [...]uint8{0, 32, 67}

func (i CoverageReductionModeNV) String() string {
	if i < 0 || i >= CoverageReductionModeNV(len(_CoverageReductionModeNV_index)-1) {
		return "CoverageReductionModeNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CoverageReductionModeNV_name[_CoverageReductionModeNV_index[i]:_CoverageReductionModeNV_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[CULL_MODE_NONE-0]
	_ = x[CULL_MODE_FRONT_AND_BACK-3]
	_ = x[CULL_MODE_FRONT_BIT-1]
	_ = x[CULL_MODE_BACK_BIT-2]
}

const _CullModeFlagBits_name = "CULL_MODE_NONECULL_MODE_FRONT_BITCULL_MODE_BACK_BITCULL_MODE_FRONT_AND_BACK"

var _CullModeFlagBits_index = [...]uint8{0, 14, 33, 51, 75}

func (i CullModeFlagBits) String() string {
	if i >= CullModeFlagBits(len(_CullModeFlagBits_index)-1) {
		return "CullModeFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CullModeFlagBits_name[_CullModeFlagBits_index[i]:_CullModeFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DEBUG_REPORT_INFORMATION_BIT_EXT-1]
	_ = x[DEBUG_REPORT_WARNING_BIT_EXT-2]
	_ = x[DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT-4]
	_ = x[DEBUG_REPORT_ERROR_BIT_EXT-8]
	_ = x[DEBUG_REPORT_DEBUG_BIT_EXT-16]
}

const (
	_DebugReportFlagBitsEXT_name_0 = "DEBUG_REPORT_INFORMATION_BIT_EXTDEBUG_REPORT_WARNING_BIT_EXT"
	_DebugReportFlagBitsEXT_name_1 = "DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT"
	_DebugReportFlagBitsEXT_name_2 = "DEBUG_REPORT_ERROR_BIT_EXT"
	_DebugReportFlagBitsEXT_name_3 = "DEBUG_REPORT_DEBUG_BIT_EXT"
)

var (
	_DebugReportFlagBitsEXT_index_0 = [...]uint8{0, 32, 60}
)

func (i DebugReportFlagBitsEXT) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DebugReportFlagBitsEXT_name_0[_DebugReportFlagBitsEXT_index_0[i]:_DebugReportFlagBitsEXT_index_0[i+1]]
	case i == 4:
		return _DebugReportFlagBitsEXT_name_1
	case i == 8:
		return _DebugReportFlagBitsEXT_name_2
	case i == 16:
		return _DebugReportFlagBitsEXT_name_3
	default:
		return "DebugReportFlagBitsEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT-0]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT-1]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT-2]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT-3]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT-4]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT-5]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT-6]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT-7]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT-8]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT-9]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT-10]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT-11]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT-12]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT-13]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT-14]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT-15]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT-16]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT-17]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT-18]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT-19]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT-20]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT-21]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT-22]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT-23]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT-24]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT-25]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT-26]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT-27]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT-28]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT-29]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT-30]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT-33]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT-1000011000]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_CU_MODULE_NVX_EXT-1000029000]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_CU_FUNCTION_NVX_EXT-1000029001]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR_EXT-1000150000]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT-1000156000]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT-1000165000]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT-28]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT-1000011000]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR_EXT-1000156000]
	_ = x[DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT-33]
}

const (
	_DebugReportObjectTypeEXT_name_0 = "DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXTDEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXTDEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXTDEBUG_REPORT_OBJECT_TYPE_DEVICE_EXTDEBUG_REPORT_OBJECT_TYPE_QUEUE_EXTDEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXTDEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXTDEBUG_REPORT_OBJECT_TYPE_FENCE_EXTDEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXTDEBUG_REPORT_OBJECT_TYPE_BUFFER_EXTDEBUG_REPORT_OBJECT_TYPE_IMAGE_EXTDEBUG_REPORT_OBJECT_TYPE_EVENT_EXTDEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXTDEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXTDEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXTDEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXTDEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXTDEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXTDEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXTDEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXTDEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXTDEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXTDEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXTDEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXTDEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXTDEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXTDEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXTDEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXTDEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXTDEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXTDEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT"
	_DebugReportObjectTypeEXT_name_1 = "DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT"
	_DebugReportObjectTypeEXT_name_2 = "DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT"
	_DebugReportObjectTypeEXT_name_3 = "DEBUG_REPORT_OBJECT_TYPE_CU_MODULE_NVX_EXTDEBUG_REPORT_OBJECT_TYPE_CU_FUNCTION_NVX_EXT"
	_DebugReportObjectTypeEXT_name_4 = "DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR_EXT"
	_DebugReportObjectTypeEXT_name_5 = "DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT"
	_DebugReportObjectTypeEXT_name_6 = "DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT"
)

var (
	_DebugReportObjectTypeEXT_index_0 = [...]uint16{0, 36, 73, 117, 152, 186, 224, 267, 301, 343, 378, 412, 446, 485, 525, 564, 606, 649, 693, 733, 770, 820, 856, 900, 943, 983, 1024, 1064, 1106, 1160, 1200, 1245}
	_DebugReportObjectTypeEXT_index_3 = [...]uint8{0, 42, 86}
)

func (i DebugReportObjectTypeEXT) String() string {
	switch {
	case 0 <= i && i <= 30:
		return _DebugReportObjectTypeEXT_name_0[_DebugReportObjectTypeEXT_index_0[i]:_DebugReportObjectTypeEXT_index_0[i+1]]
	case i == 33:
		return _DebugReportObjectTypeEXT_name_1
	case i == 1000011000:
		return _DebugReportObjectTypeEXT_name_2
	case 1000029000 <= i && i <= 1000029001:
		i -= 1000029000
		return _DebugReportObjectTypeEXT_name_3[_DebugReportObjectTypeEXT_index_3[i]:_DebugReportObjectTypeEXT_index_3[i+1]]
	case i == 1000150000:
		return _DebugReportObjectTypeEXT_name_4
	case i == 1000156000:
		return _DebugReportObjectTypeEXT_name_5
	case i == 1000165000:
		return _DebugReportObjectTypeEXT_name_6
	default:
		return "DebugReportObjectTypeEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT-1]
	_ = x[DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT-4096]
	_ = x[DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT-16]
	_ = x[DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT-256]
}

const (
	_DebugUtilsMessageSeverityFlagBitsEXT_name_0 = "DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT"
	_DebugUtilsMessageSeverityFlagBitsEXT_name_1 = "DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT"
	_DebugUtilsMessageSeverityFlagBitsEXT_name_2 = "DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT"
	_DebugUtilsMessageSeverityFlagBitsEXT_name_3 = "DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT"
)

func (i DebugUtilsMessageSeverityFlagBitsEXT) String() string {
	switch {
	case i == 1:
		return _DebugUtilsMessageSeverityFlagBitsEXT_name_0
	case i == 16:
		return _DebugUtilsMessageSeverityFlagBitsEXT_name_1
	case i == 256:
		return _DebugUtilsMessageSeverityFlagBitsEXT_name_2
	case i == 4096:
		return _DebugUtilsMessageSeverityFlagBitsEXT_name_3
	default:
		return "DebugUtilsMessageSeverityFlagBitsEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT-1]
	_ = x[DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT-2]
	_ = x[DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT-4]
}

const (
	_DebugUtilsMessageTypeFlagBitsEXT_name_0 = "DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXTDEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT"
	_DebugUtilsMessageTypeFlagBitsEXT_name_1 = "DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT"
)

var (
	_DebugUtilsMessageTypeFlagBitsEXT_index_0 = [...]uint8{0, 40, 83}
)

func (i DebugUtilsMessageTypeFlagBitsEXT) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DebugUtilsMessageTypeFlagBitsEXT_name_0[_DebugUtilsMessageTypeFlagBitsEXT_index_0[i]:_DebugUtilsMessageTypeFlagBitsEXT_index_0[i+1]]
	case i == 4:
		return _DebugUtilsMessageTypeFlagBitsEXT_name_1
	default:
		return "DebugUtilsMessageTypeFlagBitsEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DEPENDENCY_BY_REGION_BIT-1]
	_ = x[DEPENDENCY_VIEW_LOCAL_BIT-2]
	_ = x[DEPENDENCY_DEVICE_GROUP_BIT-4]
	_ = x[DEPENDENCY_DEVICE_GROUP_BIT_KHR-4]
	_ = x[DEPENDENCY_VIEW_LOCAL_BIT_KHR-2]
}

const (
	_DependencyFlagBits_name_0 = "DEPENDENCY_BY_REGION_BITDEPENDENCY_VIEW_LOCAL_BIT"
	_DependencyFlagBits_name_1 = "DEPENDENCY_DEVICE_GROUP_BIT"
)

var (
	_DependencyFlagBits_index_0 = [...]uint8{0, 24, 49}
)

func (i DependencyFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DependencyFlagBits_name_0[_DependencyFlagBits_index_0[i]:_DependencyFlagBits_index_0[i+1]]
	case i == 4:
		return _DependencyFlagBits_name_1
	default:
		return "DependencyFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT-1]
	_ = x[DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT-2]
	_ = x[DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT-4]
	_ = x[DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT-8]
	_ = x[DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT-4]
	_ = x[DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT-1]
	_ = x[DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT-2]
	_ = x[DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT-8]
}

const (
	_DescriptorBindingFlagBits_name_0 = "DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BITDESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT"
	_DescriptorBindingFlagBits_name_1 = "DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT"
	_DescriptorBindingFlagBits_name_2 = "DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT"
)

var (
	_DescriptorBindingFlagBits_index_0 = [...]uint8{0, 40, 90}
)

func (i DescriptorBindingFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DescriptorBindingFlagBits_name_0[_DescriptorBindingFlagBits_index_0[i]:_DescriptorBindingFlagBits_index_0[i+1]]
	case i == 4:
		return _DescriptorBindingFlagBits_name_1
	case i == 8:
		return _DescriptorBindingFlagBits_name_2
	default:
		return "DescriptorBindingFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT-1]
	_ = x[DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT-2]
	_ = x[DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_VALVE-1000351000]
	_ = x[DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT-2]
}

const (
	_DescriptorPoolCreateFlagBits_name_0 = "DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BITDESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT"
	_DescriptorPoolCreateFlagBits_name_1 = "DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_VALVE"
)

var (
	_DescriptorPoolCreateFlagBits_index_0 = [...]uint8{0, 46, 90}
)

func (i DescriptorPoolCreateFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DescriptorPoolCreateFlagBits_name_0[_DescriptorPoolCreateFlagBits_index_0[i]:_DescriptorPoolCreateFlagBits_index_0[i+1]]
	case i == 1000351000:
		return _DescriptorPoolCreateFlagBits_name_1
	default:
		return "DescriptorPoolCreateFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT-2]
	_ = x[DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR-1000080000]
	_ = x[DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_VALVE-1000351000]
	_ = x[DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT-2]
}

const (
	_DescriptorSetLayoutCreateFlagBits_name_0 = "DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT"
	_DescriptorSetLayoutCreateFlagBits_name_1 = "DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR"
	_DescriptorSetLayoutCreateFlagBits_name_2 = "DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_VALVE"
)

func (i DescriptorSetLayoutCreateFlagBits) String() string {
	switch {
	case i == 2:
		return _DescriptorSetLayoutCreateFlagBits_name_0
	case i == 1000080000:
		return _DescriptorSetLayoutCreateFlagBits_name_1
	case i == 1000351000:
		return _DescriptorSetLayoutCreateFlagBits_name_2
	default:
		return "DescriptorSetLayoutCreateFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DESCRIPTOR_TYPE_SAMPLER-0]
	_ = x[DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER-1]
	_ = x[DESCRIPTOR_TYPE_SAMPLED_IMAGE-2]
	_ = x[DESCRIPTOR_TYPE_STORAGE_IMAGE-3]
	_ = x[DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER-4]
	_ = x[DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER-5]
	_ = x[DESCRIPTOR_TYPE_UNIFORM_BUFFER-6]
	_ = x[DESCRIPTOR_TYPE_STORAGE_BUFFER-7]
	_ = x[DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC-8]
	_ = x[DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC-9]
	_ = x[DESCRIPTOR_TYPE_INPUT_ATTACHMENT-10]
	_ = x[DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT-1000138000]
	_ = x[DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR-1000150000]
	_ = x[DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV-1000165000]
	_ = x[DESCRIPTOR_TYPE_MUTABLE_VALVE-1000351000]
}

const (
	_DescriptorType_name_0 = "DESCRIPTOR_TYPE_SAMPLERDESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLERDESCRIPTOR_TYPE_SAMPLED_IMAGEDESCRIPTOR_TYPE_STORAGE_IMAGEDESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFERDESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFERDESCRIPTOR_TYPE_UNIFORM_BUFFERDESCRIPTOR_TYPE_STORAGE_BUFFERDESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMICDESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMICDESCRIPTOR_TYPE_INPUT_ATTACHMENT"
	_DescriptorType_name_1 = "DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT"
	_DescriptorType_name_2 = "DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR"
	_DescriptorType_name_3 = "DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV"
	_DescriptorType_name_4 = "DESCRIPTOR_TYPE_MUTABLE_VALVE"
)

var (
	_DescriptorType_index_0 = [...]uint16{0, 23, 61, 90, 119, 155, 191, 221, 251, 289, 327, 359}
)

func (i DescriptorType) String() string {
	switch {
	case 0 <= i && i <= 10:
		return _DescriptorType_name_0[_DescriptorType_index_0[i]:_DescriptorType_index_0[i+1]]
	case i == 1000138000:
		return _DescriptorType_name_1
	case i == 1000150000:
		return _DescriptorType_name_2
	case i == 1000165000:
		return _DescriptorType_name_3
	case i == 1000351000:
		return _DescriptorType_name_4
	default:
		return "DescriptorType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET-0]
	_ = x[DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR-1000085000]
	_ = x[DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR-0]
}

const (
	_DescriptorUpdateTemplateType_name_0 = "DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET"
	_DescriptorUpdateTemplateType_name_1 = "DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR"
)

func (i DescriptorUpdateTemplateType) String() string {
	switch {
	case i == 0:
		return _DescriptorUpdateTemplateType_name_0
	case i == 1000085000:
		return _DescriptorUpdateTemplateType_name_1
	default:
		return "DescriptorUpdateTemplateType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_DEBUG_INFO_BIT_NV-1]
	_ = x[DEVICE_DIAGNOSTICS_CONFIG_ENABLE_RESOURCE_TRACKING_BIT_NV-2]
	_ = x[DEVICE_DIAGNOSTICS_CONFIG_ENABLE_AUTOMATIC_CHECKPOINTS_BIT_NV-4]
}

const (
	_DeviceDiagnosticsConfigFlagBitsNV_name_0 = "DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_DEBUG_INFO_BIT_NVDEVICE_DIAGNOSTICS_CONFIG_ENABLE_RESOURCE_TRACKING_BIT_NV"
	_DeviceDiagnosticsConfigFlagBitsNV_name_1 = "DEVICE_DIAGNOSTICS_CONFIG_ENABLE_AUTOMATIC_CHECKPOINTS_BIT_NV"
)

var (
	_DeviceDiagnosticsConfigFlagBitsNV_index_0 = [...]uint8{0, 57, 114}
)

func (i DeviceDiagnosticsConfigFlagBitsNV) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DeviceDiagnosticsConfigFlagBitsNV_name_0[_DeviceDiagnosticsConfigFlagBitsNV_index_0[i]:_DeviceDiagnosticsConfigFlagBitsNV_index_0[i+1]]
	case i == 4:
		return _DeviceDiagnosticsConfigFlagBitsNV_name_1
	default:
		return "DeviceDiagnosticsConfigFlagBitsNV(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT-0]
}

const _DeviceEventTypeEXT_name = "DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT"

var _DeviceEventTypeEXT_index = [...]uint8{0, 37}

func (i DeviceEventTypeEXT) String() string {
	if i < 0 || i >= DeviceEventTypeEXT(len(_DeviceEventTypeEXT_index)-1) {
		return "DeviceEventTypeEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DeviceEventTypeEXT_name[_DeviceEventTypeEXT_index[i]:_DeviceEventTypeEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR-1]
	_ = x[DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR-2]
	_ = x[DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR-4]
	_ = x[DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR-8]
}

const (
	_DeviceGroupPresentModeFlagBitsKHR_name_0 = "DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHRDEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR"
	_DeviceGroupPresentModeFlagBitsKHR_name_1 = "DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR"
	_DeviceGroupPresentModeFlagBitsKHR_name_2 = "DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR"
)

var (
	_DeviceGroupPresentModeFlagBitsKHR_index_0 = [...]uint8{0, 39, 79}
)

func (i DeviceGroupPresentModeFlagBitsKHR) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DeviceGroupPresentModeFlagBitsKHR_name_0[_DeviceGroupPresentModeFlagBitsKHR_index_0[i]:_DeviceGroupPresentModeFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _DeviceGroupPresentModeFlagBitsKHR_name_1
	case i == 8:
		return _DeviceGroupPresentModeFlagBitsKHR_name_2
	default:
		return "DeviceGroupPresentModeFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATE_EXT-0]
	_ = x[DEVICE_MEMORY_REPORT_EVENT_TYPE_FREE_EXT-1]
	_ = x[DEVICE_MEMORY_REPORT_EVENT_TYPE_IMPORT_EXT-2]
	_ = x[DEVICE_MEMORY_REPORT_EVENT_TYPE_UNIMPORT_EXT-3]
	_ = x[DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATION_FAILED_EXT-4]
}

const _DeviceMemoryReportEventTypeEXT_name = "DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATE_EXTDEVICE_MEMORY_REPORT_EVENT_TYPE_FREE_EXTDEVICE_MEMORY_REPORT_EVENT_TYPE_IMPORT_EXTDEVICE_MEMORY_REPORT_EVENT_TYPE_UNIMPORT_EXTDEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATION_FAILED_EXT"

var _DeviceMemoryReportEventTypeEXT_index = [...]uint8{0, 44, 84, 126, 170, 223}

func (i DeviceMemoryReportEventTypeEXT) String() string {
	if i < 0 || i >= DeviceMemoryReportEventTypeEXT(len(_DeviceMemoryReportEventTypeEXT_index)-1) {
		return "DeviceMemoryReportEventTypeEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DeviceMemoryReportEventTypeEXT_name[_DeviceMemoryReportEventTypeEXT_index[i]:_DeviceMemoryReportEventTypeEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DEVICE_QUEUE_CREATE_PROTECTED_BIT-1]
}

const _DeviceQueueCreateFlagBits_name = "DEVICE_QUEUE_CREATE_PROTECTED_BIT"

var _DeviceQueueCreateFlagBits_index = [...]uint8{0, 33}

func (i DeviceQueueCreateFlagBits) String() string {
	i -= 1
	if i >= DeviceQueueCreateFlagBits(len(_DeviceQueueCreateFlagBits_index)-1) {
		return "DeviceQueueCreateFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DeviceQueueCreateFlagBits_name[_DeviceQueueCreateFlagBits_index[i]:_DeviceQueueCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT-0]
	_ = x[DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT-1]
}

const _DiscardRectangleModeEXT_name = "DISCARD_RECTANGLE_MODE_INCLUSIVE_EXTDISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT"

var _DiscardRectangleModeEXT_index = [...]uint8{0, 36, 72}

func (i DiscardRectangleModeEXT) String() string {
	if i < 0 || i >= DiscardRectangleModeEXT(len(_DiscardRectangleModeEXT_index)-1) {
		return "DiscardRectangleModeEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DiscardRectangleModeEXT_name[_DiscardRectangleModeEXT_index[i]:_DiscardRectangleModeEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT-0]
}

const _DisplayEventTypeEXT_name = "DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT"

var _DisplayEventTypeEXT_index = [...]uint8{0, 38}

func (i DisplayEventTypeEXT) String() string {
	if i < 0 || i >= DisplayEventTypeEXT(len(_DisplayEventTypeEXT_index)-1) {
		return "DisplayEventTypeEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DisplayEventTypeEXT_name[_DisplayEventTypeEXT_index[i]:_DisplayEventTypeEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR-1]
	_ = x[DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR-2]
	_ = x[DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR-4]
	_ = x[DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR-8]
}

const (
	_DisplayPlaneAlphaFlagBitsKHR_name_0 = "DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHRDISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR"
	_DisplayPlaneAlphaFlagBitsKHR_name_1 = "DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR"
	_DisplayPlaneAlphaFlagBitsKHR_name_2 = "DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR"
)

var (
	_DisplayPlaneAlphaFlagBitsKHR_index_0 = [...]uint8{0, 34, 68}
)

func (i DisplayPlaneAlphaFlagBitsKHR) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _DisplayPlaneAlphaFlagBitsKHR_name_0[_DisplayPlaneAlphaFlagBitsKHR_index_0[i]:_DisplayPlaneAlphaFlagBitsKHR_index_0[i+1]]
	case i == 4:
		return _DisplayPlaneAlphaFlagBitsKHR_name_1
	case i == 8:
		return _DisplayPlaneAlphaFlagBitsKHR_name_2
	default:
		return "DisplayPlaneAlphaFlagBitsKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DISPLAY_POWER_STATE_OFF_EXT-0]
	_ = x[DISPLAY_POWER_STATE_SUSPEND_EXT-1]
	_ = x[DISPLAY_POWER_STATE_ON_EXT-2]
}

const _DisplayPowerStateEXT_name = "DISPLAY_POWER_STATE_OFF_EXTDISPLAY_POWER_STATE_SUSPEND_EXTDISPLAY_POWER_STATE_ON_EXT"

var _DisplayPowerStateEXT_index = [...]uint8{0, 27, 58, 84}

func (i DisplayPowerStateEXT) String() string {
	if i < 0 || i >= DisplayPowerStateEXT(len(_DisplayPowerStateEXT_index)-1) {
		return "DisplayPowerStateEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _DisplayPowerStateEXT_name[_DisplayPowerStateEXT_index[i]:_DisplayPowerStateEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DRIVER_ID_AMD_PROPRIETARY-1]
	_ = x[DRIVER_ID_AMD_OPEN_SOURCE-2]
	_ = x[DRIVER_ID_MESA_RADV-3]
	_ = x[DRIVER_ID_NVIDIA_PROPRIETARY-4]
	_ = x[DRIVER_ID_INTEL_PROPRIETARY_WINDOWS-5]
	_ = x[DRIVER_ID_INTEL_OPEN_SOURCE_MESA-6]
	_ = x[DRIVER_ID_IMAGINATION_PROPRIETARY-7]
	_ = x[DRIVER_ID_QUALCOMM_PROPRIETARY-8]
	_ = x[DRIVER_ID_ARM_PROPRIETARY-9]
	_ = x[DRIVER_ID_GOOGLE_SWIFTSHADER-10]
	_ = x[DRIVER_ID_GGP_PROPRIETARY-11]
	_ = x[DRIVER_ID_BROADCOM_PROPRIETARY-12]
	_ = x[DRIVER_ID_MESA_LLVMPIPE-13]
	_ = x[DRIVER_ID_MOLTENVK-14]
	_ = x[DRIVER_ID_COREAVI_PROPRIETARY-15]
	_ = x[DRIVER_ID_JUICE_PROPRIETARY-16]
	_ = x[DRIVER_ID_VERISILICON_PROPRIETARY-17]
	_ = x[DRIVER_ID_MESA_TURNIP-18]
	_ = x[DRIVER_ID_MESA_V3DV-19]
	_ = x[DRIVER_ID_MESA_PANVK-20]
	_ = x[DRIVER_ID_SAMSUNG_PROPRIETARY-21]
	_ = x[DRIVER_ID_AMD_OPEN_SOURCE_KHR-2]
	_ = x[DRIVER_ID_AMD_PROPRIETARY_KHR-1]
	_ = x[DRIVER_ID_ARM_PROPRIETARY_KHR-9]
	_ = x[DRIVER_ID_BROADCOM_PROPRIETARY_KHR-12]
	_ = x[DRIVER_ID_GGP_PROPRIETARY_KHR-11]
	_ = x[DRIVER_ID_GOOGLE_SWIFTSHADER_KHR-10]
	_ = x[DRIVER_ID_IMAGINATION_PROPRIETARY_KHR-7]
	_ = x[DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR-6]
	_ = x[DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR-5]
	_ = x[DRIVER_ID_MESA_RADV_KHR-3]
	_ = x[DRIVER_ID_NVIDIA_PROPRIETARY_KHR-4]
	_ = x[DRIVER_ID_QUALCOMM_PROPRIETARY_KHR-8]
}

const _DriverId_name = "DRIVER_ID_AMD_PROPRIETARYDRIVER_ID_AMD_OPEN_SOURCEDRIVER_ID_MESA_RADVDRIVER_ID_NVIDIA_PROPRIETARYDRIVER_ID_INTEL_PROPRIETARY_WINDOWSDRIVER_ID_INTEL_OPEN_SOURCE_MESADRIVER_ID_IMAGINATION_PROPRIETARYDRIVER_ID_QUALCOMM_PROPRIETARYDRIVER_ID_ARM_PROPRIETARYDRIVER_ID_GOOGLE_SWIFTSHADERDRIVER_ID_GGP_PROPRIETARYDRIVER_ID_BROADCOM_PROPRIETARYDRIVER_ID_MESA_LLVMPIPEDRIVER_ID_MOLTENVKDRIVER_ID_COREAVI_PROPRIETARYDRIVER_ID_JUICE_PROPRIETARYDRIVER_ID_VERISILICON_PROPRIETARYDRIVER_ID_MESA_TURNIPDRIVER_ID_MESA_V3DVDRIVER_ID_MESA_PANVKDRIVER_ID_SAMSUNG_PROPRIETARY"

var _DriverId_index = [...]uint16{0, 25, 50, 69, 97, 132, 164, 197, 227, 252, 280, 305, 335, 358, 376, 405, 432, 465, 486, 505, 525, 554}

func (i DriverId) String() string {
	i -= 1
	if i < 0 || i >= DriverId(len(_DriverId_index)-1) {
		return "DriverId(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _DriverId_name[_DriverId_index[i]:_DriverId_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[DYNAMIC_STATE_VIEWPORT-0]
	_ = x[DYNAMIC_STATE_SCISSOR-1]
	_ = x[DYNAMIC_STATE_LINE_WIDTH-2]
	_ = x[DYNAMIC_STATE_DEPTH_BIAS-3]
	_ = x[DYNAMIC_STATE_BLEND_CONSTANTS-4]
	_ = x[DYNAMIC_STATE_DEPTH_BOUNDS-5]
	_ = x[DYNAMIC_STATE_STENCIL_COMPARE_MASK-6]
	_ = x[DYNAMIC_STATE_STENCIL_WRITE_MASK-7]
	_ = x[DYNAMIC_STATE_STENCIL_REFERENCE-8]
	_ = x[DYNAMIC_STATE_VIEWPORT_W_SCALING_NV-1000087000]
	_ = x[DYNAMIC_STATE_DISCARD_RECTANGLE_EXT-1000099000]
	_ = x[DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT-1000143000]
	_ = x[DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV-1000164004]
	_ = x[DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV-1000164006]
	_ = x[DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV-1000205001]
	_ = x[DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR-1000226000]
	_ = x[DYNAMIC_STATE_LINE_STIPPLE_EXT-1000259000]
	_ = x[DYNAMIC_STATE_CULL_MODE_EXT-1000267000]
	_ = x[DYNAMIC_STATE_FRONT_FACE_EXT-1000267001]
	_ = x[DYNAMIC_STATE_PRIMITIVE_TOPOLOGY_EXT-1000267002]
	_ = x[DYNAMIC_STATE_VIEWPORT_WITH_COUNT_EXT-1000267003]
	_ = x[DYNAMIC_STATE_SCISSOR_WITH_COUNT_EXT-1000267004]
	_ = x[DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT-1000267005]
	_ = x[DYNAMIC_STATE_DEPTH_TEST_ENABLE_EXT-1000267006]
	_ = x[DYNAMIC_STATE_DEPTH_WRITE_ENABLE_EXT-1000267007]
	_ = x[DYNAMIC_STATE_DEPTH_COMPARE_OP_EXT-1000267008]
	_ = x[DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE_EXT-1000267009]
	_ = x[DYNAMIC_STATE_STENCIL_TEST_ENABLE_EXT-1000267010]
	_ = x[DYNAMIC_STATE_STENCIL_OP_EXT-1000267011]
	_ = x[DYNAMIC_STATE_RAY_TRACING_PIPELINE_STACK_SIZE_KHR-1000347000]
	_ = x[DYNAMIC_STATE_VERTEX_INPUT_EXT-1000352000]
	_ = x[DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT-1000377000]
	_ = x[DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE_EXT-1000377001]
	_ = x[DYNAMIC_STATE_DEPTH_BIAS_ENABLE_EXT-1000377002]
	_ = x[DYNAMIC_STATE_LOGIC_OP_EXT-1000377003]
	_ = x[DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE_EXT-1000377004]
	_ = x[DYNAMIC_STATE_COLOR_WRITE_ENABLE_EXT-1000381000]
}

const _DynamicState_name = "DYNAMIC_STATE_VIEWPORTDYNAMIC_STATE_SCISSORDYNAMIC_STATE_LINE_WIDTHDYNAMIC_STATE_DEPTH_BIASDYNAMIC_STATE_BLEND_CONSTANTSDYNAMIC_STATE_DEPTH_BOUNDSDYNAMIC_STATE_STENCIL_COMPARE_MASKDYNAMIC_STATE_STENCIL_WRITE_MASKDYNAMIC_STATE_STENCIL_REFERENCEDYNAMIC_STATE_VIEWPORT_W_SCALING_NVDYNAMIC_STATE_DISCARD_RECTANGLE_EXTDYNAMIC_STATE_SAMPLE_LOCATIONS_EXTDYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NVDYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NVDYNAMIC_STATE_EXCLUSIVE_SCISSOR_NVDYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHRDYNAMIC_STATE_LINE_STIPPLE_EXTDYNAMIC_STATE_CULL_MODE_EXTDYNAMIC_STATE_FRONT_FACE_EXTDYNAMIC_STATE_PRIMITIVE_TOPOLOGY_EXTDYNAMIC_STATE_VIEWPORT_WITH_COUNT_EXTDYNAMIC_STATE_SCISSOR_WITH_COUNT_EXTDYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXTDYNAMIC_STATE_DEPTH_TEST_ENABLE_EXTDYNAMIC_STATE_DEPTH_WRITE_ENABLE_EXTDYNAMIC_STATE_DEPTH_COMPARE_OP_EXTDYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE_EXTDYNAMIC_STATE_STENCIL_TEST_ENABLE_EXTDYNAMIC_STATE_STENCIL_OP_EXTDYNAMIC_STATE_RAY_TRACING_PIPELINE_STACK_SIZE_KHRDYNAMIC_STATE_VERTEX_INPUT_EXTDYNAMIC_STATE_PATCH_CONTROL_POINTS_EXTDYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE_EXTDYNAMIC_STATE_DEPTH_BIAS_ENABLE_EXTDYNAMIC_STATE_LOGIC_OP_EXTDYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE_EXTDYNAMIC_STATE_COLOR_WRITE_ENABLE_EXT"

var _DynamicState_map = map[DynamicState]string{
	0:          _DynamicState_name[0:22],
	1:          _DynamicState_name[22:43],
	2:          _DynamicState_name[43:67],
	3:          _DynamicState_name[67:91],
	4:          _DynamicState_name[91:120],
	5:          _DynamicState_name[120:146],
	6:          _DynamicState_name[146:180],
	7:          _DynamicState_name[180:212],
	8:          _DynamicState_name[212:243],
	1000087000: _DynamicState_name[243:278],
	1000099000: _DynamicState_name[278:313],
	1000143000: _DynamicState_name[313:347],
	1000164004: _DynamicState_name[347:393],
	1000164006: _DynamicState_name[393:438],
	1000205001: _DynamicState_name[438:472],
	1000226000: _DynamicState_name[472:511],
	1000259000: _DynamicState_name[511:541],
	1000267000: _DynamicState_name[541:568],
	1000267001: _DynamicState_name[568:596],
	1000267002: _DynamicState_name[596:632],
	1000267003: _DynamicState_name[632:669],
	1000267004: _DynamicState_name[669:705],
	1000267005: _DynamicState_name[705:750],
	1000267006: _DynamicState_name[750:785],
	1000267007: _DynamicState_name[785:821],
	1000267008: _DynamicState_name[821:855],
	1000267009: _DynamicState_name[855:897],
	1000267010: _DynamicState_name[897:934],
	1000267011: _DynamicState_name[934:962],
	1000347000: _DynamicState_name[962:1011],
	1000352000: _DynamicState_name[1011:1041],
	1000377000: _DynamicState_name[1041:1079],
	1000377001: _DynamicState_name[1079:1122],
	1000377002: _DynamicState_name[1122:1157],
	1000377003: _DynamicState_name[1157:1183],
	1000377004: _DynamicState_name[1183:1225],
	1000381000: _DynamicState_name[1225:1261],
}

func (i DynamicState) String() string {
	if str, ok := _DynamicState_map[i]; ok {
		return str
	}
	return "DynamicState(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EVENT_CREATE_DEVICE_ONLY_BIT_KHR-1000314000]
}

const _EventCreateFlagBits_name = "EVENT_CREATE_DEVICE_ONLY_BIT_KHR"

var _EventCreateFlagBits_index = [...]uint8{0, 32}

func (i EventCreateFlagBits) String() string {
	i -= 1000314000
	if i >= EventCreateFlagBits(len(_EventCreateFlagBits_index)-1) {
		return "EventCreateFlagBits(" + strconv.FormatInt(int64(i+1000314000), 10) + ")"
	}
	return _EventCreateFlagBits_name[_EventCreateFlagBits_index[i]:_EventCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT-1]
	_ = x[EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT-2]
	_ = x[EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR-1]
	_ = x[EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR-2]
}

const _ExternalFenceFeatureFlagBits_name = "EXTERNAL_FENCE_FEATURE_EXPORTABLE_BITEXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT"

var _ExternalFenceFeatureFlagBits_index = [...]uint8{0, 37, 74}

func (i ExternalFenceFeatureFlagBits) String() string {
	i -= 1
	if i >= ExternalFenceFeatureFlagBits(len(_ExternalFenceFeatureFlagBits_index)-1) {
		return "ExternalFenceFeatureFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ExternalFenceFeatureFlagBits_name[_ExternalFenceFeatureFlagBits_index[i]:_ExternalFenceFeatureFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT-1]
	_ = x[EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT-2]
	_ = x[EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT-4]
	_ = x[EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT-8]
	_ = x[EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR-1]
	_ = x[EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR-2]
	_ = x[EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR-4]
	_ = x[EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR-8]
}

const (
	_ExternalFenceHandleTypeFlagBits_name_0 = "EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BITEXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT"
	_ExternalFenceHandleTypeFlagBits_name_1 = "EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT"
	_ExternalFenceHandleTypeFlagBits_name_2 = "EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT"
)

var (
	_ExternalFenceHandleTypeFlagBits_index_0 = [...]uint8{0, 40, 83}
)

func (i ExternalFenceHandleTypeFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _ExternalFenceHandleTypeFlagBits_name_0[_ExternalFenceHandleTypeFlagBits_index_0[i]:_ExternalFenceHandleTypeFlagBits_index_0[i+1]]
	case i == 4:
		return _ExternalFenceHandleTypeFlagBits_name_1
	case i == 8:
		return _ExternalFenceHandleTypeFlagBits_name_2
	default:
		return "ExternalFenceHandleTypeFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
