// Code generated by "stringer -output=enum_string_3.go -type=IndirectStateFlagBitsNV,InternalAllocationType,LineRasterizationModeEXT,LogicOp,MemoryAllocateFlagBits,MemoryHeapFlagBits,MemoryOverallocationBehaviorAMD,MemoryPropertyFlagBits,ObjectType,PeerMemoryFeatureFlagBits,PerformanceConfigurationTypeINTEL,PerformanceCounterDescriptionFlagBitsKHR,PerformanceCounterScopeKHR,PerformanceCounterStorageKHR,PerformanceCounterUnitKHR,PerformanceOverrideTypeINTEL,PerformanceParameterTypeINTEL,PerformanceValueTypeINTEL,PhysicalDeviceType,PipelineBindPoint,PipelineCacheCreateFlagBits,PipelineCacheHeaderVersion,PipelineColorBlendStateCreateFlagBits,PipelineCreateFlagBits,PipelineCreationFeedbackFlagBitsEXT,PipelineDepthStencilStateCreateFlagBits,PipelineExecutableStatisticFormatKHR,PipelineShaderStageCreateFlagBits,PipelineStageFlagBits,PipelineStageFlagBits2KHR,PointClippingBehavior"; DO NOT EDIT.

package vk

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INDIRECT_STATE_FLAG_FRONTFACE_BIT_NV-1]
}

const _IndirectStateFlagBitsNV_name = "INDIRECT_STATE_FLAG_FRONTFACE_BIT_NV"

var _IndirectStateFlagBitsNV_index = [...]uint8{0, 36}

func (i IndirectStateFlagBitsNV) String() string {
	i -= 1
	if i >= IndirectStateFlagBitsNV(len(_IndirectStateFlagBitsNV_index)-1) {
		return "IndirectStateFlagBitsNV(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _IndirectStateFlagBitsNV_name[_IndirectStateFlagBitsNV_index[i]:_IndirectStateFlagBitsNV_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INTERNAL_ALLOCATION_TYPE_EXECUTABLE-0]
}

const _InternalAllocationType_name = "INTERNAL_ALLOCATION_TYPE_EXECUTABLE"

var _InternalAllocationType_index = [...]uint8{0, 35}

func (i InternalAllocationType) String() string {
	if i < 0 || i >= InternalAllocationType(len(_InternalAllocationType_index)-1) {
		return "InternalAllocationType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _InternalAllocationType_name[_InternalAllocationType_index[i]:_InternalAllocationType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LINE_RASTERIZATION_MODE_DEFAULT_EXT-0]
	_ = x[LINE_RASTERIZATION_MODE_RECTANGULAR_EXT-1]
	_ = x[LINE_RASTERIZATION_MODE_BRESENHAM_EXT-2]
	_ = x[LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT-3]
}

const _LineRasterizationModeEXT_name = "LINE_RASTERIZATION_MODE_DEFAULT_EXTLINE_RASTERIZATION_MODE_RECTANGULAR_EXTLINE_RASTERIZATION_MODE_BRESENHAM_EXTLINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT"

var _LineRasterizationModeEXT_index = [...]uint8{0, 35, 74, 111, 157}

func (i LineRasterizationModeEXT) String() string {
	if i < 0 || i >= LineRasterizationModeEXT(len(_LineRasterizationModeEXT_index)-1) {
		return "LineRasterizationModeEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LineRasterizationModeEXT_name[_LineRasterizationModeEXT_index[i]:_LineRasterizationModeEXT_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[LOGIC_OP_CLEAR-0]
	_ = x[LOGIC_OP_AND-1]
	_ = x[LOGIC_OP_AND_REVERSE-2]
	_ = x[LOGIC_OP_COPY-3]
	_ = x[LOGIC_OP_AND_INVERTED-4]
	_ = x[LOGIC_OP_NO_OP-5]
	_ = x[LOGIC_OP_XOR-6]
	_ = x[LOGIC_OP_OR-7]
	_ = x[LOGIC_OP_NOR-8]
	_ = x[LOGIC_OP_EQUIVALENT-9]
	_ = x[LOGIC_OP_INVERT-10]
	_ = x[LOGIC_OP_OR_REVERSE-11]
	_ = x[LOGIC_OP_COPY_INVERTED-12]
	_ = x[LOGIC_OP_OR_INVERTED-13]
	_ = x[LOGIC_OP_NAND-14]
	_ = x[LOGIC_OP_SET-15]
}

const _LogicOp_name = "LOGIC_OP_CLEARLOGIC_OP_ANDLOGIC_OP_AND_REVERSELOGIC_OP_COPYLOGIC_OP_AND_INVERTEDLOGIC_OP_NO_OPLOGIC_OP_XORLOGIC_OP_ORLOGIC_OP_NORLOGIC_OP_EQUIVALENTLOGIC_OP_INVERTLOGIC_OP_OR_REVERSELOGIC_OP_COPY_INVERTEDLOGIC_OP_OR_INVERTEDLOGIC_OP_NANDLOGIC_OP_SET"

var _LogicOp_index = [...]uint8{0, 14, 26, 46, 59, 80, 94, 106, 117, 129, 148, 163, 182, 204, 224, 237, 249}

func (i LogicOp) String() string {
	if i < 0 || i >= LogicOp(len(_LogicOp_index)-1) {
		return "LogicOp(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _LogicOp_name[_LogicOp_index[i]:_LogicOp_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MEMORY_ALLOCATE_DEVICE_MASK_BIT-1]
	_ = x[MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT-2]
	_ = x[MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT-4]
	_ = x[MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT_KHR-2]
	_ = x[MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR-4]
	_ = x[MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHR-1]
}

const (
	_MemoryAllocateFlagBits_name_0 = "MEMORY_ALLOCATE_DEVICE_MASK_BITMEMORY_ALLOCATE_DEVICE_ADDRESS_BIT"
	_MemoryAllocateFlagBits_name_1 = "MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT"
)

var (
	_MemoryAllocateFlagBits_index_0 = [...]uint8{0, 31, 65}
)

func (i MemoryAllocateFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _MemoryAllocateFlagBits_name_0[_MemoryAllocateFlagBits_index_0[i]:_MemoryAllocateFlagBits_index_0[i+1]]
	case i == 4:
		return _MemoryAllocateFlagBits_name_1
	default:
		return "MemoryAllocateFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MEMORY_HEAP_DEVICE_LOCAL_BIT-1]
	_ = x[MEMORY_HEAP_MULTI_INSTANCE_BIT-2]
	_ = x[MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR-2]
}

const _MemoryHeapFlagBits_name = "MEMORY_HEAP_DEVICE_LOCAL_BITMEMORY_HEAP_MULTI_INSTANCE_BIT"

var _MemoryHeapFlagBits_index = [...]uint8{0, 28, 58}

func (i MemoryHeapFlagBits) String() string {
	i -= 1
	if i >= MemoryHeapFlagBits(len(_MemoryHeapFlagBits_index)-1) {
		return "MemoryHeapFlagBits(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _MemoryHeapFlagBits_name[_MemoryHeapFlagBits_index[i]:_MemoryHeapFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD-0]
	_ = x[MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD-1]
	_ = x[MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD-2]
}

const _MemoryOverallocationBehaviorAMD_name = "MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMDMEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMDMEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD"

var _MemoryOverallocationBehaviorAMD_index = [...]uint8{0, 42, 84, 129}

func (i MemoryOverallocationBehaviorAMD) String() string {
	if i < 0 || i >= MemoryOverallocationBehaviorAMD(len(_MemoryOverallocationBehaviorAMD_index)-1) {
		return "MemoryOverallocationBehaviorAMD(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _MemoryOverallocationBehaviorAMD_name[_MemoryOverallocationBehaviorAMD_index[i]:_MemoryOverallocationBehaviorAMD_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[MEMORY_PROPERTY_DEVICE_LOCAL_BIT-1]
	_ = x[MEMORY_PROPERTY_HOST_VISIBLE_BIT-2]
	_ = x[MEMORY_PROPERTY_HOST_COHERENT_BIT-4]
	_ = x[MEMORY_PROPERTY_HOST_CACHED_BIT-8]
	_ = x[MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT-16]
	_ = x[MEMORY_PROPERTY_PROTECTED_BIT-32]
	_ = x[MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD-1000229000]
	_ = x[MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD-1000229000]
	_ = x[MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV-1000371000]
}

const (
	_MemoryPropertyFlagBits_name_0 = "MEMORY_PROPERTY_DEVICE_LOCAL_BITMEMORY_PROPERTY_HOST_VISIBLE_BIT"
	_MemoryPropertyFlagBits_name_1 = "MEMORY_PROPERTY_HOST_COHERENT_BIT"
	_MemoryPropertyFlagBits_name_2 = "MEMORY_PROPERTY_HOST_CACHED_BIT"
	_MemoryPropertyFlagBits_name_3 = "MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT"
	_MemoryPropertyFlagBits_name_4 = "MEMORY_PROPERTY_PROTECTED_BIT"
	_MemoryPropertyFlagBits_name_5 = "MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD"
	_MemoryPropertyFlagBits_name_6 = "MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV"
)

var (
	_MemoryPropertyFlagBits_index_0 = [...]uint8{0, 32, 64}
)

func (i MemoryPropertyFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _MemoryPropertyFlagBits_name_0[_MemoryPropertyFlagBits_index_0[i]:_MemoryPropertyFlagBits_index_0[i+1]]
	case i == 4:
		return _MemoryPropertyFlagBits_name_1
	case i == 8:
		return _MemoryPropertyFlagBits_name_2
	case i == 16:
		return _MemoryPropertyFlagBits_name_3
	case i == 32:
		return _MemoryPropertyFlagBits_name_4
	case i == 1000229000:
		return _MemoryPropertyFlagBits_name_5
	case i == 1000371000:
		return _MemoryPropertyFlagBits_name_6
	default:
		return "MemoryPropertyFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OBJECT_TYPE_UNKNOWN-0]
	_ = x[OBJECT_TYPE_INSTANCE-1]
	_ = x[OBJECT_TYPE_PHYSICAL_DEVICE-2]
	_ = x[OBJECT_TYPE_DEVICE-3]
	_ = x[OBJECT_TYPE_QUEUE-4]
	_ = x[OBJECT_TYPE_SEMAPHORE-5]
	_ = x[OBJECT_TYPE_COMMAND_BUFFER-6]
	_ = x[OBJECT_TYPE_FENCE-7]
	_ = x[OBJECT_TYPE_DEVICE_MEMORY-8]
	_ = x[OBJECT_TYPE_BUFFER-9]
	_ = x[OBJECT_TYPE_IMAGE-10]
	_ = x[OBJECT_TYPE_EVENT-11]
	_ = x[OBJECT_TYPE_QUERY_POOL-12]
	_ = x[OBJECT_TYPE_BUFFER_VIEW-13]
	_ = x[OBJECT_TYPE_IMAGE_VIEW-14]
	_ = x[OBJECT_TYPE_SHADER_MODULE-15]
	_ = x[OBJECT_TYPE_PIPELINE_CACHE-16]
	_ = x[OBJECT_TYPE_PIPELINE_LAYOUT-17]
	_ = x[OBJECT_TYPE_RENDER_PASS-18]
	_ = x[OBJECT_TYPE_PIPELINE-19]
	_ = x[OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT-20]
	_ = x[OBJECT_TYPE_SAMPLER-21]
	_ = x[OBJECT_TYPE_DESCRIPTOR_POOL-22]
	_ = x[OBJECT_TYPE_DESCRIPTOR_SET-23]
	_ = x[OBJECT_TYPE_FRAMEBUFFER-24]
	_ = x[OBJECT_TYPE_COMMAND_POOL-25]
	_ = x[OBJECT_TYPE_SURFACE_KHR-1000000000]
	_ = x[OBJECT_TYPE_SWAPCHAIN_KHR-1000001000]
	_ = x[OBJECT_TYPE_DISPLAY_KHR-1000002000]
	_ = x[OBJECT_TYPE_DISPLAY_MODE_KHR-1000002001]
	_ = x[OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT-1000011000]
	_ = x[OBJECT_TYPE_CU_MODULE_NVX-1000029000]
	_ = x[OBJECT_TYPE_CU_FUNCTION_NVX-1000029001]
	_ = x[OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE-1000085000]
	_ = x[OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT-1000128000]
	_ = x[OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR-1000150000]
	_ = x[OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION-1000156000]
	_ = x[OBJECT_TYPE_VALIDATION_CACHE_EXT-1000160000]
	_ = x[OBJECT_TYPE_ACCELERATION_STRUCTURE_NV-1000165000]
	_ = x[OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL-1000210000]
	_ = x[OBJECT_TYPE_DEFERRED_OPERATION_KHR-1000268000]
	_ = x[OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV-1000277000]
	_ = x[OBJECT_TYPE_PRIVATE_DATA_SLOT_EXT-1000295000]
	_ = x[OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR-1000085000]
	_ = x[OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR-1000156000]
}

const _ObjectType_name = "OBJECT_TYPE_UNKNOWNOBJECT_TYPE_INSTANCEOBJECT_TYPE_PHYSICAL_DEVICEOBJECT_TYPE_DEVICEOBJECT_TYPE_QUEUEOBJECT_TYPE_SEMAPHOREOBJECT_TYPE_COMMAND_BUFFEROBJECT_TYPE_FENCEOBJECT_TYPE_DEVICE_MEMORYOBJECT_TYPE_BUFFEROBJECT_TYPE_IMAGEOBJECT_TYPE_EVENTOBJECT_TYPE_QUERY_POOLOBJECT_TYPE_BUFFER_VIEWOBJECT_TYPE_IMAGE_VIEWOBJECT_TYPE_SHADER_MODULEOBJECT_TYPE_PIPELINE_CACHEOBJECT_TYPE_PIPELINE_LAYOUTOBJECT_TYPE_RENDER_PASSOBJECT_TYPE_PIPELINEOBJECT_TYPE_DESCRIPTOR_SET_LAYOUTOBJECT_TYPE_SAMPLEROBJECT_TYPE_DESCRIPTOR_POOLOBJECT_TYPE_DESCRIPTOR_SETOBJECT_TYPE_FRAMEBUFFEROBJECT_TYPE_COMMAND_POOLOBJECT_TYPE_SURFACE_KHROBJECT_TYPE_SWAPCHAIN_KHROBJECT_TYPE_DISPLAY_KHROBJECT_TYPE_DISPLAY_MODE_KHROBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXTOBJECT_TYPE_CU_MODULE_NVXOBJECT_TYPE_CU_FUNCTION_NVXOBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATEOBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXTOBJECT_TYPE_ACCELERATION_STRUCTURE_KHROBJECT_TYPE_SAMPLER_YCBCR_CONVERSIONOBJECT_TYPE_VALIDATION_CACHE_EXTOBJECT_TYPE_ACCELERATION_STRUCTURE_NVOBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTELOBJECT_TYPE_DEFERRED_OPERATION_KHROBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NVOBJECT_TYPE_PRIVATE_DATA_SLOT_EXT"

var _ObjectType_map = map[ObjectType]string{
	0:          _ObjectType_name[0:19],
	1:          _ObjectType_name[19:39],
	2:          _ObjectType_name[39:66],
	3:          _ObjectType_name[66:84],
	4:          _ObjectType_name[84:101],
	5:          _ObjectType_name[101:122],
	6:          _ObjectType_name[122:148],
	7:          _ObjectType_name[148:165],
	8:          _ObjectType_name[165:190],
	9:          _ObjectType_name[190:208],
	10:         _ObjectType_name[208:225],
	11:         _ObjectType_name[225:242],
	12:         _ObjectType_name[242:264],
	13:         _ObjectType_name[264:287],
	14:         _ObjectType_name[287:309],
	15:         _ObjectType_name[309:334],
	16:         _ObjectType_name[334:360],
	17:         _ObjectType_name[360:387],
	18:         _ObjectType_name[387:410],
	19:         _ObjectType_name[410:430],
	20:         _ObjectType_name[430:463],
	21:         _ObjectType_name[463:482],
	22:         _ObjectType_name[482:509],
	23:         _ObjectType_name[509:535],
	24:         _ObjectType_name[535:558],
	25:         _ObjectType_name[558:582],
	1000000000: _ObjectType_name[582:605],
	1000001000: _ObjectType_name[605:630],
	1000002000: _ObjectType_name[630:653],
	1000002001: _ObjectType_name[653:681],
	1000011000: _ObjectType_name[681:718],
	1000029000: _ObjectType_name[718:743],
	1000029001: _ObjectType_name[743:770],
	1000085000: _ObjectType_name[770:808],
	1000128000: _ObjectType_name[808:845],
	1000150000: _ObjectType_name[845:883],
	1000156000: _ObjectType_name[883:919],
	1000160000: _ObjectType_name[919:951],
	1000165000: _ObjectType_name[951:988],
	1000210000: _ObjectType_name[988:1031],
	1000268000: _ObjectType_name[1031:1065],
	1000277000: _ObjectType_name[1065:1104],
	1000295000: _ObjectType_name[1104:1137],
}

func (i ObjectType) String() string {
	if str, ok := _ObjectType_map[i]; ok {
		return str
	}
	return "ObjectType(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PEER_MEMORY_FEATURE_COPY_SRC_BIT-1]
	_ = x[PEER_MEMORY_FEATURE_COPY_DST_BIT-2]
	_ = x[PEER_MEMORY_FEATURE_GENERIC_SRC_BIT-4]
	_ = x[PEER_MEMORY_FEATURE_GENERIC_DST_BIT-8]
	_ = x[PEER_MEMORY_FEATURE_COPY_DST_BIT_KHR-2]
	_ = x[PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHR-1]
	_ = x[PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHR-8]
	_ = x[PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHR-4]
}

const (
	_PeerMemoryFeatureFlagBits_name_0 = "PEER_MEMORY_FEATURE_COPY_SRC_BITPEER_MEMORY_FEATURE_COPY_DST_BIT"
	_PeerMemoryFeatureFlagBits_name_1 = "PEER_MEMORY_FEATURE_GENERIC_SRC_BIT"
	_PeerMemoryFeatureFlagBits_name_2 = "PEER_MEMORY_FEATURE_GENERIC_DST_BIT"
)

var (
	_PeerMemoryFeatureFlagBits_index_0 = [...]uint8{0, 32, 64}
)

func (i PeerMemoryFeatureFlagBits) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _PeerMemoryFeatureFlagBits_name_0[_PeerMemoryFeatureFlagBits_index_0[i]:_PeerMemoryFeatureFlagBits_index_0[i+1]]
	case i == 4:
		return _PeerMemoryFeatureFlagBits_name_1
	case i == 8:
		return _PeerMemoryFeatureFlagBits_name_2
	default:
		return "PeerMemoryFeatureFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL-0]
}

const _PerformanceConfigurationTypeINTEL_name = "PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL"

var _PerformanceConfigurationTypeINTEL_index = [...]uint8{0, 78}

func (i PerformanceConfigurationTypeINTEL) String() string {
	if i < 0 || i >= PerformanceConfigurationTypeINTEL(len(_PerformanceConfigurationTypeINTEL_index)-1) {
		return "PerformanceConfigurationTypeINTEL(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PerformanceConfigurationTypeINTEL_name[_PerformanceConfigurationTypeINTEL_index[i]:_PerformanceConfigurationTypeINTEL_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_BIT_KHR-1]
	_ = x[PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_BIT_KHR-2]
	_ = x[PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_KHR-2]
	_ = x[PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_KHR-1]
}

const _PerformanceCounterDescriptionFlagBitsKHR_name = "PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_BIT_KHRPERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_BIT_KHR"

var _PerformanceCounterDescriptionFlagBitsKHR_index = [...]uint8{0, 61, 122}

func (i PerformanceCounterDescriptionFlagBitsKHR) String() string {
	i -= 1
	if i >= PerformanceCounterDescriptionFlagBitsKHR(len(_PerformanceCounterDescriptionFlagBitsKHR_index)-1) {
		return "PerformanceCounterDescriptionFlagBitsKHR(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _PerformanceCounterDescriptionFlagBitsKHR_name[_PerformanceCounterDescriptionFlagBitsKHR_index[i]:_PerformanceCounterDescriptionFlagBitsKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR-0]
	_ = x[PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR-1]
	_ = x[PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR-2]
	_ = x[QUERY_SCOPE_COMMAND_BUFFER_KHR-0]
	_ = x[QUERY_SCOPE_COMMAND_KHR-2]
	_ = x[QUERY_SCOPE_RENDER_PASS_KHR-1]
}

const _PerformanceCounterScopeKHR_name = "PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHRPERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHRPERFORMANCE_COUNTER_SCOPE_COMMAND_KHR"

var _PerformanceCounterScopeKHR_index = [...]uint8{0, 44, 85, 122}

func (i PerformanceCounterScopeKHR) String() string {
	if i < 0 || i >= PerformanceCounterScopeKHR(len(_PerformanceCounterScopeKHR_index)-1) {
		return "PerformanceCounterScopeKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PerformanceCounterScopeKHR_name[_PerformanceCounterScopeKHR_index[i]:_PerformanceCounterScopeKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PERFORMANCE_COUNTER_STORAGE_INT32_KHR-0]
	_ = x[PERFORMANCE_COUNTER_STORAGE_INT64_KHR-1]
	_ = x[PERFORMANCE_COUNTER_STORAGE_UINT32_KHR-2]
	_ = x[PERFORMANCE_COUNTER_STORAGE_UINT64_KHR-3]
	_ = x[PERFORMANCE_COUNTER_STORAGE_FLOAT32_KHR-4]
	_ = x[PERFORMANCE_COUNTER_STORAGE_FLOAT64_KHR-5]
}

const _PerformanceCounterStorageKHR_name = "PERFORMANCE_COUNTER_STORAGE_INT32_KHRPERFORMANCE_COUNTER_STORAGE_INT64_KHRPERFORMANCE_COUNTER_STORAGE_UINT32_KHRPERFORMANCE_COUNTER_STORAGE_UINT64_KHRPERFORMANCE_COUNTER_STORAGE_FLOAT32_KHRPERFORMANCE_COUNTER_STORAGE_FLOAT64_KHR"

var _PerformanceCounterStorageKHR_index = [...]uint8{0, 37, 74, 112, 150, 189, 228}

func (i PerformanceCounterStorageKHR) String() string {
	if i < 0 || i >= PerformanceCounterStorageKHR(len(_PerformanceCounterStorageKHR_index)-1) {
		return "PerformanceCounterStorageKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PerformanceCounterStorageKHR_name[_PerformanceCounterStorageKHR_index[i]:_PerformanceCounterStorageKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PERFORMANCE_COUNTER_UNIT_GENERIC_KHR-0]
	_ = x[PERFORMANCE_COUNTER_UNIT_PERCENTAGE_KHR-1]
	_ = x[PERFORMANCE_COUNTER_UNIT_NANOSECONDS_KHR-2]
	_ = x[PERFORMANCE_COUNTER_UNIT_BYTES_KHR-3]
	_ = x[PERFORMANCE_COUNTER_UNIT_BYTES_PER_SECOND_KHR-4]
	_ = x[PERFORMANCE_COUNTER_UNIT_KELVIN_KHR-5]
	_ = x[PERFORMANCE_COUNTER_UNIT_WATTS_KHR-6]
	_ = x[PERFORMANCE_COUNTER_UNIT_VOLTS_KHR-7]
	_ = x[PERFORMANCE_COUNTER_UNIT_AMPS_KHR-8]
	_ = x[PERFORMANCE_COUNTER_UNIT_HERTZ_KHR-9]
	_ = x[PERFORMANCE_COUNTER_UNIT_CYCLES_KHR-10]
}

const _PerformanceCounterUnitKHR_name = "PERFORMANCE_COUNTER_UNIT_GENERIC_KHRPERFORMANCE_COUNTER_UNIT_PERCENTAGE_KHRPERFORMANCE_COUNTER_UNIT_NANOSECONDS_KHRPERFORMANCE_COUNTER_UNIT_BYTES_KHRPERFORMANCE_COUNTER_UNIT_BYTES_PER_SECOND_KHRPERFORMANCE_COUNTER_UNIT_KELVIN_KHRPERFORMANCE_COUNTER_UNIT_WATTS_KHRPERFORMANCE_COUNTER_UNIT_VOLTS_KHRPERFORMANCE_COUNTER_UNIT_AMPS_KHRPERFORMANCE_COUNTER_UNIT_HERTZ_KHRPERFORMANCE_COUNTER_UNIT_CYCLES_KHR"

var _PerformanceCounterUnitKHR_index = [...]uint16{0, 36, 75, 115, 149, 194, 229, 263, 297, 330, 364, 399}

func (i PerformanceCounterUnitKHR) String() string {
	if i < 0 || i >= PerformanceCounterUnitKHR(len(_PerformanceCounterUnitKHR_index)-1) {
		return "PerformanceCounterUnitKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PerformanceCounterUnitKHR_name[_PerformanceCounterUnitKHR_index[i]:_PerformanceCounterUnitKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTEL-0]
	_ = x[PERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL-1]
}

const _PerformanceOverrideTypeINTEL_name = "PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTELPERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL"

var _PerformanceOverrideTypeINTEL_index = [...]uint8{0, 45, 93}

func (i PerformanceOverrideTypeINTEL) String() string {
	if i < 0 || i >= PerformanceOverrideTypeINTEL(len(_PerformanceOverrideTypeINTEL_index)-1) {
		return "PerformanceOverrideTypeINTEL(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PerformanceOverrideTypeINTEL_name[_PerformanceOverrideTypeINTEL_index[i]:_PerformanceOverrideTypeINTEL_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTEL-0]
	_ = x[PERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL-1]
}

const _PerformanceParameterTypeINTEL_name = "PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTELPERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL"

var _PerformanceParameterTypeINTEL_index = [...]uint8{0, 54, 111}

func (i PerformanceParameterTypeINTEL) String() string {
	if i < 0 || i >= PerformanceParameterTypeINTEL(len(_PerformanceParameterTypeINTEL_index)-1) {
		return "PerformanceParameterTypeINTEL(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PerformanceParameterTypeINTEL_name[_PerformanceParameterTypeINTEL_index[i]:_PerformanceParameterTypeINTEL_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PERFORMANCE_VALUE_TYPE_UINT32_INTEL-0]
	_ = x[PERFORMANCE_VALUE_TYPE_UINT64_INTEL-1]
	_ = x[PERFORMANCE_VALUE_TYPE_FLOAT_INTEL-2]
	_ = x[PERFORMANCE_VALUE_TYPE_BOOL_INTEL-3]
	_ = x[PERFORMANCE_VALUE_TYPE_STRING_INTEL-4]
}

const _PerformanceValueTypeINTEL_name = "PERFORMANCE_VALUE_TYPE_UINT32_INTELPERFORMANCE_VALUE_TYPE_UINT64_INTELPERFORMANCE_VALUE_TYPE_FLOAT_INTELPERFORMANCE_VALUE_TYPE_BOOL_INTELPERFORMANCE_VALUE_TYPE_STRING_INTEL"

var _PerformanceValueTypeINTEL_index = [...]uint8{0, 35, 70, 104, 137, 172}

func (i PerformanceValueTypeINTEL) String() string {
	if i < 0 || i >= PerformanceValueTypeINTEL(len(_PerformanceValueTypeINTEL_index)-1) {
		return "PerformanceValueTypeINTEL(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PerformanceValueTypeINTEL_name[_PerformanceValueTypeINTEL_index[i]:_PerformanceValueTypeINTEL_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PHYSICAL_DEVICE_TYPE_OTHER-0]
	_ = x[PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU-1]
	_ = x[PHYSICAL_DEVICE_TYPE_DISCRETE_GPU-2]
	_ = x[PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU-3]
	_ = x[PHYSICAL_DEVICE_TYPE_CPU-4]
}

const _PhysicalDeviceType_name = "PHYSICAL_DEVICE_TYPE_OTHERPHYSICAL_DEVICE_TYPE_INTEGRATED_GPUPHYSICAL_DEVICE_TYPE_DISCRETE_GPUPHYSICAL_DEVICE_TYPE_VIRTUAL_GPUPHYSICAL_DEVICE_TYPE_CPU"

var _PhysicalDeviceType_index = [...]uint8{0, 26, 61, 94, 126, 150}

func (i PhysicalDeviceType) String() string {
	if i < 0 || i >= PhysicalDeviceType(len(_PhysicalDeviceType_index)-1) {
		return "PhysicalDeviceType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PhysicalDeviceType_name[_PhysicalDeviceType_index[i]:_PhysicalDeviceType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_BIND_POINT_GRAPHICS-0]
	_ = x[PIPELINE_BIND_POINT_COMPUTE-1]
	_ = x[PIPELINE_BIND_POINT_RAY_TRACING_KHR-1000347000]
	_ = x[PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI-1000369003]
	_ = x[PIPELINE_BIND_POINT_RAY_TRACING_NV-1000347000]
}

const (
	_PipelineBindPoint_name_0 = "PIPELINE_BIND_POINT_GRAPHICSPIPELINE_BIND_POINT_COMPUTE"
	_PipelineBindPoint_name_1 = "PIPELINE_BIND_POINT_RAY_TRACING_KHR"
	_PipelineBindPoint_name_2 = "PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI"
)

var (
	_PipelineBindPoint_index_0 = [...]uint8{0, 28, 55}
)

func (i PipelineBindPoint) String() string {
	switch {
	case 0 <= i && i <= 1:
		return _PipelineBindPoint_name_0[_PipelineBindPoint_index_0[i]:_PipelineBindPoint_index_0[i+1]]
	case i == 1000347000:
		return _PipelineBindPoint_name_1
	case i == 1000369003:
		return _PipelineBindPoint_name_2
	default:
		return "PipelineBindPoint(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT-1000297000]
}

const _PipelineCacheCreateFlagBits_name = "PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT"

var _PipelineCacheCreateFlagBits_index = [...]uint8{0, 53}

func (i PipelineCacheCreateFlagBits) String() string {
	i -= 1000297000
	if i >= PipelineCacheCreateFlagBits(len(_PipelineCacheCreateFlagBits_index)-1) {
		return "PipelineCacheCreateFlagBits(" + strconv.FormatInt(int64(i+1000297000), 10) + ")"
	}
	return _PipelineCacheCreateFlagBits_name[_PipelineCacheCreateFlagBits_index[i]:_PipelineCacheCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_CACHE_HEADER_VERSION_ONE-1]
}

const _PipelineCacheHeaderVersion_name = "PIPELINE_CACHE_HEADER_VERSION_ONE"

var _PipelineCacheHeaderVersion_index = [...]uint8{0, 33}

func (i PipelineCacheHeaderVersion) String() string {
	i -= 1
	if i < 0 || i >= PipelineCacheHeaderVersion(len(_PipelineCacheHeaderVersion_index)-1) {
		return "PipelineCacheHeaderVersion(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _PipelineCacheHeaderVersion_name[_PipelineCacheHeaderVersion_index[i]:_PipelineCacheHeaderVersion_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_ARM-1000342000]
}

const _PipelineColorBlendStateCreateFlagBits_name = "PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_ARM"

var _PipelineColorBlendStateCreateFlagBits_index = [...]uint8{0, 79}

func (i PipelineColorBlendStateCreateFlagBits) String() string {
	i -= 1000342000
	if i >= PipelineColorBlendStateCreateFlagBits(len(_PipelineColorBlendStateCreateFlagBits_index)-1) {
		return "PipelineColorBlendStateCreateFlagBits(" + strconv.FormatInt(int64(i+1000342000), 10) + ")"
	}
	return _PipelineColorBlendStateCreateFlagBits_name[_PipelineColorBlendStateCreateFlagBits_index[i]:_PipelineColorBlendStateCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT-1]
	_ = x[PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT-2]
	_ = x[PIPELINE_CREATE_DERIVATIVE_BIT-4]
	_ = x[PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT-8]
	_ = x[PIPELINE_CREATE_DISPATCH_BASE_BIT-16]
	_ = x[PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR-1000044000]
	_ = x[PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT-1000044000]
	_ = x[PIPELINE_CREATE_DEFER_COMPILE_BIT_NV-1000165000]
	_ = x[PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR-1000269000]
	_ = x[PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR-1000269000]
	_ = x[PIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NV-1000277000]
	_ = x[PIPELINE_CREATE_LIBRARY_BIT_KHR-1000290000]
	_ = x[PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT-1000297000]
	_ = x[PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT_EXT-1000297000]
	_ = x[PIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NV-1000327000]
	_ = x[PIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR-1000347000]
	_ = x[PIPELINE_CREATE_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR-1000347000]
	_ = x[PIPELINE_CREATE_RAY_TRACING_SKIP_AABBS_BIT_KHR-1000347000]
	_ = x[PIPELINE_CREATE_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR-1000347000]
	_ = x[PIPELINE_CREATE_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR-1000347000]
	_ = x[PIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR-1000347000]
	_ = x[PIPELINE_CREATE_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR-1000347000]
	_ = x[PIPELINE_CREATE_DISPATCH_BASE_KHR-16]
	_ = x[PIPELINE_CREATE_DISPATCH_BASE-16]
	_ = x[PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT-1000044000]
	_ = x[PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR-1000044000]
	_ = x[PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR-8]
}

const _PipelineCreateFlagBits_name = "PIPELINE_CREATE_DISABLE_OPTIMIZATION_BITPIPELINE_CREATE_ALLOW_DERIVATIVES_BITPIPELINE_CREATE_DERIVATIVE_BITPIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BITPIPELINE_CREATE_DISPATCH_BASE_BITPIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHRPIPELINE_CREATE_DEFER_COMPILE_BIT_NVPIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHRPIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NVPIPELINE_CREATE_LIBRARY_BIT_KHRPIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXTPIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NVPIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR"

var _PipelineCreateFlagBits_map = map[PipelineCreateFlagBits]string{
	1:          _PipelineCreateFlagBits_name[0:40],
	2:          _PipelineCreateFlagBits_name[40:77],
	4:          _PipelineCreateFlagBits_name[77:107],
	8:          _PipelineCreateFlagBits_name[107:155],
	16:         _PipelineCreateFlagBits_name[155:188],
	1000044000: _PipelineCreateFlagBits_name[188:254],
	1000165000: _PipelineCreateFlagBits_name[254:290],
	1000269000: _PipelineCreateFlagBits_name[290:346],
	1000277000: _PipelineCreateFlagBits_name[346:386],
	1000290000: _PipelineCreateFlagBits_name[386:417],
	1000297000: _PipelineCreateFlagBits_name[417:474],
	1000327000: _PipelineCreateFlagBits_name[474:521],
	1000347000: _PipelineCreateFlagBits_name[521:585],
}

func (i PipelineCreateFlagBits) String() string {
	if str, ok := _PipelineCreateFlagBits_map[i]; ok {
		return str
	}
	return "PipelineCreateFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT-1]
	_ = x[PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT-2]
	_ = x[PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT-4]
}

const (
	_PipelineCreationFeedbackFlagBitsEXT_name_0 = "PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXTPIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT"
	_PipelineCreationFeedbackFlagBitsEXT_name_1 = "PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT"
)

var (
	_PipelineCreationFeedbackFlagBitsEXT_index_0 = [...]uint8{0, 40, 105}
)

func (i PipelineCreationFeedbackFlagBitsEXT) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _PipelineCreationFeedbackFlagBitsEXT_name_0[_PipelineCreationFeedbackFlagBitsEXT_index_0[i]:_PipelineCreationFeedbackFlagBitsEXT_index_0[i+1]]
	case i == 4:
		return _PipelineCreationFeedbackFlagBitsEXT_name_1
	default:
		return "PipelineCreationFeedbackFlagBitsEXT(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM-1000342000]
	_ = x[PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM-1000342000]
}

const _PipelineDepthStencilStateCreateFlagBits_name = "PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM"

var _PipelineDepthStencilStateCreateFlagBits_index = [...]uint8{0, 89}

func (i PipelineDepthStencilStateCreateFlagBits) String() string {
	i -= 1000342000
	if i >= PipelineDepthStencilStateCreateFlagBits(len(_PipelineDepthStencilStateCreateFlagBits_index)-1) {
		return "PipelineDepthStencilStateCreateFlagBits(" + strconv.FormatInt(int64(i+1000342000), 10) + ")"
	}
	return _PipelineDepthStencilStateCreateFlagBits_name[_PipelineDepthStencilStateCreateFlagBits_index[i]:_PipelineDepthStencilStateCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR-0]
	_ = x[PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR-1]
	_ = x[PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR-2]
	_ = x[PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR-3]
}

const _PipelineExecutableStatisticFormatKHR_name = "PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHRPIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHRPIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHRPIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR"

var _PipelineExecutableStatisticFormatKHR_index = [...]uint8{0, 47, 93, 140, 188}

func (i PipelineExecutableStatisticFormatKHR) String() string {
	if i < 0 || i >= PipelineExecutableStatisticFormatKHR(len(_PipelineExecutableStatisticFormatKHR_index)-1) {
		return "PipelineExecutableStatisticFormatKHR(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PipelineExecutableStatisticFormatKHR_name[_PipelineExecutableStatisticFormatKHR_index[i]:_PipelineExecutableStatisticFormatKHR_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT-1000225000]
	_ = x[PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT-1000225000]
}

const _PipelineShaderStageCreateFlagBits_name = "PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT"

var _PipelineShaderStageCreateFlagBits_index = [...]uint8{0, 59}

func (i PipelineShaderStageCreateFlagBits) String() string {
	i -= 1000225000
	if i >= PipelineShaderStageCreateFlagBits(len(_PipelineShaderStageCreateFlagBits_index)-1) {
		return "PipelineShaderStageCreateFlagBits(" + strconv.FormatInt(int64(i+1000225000), 10) + ")"
	}
	return _PipelineShaderStageCreateFlagBits_name[_PipelineShaderStageCreateFlagBits_index[i]:_PipelineShaderStageCreateFlagBits_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_STAGE_TOP_OF_PIPE_BIT-1]
	_ = x[PIPELINE_STAGE_DRAW_INDIRECT_BIT-2]
	_ = x[PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT-1024]
	_ = x[PIPELINE_STAGE_COMPUTE_SHADER_BIT-2048]
	_ = x[PIPELINE_STAGE_TRANSFER_BIT-4096]
	_ = x[PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT-8192]
	_ = x[PIPELINE_STAGE_HOST_BIT-16384]
	_ = x[PIPELINE_STAGE_ALL_GRAPHICS_BIT-32768]
	_ = x[PIPELINE_STAGE_ALL_COMMANDS_BIT-65536]
	_ = x[PIPELINE_STAGE_VERTEX_INPUT_BIT-4]
	_ = x[PIPELINE_STAGE_VERTEX_SHADER_BIT-8]
	_ = x[PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT-16]
	_ = x[PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT-32]
	_ = x[PIPELINE_STAGE_GEOMETRY_SHADER_BIT-64]
	_ = x[PIPELINE_STAGE_FRAGMENT_SHADER_BIT-128]
	_ = x[PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT-256]
	_ = x[PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT-512]
	_ = x[PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT-1000028000]
	_ = x[PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT-1000081000]
	_ = x[PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR-1000150000]
	_ = x[PIPELINE_STAGE_MESH_SHADER_BIT_NV-1000202000]
	_ = x[PIPELINE_STAGE_TASK_SHADER_BIT_NV-1000202000]
	_ = x[PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT-1000218000]
	_ = x[PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR-1000226000]
	_ = x[PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV-1000277000]
	_ = x[PIPELINE_STAGE_NONE_KHR-1000314000]
	_ = x[PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR-1000347000]
	_ = x[PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV-1000150000]
	_ = x[PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV-1000226000]
	_ = x[PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV-1000347000]
}

const _PipelineStageFlagBits_name = "PIPELINE_STAGE_TOP_OF_PIPE_BITPIPELINE_STAGE_DRAW_INDIRECT_BITPIPELINE_STAGE_VERTEX_INPUT_BITPIPELINE_STAGE_VERTEX_SHADER_BITPIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BITPIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BITPIPELINE_STAGE_GEOMETRY_SHADER_BITPIPELINE_STAGE_FRAGMENT_SHADER_BITPIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BITPIPELINE_STAGE_LATE_FRAGMENT_TESTS_BITPIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BITPIPELINE_STAGE_COMPUTE_SHADER_BITPIPELINE_STAGE_TRANSFER_BITPIPELINE_STAGE_BOTTOM_OF_PIPE_BITPIPELINE_STAGE_HOST_BITPIPELINE_STAGE_ALL_GRAPHICS_BITPIPELINE_STAGE_ALL_COMMANDS_BITPIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXTPIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXTPIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHRPIPELINE_STAGE_MESH_SHADER_BIT_NVPIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXTPIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHRPIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NVPIPELINE_STAGE_NONE_KHRPIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR"

var _PipelineStageFlagBits_map = map[PipelineStageFlagBits]string{
	1:          _PipelineStageFlagBits_name[0:30],
	2:          _PipelineStageFlagBits_name[30:62],
	4:          _PipelineStageFlagBits_name[62:93],
	8:          _PipelineStageFlagBits_name[93:125],
	16:         _PipelineStageFlagBits_name[125:171],
	32:         _PipelineStageFlagBits_name[171:220],
	64:         _PipelineStageFlagBits_name[220:254],
	128:        _PipelineStageFlagBits_name[254:288],
	256:        _PipelineStageFlagBits_name[288:327],
	512:        _PipelineStageFlagBits_name[327:365],
	1024:       _PipelineStageFlagBits_name[365:407],
	2048:       _PipelineStageFlagBits_name[407:440],
	4096:       _PipelineStageFlagBits_name[440:467],
	8192:       _PipelineStageFlagBits_name[467:500],
	16384:      _PipelineStageFlagBits_name[500:523],
	32768:      _PipelineStageFlagBits_name[523:554],
	65536:      _PipelineStageFlagBits_name[554:585],
	1000028000: _PipelineStageFlagBits_name[585:626],
	1000081000: _PipelineStageFlagBits_name[626:670],
	1000150000: _PipelineStageFlagBits_name[670:721],
	1000202000: _PipelineStageFlagBits_name[721:754],
	1000218000: _PipelineStageFlagBits_name[754:801],
	1000226000: _PipelineStageFlagBits_name[801:856],
	1000277000: _PipelineStageFlagBits_name[856:896],
	1000314000: _PipelineStageFlagBits_name[896:919],
	1000347000: _PipelineStageFlagBits_name[919:960],
}

func (i PipelineStageFlagBits) String() string {
	if str, ok := _PipelineStageFlagBits_map[i]; ok {
		return str
	}
	return "PipelineStageFlagBits(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PIPELINE_STAGE_2_NONE_KHR-0]
	_ = x[PIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHR-1]
	_ = x[PIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHR-2]
	_ = x[PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR-1024]
	_ = x[PIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHR-2048]
	_ = x[PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR-4096]
	_ = x[PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHR-8192]
	_ = x[PIPELINE_STAGE_2_HOST_BIT_KHR-16384]
	_ = x[PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR-32768]
	_ = x[PIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHR-65536]
	_ = x[PIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHR-4]
	_ = x[PIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHR-8]
	_ = x[PIPELINE_STAGE_2_COPY_BIT_KHR-4294967296]
	_ = x[PIPELINE_STAGE_2_RESOLVE_BIT_KHR-8589934592]
	_ = x[PIPELINE_STAGE_2_BLIT_BIT_KHR-17179869184]
	_ = x[PIPELINE_STAGE_2_CLEAR_BIT_KHR-34359738368]
	_ = x[PIPELINE_STAGE_2_INDEX_INPUT_BIT_KHR-68719476736]
	_ = x[PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHR-137438953472]
	_ = x[PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR-274877906944]
	_ = x[PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHR-16]
	_ = x[PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHR-32]
	_ = x[PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHR-64]
	_ = x[PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHR-128]
	_ = x[PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHR-256]
	_ = x[PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHR-512]
	_ = x[PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR-1000314000]
	_ = x[PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR-1000314000]
	_ = x[PIPELINE_STAGE_2_MESH_SHADER_BIT_NV-1000314000]
	_ = x[PIPELINE_STAGE_2_TASK_SHADER_BIT_NV-1000314000]
	_ = x[PIPELINE_STAGE_2_TRANSFORM_FEEDBACK_BIT_EXT-1000314000]
	_ = x[PIPELINE_STAGE_2_FRAGMENT_DENSITY_PROCESS_BIT_EXT-1000314000]
	_ = x[PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR-1000314000]
	_ = x[PIPELINE_STAGE_2_CONDITIONAL_RENDERING_BIT_EXT-1000314000]
	_ = x[PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_NV-1000314000]
	_ = x[PIPELINE_STAGE_2_SUBPASS_SHADING_BIT_HUAWEI-1000369000]
	_ = x[PIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEI-1000370000]
	_ = x[PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_NV-1000314000]
	_ = x[PIPELINE_STAGE_2_TRANSFER_BIT_KHR-4096]
	_ = x[PIPELINE_STAGE_2_SHADING_RATE_IMAGE_BIT_NV-1000314000]
	_ = x[PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_NV-1000314000]
}

const _PipelineStageFlagBits2KHR_name = "PIPELINE_STAGE_2_NONE_KHRPIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHRPIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHRPIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHRPIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHRPIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHRPIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHRPIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHRPIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHRPIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHRPIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHRPIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHRPIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHRPIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHRPIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHRPIPELINE_STAGE_2_HOST_BIT_KHRPIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHRPIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHRPIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHRPIPELINE_STAGE_2_SUBPASS_SHADING_BIT_HUAWEIPIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEIPIPELINE_STAGE_2_COPY_BIT_KHRPIPELINE_STAGE_2_RESOLVE_BIT_KHRPIPELINE_STAGE_2_BLIT_BIT_KHRPIPELINE_STAGE_2_CLEAR_BIT_KHRPIPELINE_STAGE_2_INDEX_INPUT_BIT_KHRPIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHRPIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR"

var _PipelineStageFlagBits2KHR_map = map[PipelineStageFlagBits2KHR]string{
	0:            _PipelineStageFlagBits2KHR_name[0:25],
	1:            _PipelineStageFlagBits2KHR_name[25:61],
	2:            _PipelineStageFlagBits2KHR_name[61:99],
	4:            _PipelineStageFlagBits2KHR_name[99:136],
	8:            _PipelineStageFlagBits2KHR_name[136:174],
	16:           _PipelineStageFlagBits2KHR_name[174:226],
	32:           _PipelineStageFlagBits2KHR_name[226:281],
	64:           _PipelineStageFlagBits2KHR_name[281:321],
	128:          _PipelineStageFlagBits2KHR_name[321:361],
	256:          _PipelineStageFlagBits2KHR_name[361:406],
	512:          _PipelineStageFlagBits2KHR_name[406:450],
	1024:         _PipelineStageFlagBits2KHR_name[450:498],
	2048:         _PipelineStageFlagBits2KHR_name[498:537],
	4096:         _PipelineStageFlagBits2KHR_name[537:574],
	8192:         _PipelineStageFlagBits2KHR_name[574:613],
	16384:        _PipelineStageFlagBits2KHR_name[613:642],
	32768:        _PipelineStageFlagBits2KHR_name[642:679],
	65536:        _PipelineStageFlagBits2KHR_name[679:716],
	1000314000:   _PipelineStageFlagBits2KHR_name[716:759],
	1000369000:   _PipelineStageFlagBits2KHR_name[759:802],
	1000370000:   _PipelineStageFlagBits2KHR_name[802:845],
	4294967296:   _PipelineStageFlagBits2KHR_name[845:874],
	8589934592:   _PipelineStageFlagBits2KHR_name[874:906],
	17179869184:  _PipelineStageFlagBits2KHR_name[906:935],
	34359738368:  _PipelineStageFlagBits2KHR_name[935:965],
	68719476736:  _PipelineStageFlagBits2KHR_name[965:1001],
	137438953472: _PipelineStageFlagBits2KHR_name[1001:1048],
	274877906944: _PipelineStageFlagBits2KHR_name[1048:1098],
}

func (i PipelineStageFlagBits2KHR) String() string {
	if str, ok := _PipelineStageFlagBits2KHR_map[i]; ok {
		return str
	}
	return "PipelineStageFlagBits2KHR(" + strconv.FormatInt(int64(i), 10) + ")"
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES-0]
	_ = x[POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY-1]
	_ = x[POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR-0]
	_ = x[POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR-1]
}

const _PointClippingBehavior_name = "POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANESPOINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY"

var _PointClippingBehavior_index = [...]uint8{0, 39, 84}

func (i PointClippingBehavior) String() string {
	if i < 0 || i >= PointClippingBehavior(len(_PointClippingBehavior_index)-1) {
		return "PointClippingBehavior(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PointClippingBehavior_name[_PointClippingBehavior_index[i]:_PointClippingBehavior_index[i+1]]
}
